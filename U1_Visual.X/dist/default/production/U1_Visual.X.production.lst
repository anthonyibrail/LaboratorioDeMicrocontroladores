

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Fri Nov 27 16:20:27 2020

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63  0000                     
    64                           ; Version 1.43
    65                           ; Generated 25/07/2017 GMT
    66                           ; 
    67                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F4550 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     
    99                           	psect	idataCOMRAM
   100  001678                     __pidataCOMRAM:
   101                           	opt stack 0
   102                           
   103                           ;initializer for _posEne2
   104  001678  005C               	dw	92
   105                           
   106                           ;initializer for _posEne1
   107  00167A  0014               	dw	20
   108                           
   109                           ;initializer for _repeticion
   110  00167C  0001               	dw	1
   111                           
   112                           	psect	smallconst
   113  000800                     __psmallconst:
   114                           	opt stack 0
   115  000800  00                 	db	0
   116  000801                     _dpowers:
   117                           	opt stack 0
   118  000801  0001               	dw	1
   119  000803  000A               	dw	10
   120  000805  0064               	dw	100
   121  000807  03E8               	dw	1000
   122  000809  2710               	dw	10000
   123  00080B                     __end_of_dpowers:
   124                           	opt stack 0
   125  0000                     _TMR3	set	4018
   126  0000                     _TMR3L	set	4018
   127  0000                     _TMR3H	set	4019
   128  0000                     _T3CON	set	4017
   129  0000                     _T2CONbits	set	4042
   130  0000                     _TMR2	set	4044
   131  0000                     _PR2	set	4043
   132  0000                     _T2CON	set	4042
   133  0000                     _T3CONbits	set	4017
   134  0000                     _CCPR2H	set	4028
   135  0000                     _CCPR2L	set	4027
   136  0000                     _CCP2CON	set	4026
   137  0000                     _TMR1H	set	4047
   138  0000                     _TMR1L	set	4046
   139  0000                     _T1CONbits	set	4045
   140  0000                     _T1CON	set	4045
   141  0000                     _TMR0H	set	4055
   142  0000                     _TMR0L	set	4054
   143  0000                     _T0CONbits	set	4053
   144  0000                     _T0CON	set	4053
   145  0000                     _SSPSTATbits	set	4039
   146  0000                     _TRISAbits	set	3986
   147  0000                     _EEDATA	set	4008
   148  0000                     _EEADR	set	4009
   149  0000                     _EECON2	set	4007
   150  0000                     _EECON1bits	set	4006
   151  0000                     _TABLAT	set	4085
   152  0000                     _TBLPTRL	set	4086
   153  0000                     _TBLPTRH	set	4087
   154  0000                     _TBLPTRU	set	4088
   155  0000                     _OSCTUNE	set	3995
   156  0000                     _OSCCON	set	4051
   157  0000                     _INTCON3bits	set	4080
   158  0000                     _PORTB	set	3969
   159  0000                     _PIR2bits	set	4001
   160  0000                     _PIE2bits	set	4000
   161  0000                     _INTCONbits	set	4082
   162  0000                     _IPR2bits	set	4002
   163  0000                     _INTCON2bits	set	4081
   164  0000                     _IPR1bits	set	3999
   165  0000                     _SSPBUF	set	4041
   166  0000                     _SSPCON2bits	set	4037
   167  0000                     _SSPCON1bits	set	4038
   168  0000                     _SSPCON2	set	4037
   169  0000                     _SSPADD	set	4040
   170  0000                     _SSPCON1	set	4038
   171  0000                     _SSPSTAT	set	4039
   172  0000                     _TXREG1	set	4013
   173  0000                     _RCSTA1bits	set	4011
   174  0000                     _SPBRGH	set	4016
   175  0000                     _SPBRG1	set	4015
   176  0000                     _TXSTA1	set	4012
   177  0000                     _RCSTA1	set	4011
   178  0000                     _BAUDCON	set	4024
   179  0000                     _ADCON0bits	set	4034
   180  0000                     _PIE1bits	set	3997
   181  0000                     _PIR1bits	set	3998
   182  0000                     _ADRESH	set	4036
   183  0000                     _ADRESL	set	4035
   184  0000                     _ADCON2	set	4032
   185  0000                     _ADCON1bits	set	4033
   186  0000                     _ADCON0	set	4034
   187  0000                     _TRISDbits	set	3989
   188  0000                     _TRISD	set	3989
   189  0000                     _PORTD	set	3971
   190  0000                     _LATDbits	set	3980
   191  0000                     _TRISBbits	set	3987
   192  0000                     _PORTBbits	set	3969
   193  0000                     _IPEN	set	32391
   194  00080B                     STR_5:
   195  00080B  50                 	db	80	;'P'
   196  00080C  3A                 	db	58	;':'
   197  00080D  25                 	db	37
   198  00080E  64                 	db	100	;'d'
   199  00080F  00                 	db	0
   200  000810                     STR_3:
   201  000810  3E                 	db	62	;'>'
   202  000811  00                 	db	0
   203  000812                     STR_1:
   204  000812  4F                 	db	79	;'O'
   205  000813  00                 	db	0
   206  0000                     
   207                           ; #config settings
   208  000814  00                 	db	0	; dummy byte at the end
   209  0000                     
   210                           	psect	cinit
   211  00131A                     __pcinit:
   212                           	opt stack 0
   213  00131A                     start_initialization:
   214                           	opt stack 0
   215  00131A                     __initialization:
   216                           	opt stack 0
   217                           
   218                           ; Initialize objects allocated to COMRAM (6 bytes)
   219                           ; load TBLPTR registers with __pidataCOMRAM
   220  00131A  0E78               	movlw	low __pidataCOMRAM
   221  00131C  6EF6               	movwf	tblptrl,c
   222  00131E  0E16               	movlw	high __pidataCOMRAM
   223  001320  6EF7               	movwf	tblptrh,c
   224  001322  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   225  001324  6EF8               	movwf	tblptru,c
   226  001326  EE00  F042         	lfsr	0,__pdataCOMRAM
   227  00132A  EE10 F006          	lfsr	1,6
   228  00132E                     copy_data0:
   229  00132E  0009               	tblrd		*+
   230  001330  CFF5 FFEE          	movff	tablat,postinc0
   231  001334  50E5               	movf	postdec1,w,c
   232  001336  50E1               	movf	fsr1l,w,c
   233  001338  E1FA               	bnz	copy_data0
   234                           
   235                           ; Clear objects allocated to BANK0 (95 bytes)
   236  00133A  EE00  F060         	lfsr	0,__pbssBANK0
   237  00133E  0E5F               	movlw	95
   238  001340                     clear_0:
   239  001340  6AEE               	clrf	postinc0,c
   240  001342  06E8               	decf	wreg,f,c
   241  001344  E1FD               	bnz	clear_0
   242                           
   243                           ; Clear objects allocated to COMRAM (36 bytes)
   244  001346  EE00  F001         	lfsr	0,__pbssCOMRAM
   245  00134A  0E24               	movlw	36
   246  00134C                     clear_1:
   247  00134C  6AEE               	clrf	postinc0,c
   248  00134E  06E8               	decf	wreg,f,c
   249  001350  E1FD               	bnz	clear_1
   250  001352                     end_of_initialization:
   251                           	opt stack 0
   252  001352                     __end_of__initialization:
   253                           	opt stack 0
   254  001352  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   255  001354  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   256  001356  0E00               	movlw	low (__Lmediumconst shr (0+16))
   257  001358  6EF8               	movwf	tblptru,c
   258  00135A  0100               	movlb	0
   259  00135C  EF04  F00B         	goto	_main	;jump to C main() function
   260                           tblptru	equ	0xFF8
   261                           tblptrh	equ	0xFF7
   262                           tblptrl	equ	0xFF6
   263                           tablat	equ	0xFF5
   264                           postinc0	equ	0xFEE
   265                           wreg	equ	0xFE8
   266                           postdec1	equ	0xFE5
   267                           fsr1l	equ	0xFE1
   268                           
   269                           	psect	bssCOMRAM
   270  000001                     __pbssCOMRAM:
   271                           	opt stack 0
   272  000001                     _i2c1_object:
   273                           	opt stack 0
   274  000001                     	ds	7
   275  000008                     _timer3ReloadVal:
   276                           	opt stack 0
   277  000008                     	ds	2
   278  00000A                     _timer1ReloadVal:
   279                           	opt stack 0
   280  00000A                     	ds	2
   281  00000C                     _timer0ReloadVal:
   282                           	opt stack 0
   283  00000C                     	ds	2
   284  00000E                     _posDrive:
   285                           	opt stack 0
   286  00000E                     	ds	2
   287  000010                     _puntos:
   288                           	opt stack 0
   289  000010                     	ds	2
   290  000012                     _p_i2c1_trb_current:
   291                           	opt stack 0
   292  000012                     	ds	2
   293  000014                     _TMR3_InterruptHandler:
   294                           	opt stack 0
   295  000014                     	ds	2
   296  000016                     _timer0ReloadVal8bit:
   297                           	opt stack 0
   298  000016                     	ds	1
   299  000017                     I2C1_ISR@i2c_10bit_address_restart:
   300                           	opt stack 0
   301  000017                     	ds	1
   302  000018                     I2C1_ISR@i2c_bytes_left:
   303                           	opt stack 0
   304  000018                     	ds	1
   305  000019                     _i2c1_trb_count:
   306                           	opt stack 0
   307  000019                     	ds	1
   308  00001A                     _i2c1_state:
   309                           	opt stack 0
   310  00001A                     	ds	1
   311  00001B                     _eusart1RxCount:
   312                           	opt stack 0
   313  00001B                     	ds	1
   314  00001C                     _eusart1RxTail:
   315                           	opt stack 0
   316  00001C                     	ds	1
   317  00001D                     	ds	1
   318  00001E                     _eusart1TxBufferRemaining:
   319                           	opt stack 0
   320  00001E                     	ds	1
   321  00001F                     _eusart1TxTail:
   322                           	opt stack 0
   323  00001F                     	ds	1
   324  000020                     _eusart1TxHead:
   325                           	opt stack 0
   326  000020                     	ds	1
   327  000021                     _ADC_Flag:
   328                           	opt stack 0
   329  000021                     	ds	1
   330  000022                     WriteSWSPI@input:
   331                           	opt stack 0
   332  000022                     	ds	1
   333  000023                     I2C1_ISR@i2c_address:
   334                           	opt stack 0
   335  000023                     	ds	2
   336                           tblptru	equ	0xFF8
   337                           tblptrh	equ	0xFF7
   338                           tblptrl	equ	0xFF6
   339                           tablat	equ	0xFF5
   340                           postinc0	equ	0xFEE
   341                           wreg	equ	0xFE8
   342                           postdec1	equ	0xFE5
   343                           fsr1l	equ	0xFE1
   344                           
   345                           	psect	dataCOMRAM
   346  000042                     __pdataCOMRAM:
   347                           	opt stack 0
   348  000042                     _posEne2:
   349                           	opt stack 0
   350  000042                     	ds	2
   351  000044                     _posEne1:
   352                           	opt stack 0
   353  000044                     	ds	2
   354  000046                     _repeticion:
   355                           	opt stack 0
   356  000046                     	ds	2
   357                           tblptru	equ	0xFF8
   358                           tblptrh	equ	0xFF7
   359                           tblptrl	equ	0xFF6
   360                           tablat	equ	0xFF5
   361                           postinc0	equ	0xFEE
   362                           wreg	equ	0xFE8
   363                           postdec1	equ	0xFE5
   364                           fsr1l	equ	0xFE1
   365                           
   366                           	psect	bssBANK0
   367  000060                     __pbssBANK0:
   368                           	opt stack 0
   369  000060                     _eusart1RxBuffer:
   370                           	opt stack 0
   371  000060                     	ds	50
   372  000092                     _eusart1TxBuffer:
   373                           	opt stack 0
   374  000092                     	ds	8
   375  00009A                     _posEnemy:
   376                           	opt stack 0
   377  00009A                     	ds	2
   378  00009C                     I2C1_ISR@pi2c_buf_ptr:
   379                           	opt stack 0
   380  00009C                     	ds	2
   381  00009E                     _p_i2c1_current:
   382                           	opt stack 0
   383  00009E                     	ds	2
   384  0000A0                     _ADC_Value:
   385                           	opt stack 0
   386  0000A0                     	ds	2
   387  0000A2                     _TMR2_InterruptHandler:
   388                           	opt stack 0
   389  0000A2                     	ds	2
   390  0000A4                     _TMR1_InterruptHandler:
   391                           	opt stack 0
   392  0000A4                     	ds	2
   393  0000A6                     I2C1_MasterRead@trBlock:
   394                           	opt stack 0
   395  0000A6                     	ds	6
   396  0000AC                     I2C1_MasterWrite@trBlock:
   397                           	opt stack 0
   398  0000AC                     	ds	6
   399  0000B2                     _i2c1_tr_queue:
   400                           	opt stack 0
   401  0000B2                     	ds	6
   402  0000B8                     _buffer:
   403                           	opt stack 0
   404  0000B8                     	ds	5
   405  0000BD                     _D_Buffer:
   406                           	opt stack 0
   407  0000BD                     	ds	2
   408                           tblptru	equ	0xFF8
   409                           tblptrh	equ	0xFF7
   410                           tblptrl	equ	0xFF6
   411                           tablat	equ	0xFF5
   412                           postinc0	equ	0xFEE
   413                           wreg	equ	0xFE8
   414                           postdec1	equ	0xFE5
   415                           fsr1l	equ	0xFE1
   416                           
   417                           	psect	cstackBANK0
   418  0000BF                     __pcstackBANK0:
   419                           	opt stack 0
   420  0000BF                     ___lwdiv@counter:
   421                           	opt stack 0
   422                           
   423                           ; 1 bytes @ 0x0
   424  0000BF                     	ds	1
   425  0000C0                     ___lwdiv@quotient:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0x1
   429  0000C0                     	ds	2
   430  0000C2                     ?___lwmod:
   431                           	opt stack 0
   432  0000C2                     ___lwmod@dividend:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x3
   436  0000C2                     	ds	2
   437  0000C4                     ___lwmod@divisor:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x5
   441  0000C4                     	ds	2
   442  0000C6                     ?_sprintf:
   443                           	opt stack 0
   444  0000C6                     sprintf@sp:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x7
   448  0000C6                     	ds	2
   449  0000C8                     sprintf@f:
   450                           	opt stack 0
   451                           
   452                           ; 2 bytes @ 0x9
   453  0000C8                     	ds	4
   454  0000CC                     sprintf@ap:
   455                           	opt stack 0
   456                           
   457                           ; 2 bytes @ 0xD
   458  0000CC                     	ds	2
   459  0000CE                     sprintf@flag:
   460                           	opt stack 0
   461                           
   462                           ; 1 bytes @ 0xF
   463  0000CE                     	ds	1
   464  0000CF                     sprintf@prec:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0x10
   468  0000CF                     	ds	1
   469  0000D0                     sprintf@val:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x11
   473  0000D0                     	ds	2
   474  0000D2                     sprintf@c:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0x13
   478  0000D2                     	ds	1
   479  0000D3                     ??_drive:
   480                           
   481                           ; 1 bytes @ 0x14
   482  0000D3                     	ds	2
   483                           tblptru	equ	0xFF8
   484                           tblptrh	equ	0xFF7
   485                           tblptrl	equ	0xFF6
   486                           tablat	equ	0xFF5
   487                           postinc0	equ	0xFEE
   488                           wreg	equ	0xFE8
   489                           postdec1	equ	0xFE5
   490                           fsr1l	equ	0xFE1
   491                           
   492                           	psect	cstackCOMRAM
   493  000025                     __pcstackCOMRAM:
   494                           	opt stack 0
   495  000025                     ??_I2C1_ISR:
   496  000025                     ?_ADC_GetConversionResult:
   497                           	opt stack 0
   498  000025                     
   499                           ; 1 bytes @ 0x0
   500  000025                     	ds	2
   501  000027                     ??_ADC_GetConversionResult:
   502                           
   503                           ; 1 bytes @ 0x2
   504  000027                     	ds	2
   505  000029                     ??_INTERRUPT_InterruptManager:
   506                           
   507                           ; 1 bytes @ 0x4
   508  000029                     	ds	18
   509  00003B                     INTERRUPT_InterruptManager@__portb__:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0x16
   513  00003B                     	ds	1
   514  00003C                     ??_DelayPORXLCD:
   515  00003C                     ??_Delay10KTCYx:
   516  00003C                     ??_SetDDRamAddr:
   517  00003C                     ??_ADC_StartConversion:
   518  00003C                     ??_marcador:
   519  00003C                     ?___lwdiv:
   520                           	opt stack 0
   521  00003C                     WriteCmdXLCD@cmd:
   522                           	opt stack 0
   523  00003C                     WriteDataXLCD@data:
   524                           	opt stack 0
   525  00003C                     ___lwdiv@dividend:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0x17
   529  00003C                     	ds	1
   530  00003D                     ADC_StartConversion@channel:
   531                           	opt stack 0
   532  00003D                     Delay10KTCYx@unit:
   533                           	opt stack 0
   534  00003D                     putrsXLCD@buffer:
   535                           	opt stack 0
   536  00003D                     putsXLCD@buffer:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x18
   540  00003D                     	ds	1
   541  00003E                     ___lwdiv@divisor:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x19
   545  00003E                     	ds	1
   546  00003F                     SetDDRamAddr@DDaddr:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x1A
   550  00003F                     	ds	1
   551  000040                     OpenXLCD@lcdtype:
   552                           	opt stack 0
   553  000040                     ___lwmod@counter:
   554                           	opt stack 0
   555                           
   556                           ; 1 bytes @ 0x1B
   557  000040                     	ds	1
   558  000041                     ??_sprintf:
   559  000041                     
   560                           ; 1 bytes @ 0x1C
   561  000041                     	ds	1
   562  000042                     tblptru	equ	0xFF8
   563                           tblptrh	equ	0xFF7
   564                           tblptrl	equ	0xFF6
   565                           tablat	equ	0xFF5
   566                           postinc0	equ	0xFEE
   567                           wreg	equ	0xFE8
   568                           postdec1	equ	0xFE5
   569                           fsr1l	equ	0xFE1
   570                           
   571                           ; 1 bytes @ 0x1D
   572 ;;
   573 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   574 ;;
   575 ;; *************** function _main *****************
   576 ;; Defined at:
   577 ;;		line 261 in file "main.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;		None
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   591 ;;      Params:         0       0       0       0       0       0       0       0       0
   592 ;;      Locals:         0       0       0       0       0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0       0       0       0       0
   594 ;;      Totals:         0       0       0       0       0       0       0       0       0
   595 ;;Total ram usage:        0 bytes
   596 ;; Hardware stack levels required when called:    8
   597 ;; This function calls:
   598 ;;		_ADC_StartConversion
   599 ;;		_SYSTEM_Initialize
   600 ;;		_drive
   601 ;; This function is called by:
   602 ;;		Startup code after reset
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           	psect	text0
   607  001608                     __ptext0:
   608                           	opt stack 0
   609  001608                     _main:
   610                           	opt stack 23
   611                           
   612                           ;main.c: 264: SYSTEM_Initialize();
   613                           
   614                           ;incstack = 0
   615  001608  ECEE  F00A         	call	_SYSTEM_Initialize	;wreg free
   616                           
   617                           ;main.c: 268: (INTCONbits.GIE = 1);
   618  00160C  8EF2               	bsf	intcon,7,c	;volatile
   619                           
   620                           ;main.c: 271: (INTCONbits.PEIE = 1);
   621  00160E  8CF2               	bsf	intcon,6,c	;volatile
   622                           
   623                           ;main.c: 280: ADC_StartConversion(0);
   624  001610  0E00               	movlw	0
   625  001612  ECBB  F00A         	call	_ADC_StartConversion
   626  001616                     
   627                           ;main.c: 283: {
   628                           ;main.c: 284: drive();
   629  001616  EC04  F006         	call	_drive	;wreg free
   630  00161A  D7FD               	goto	l684
   631  00161C                     __end_of_main:
   632                           	opt stack 0
   633                           tblptru	equ	0xFF8
   634                           tblptrh	equ	0xFF7
   635                           tblptrl	equ	0xFF6
   636                           tablat	equ	0xFF5
   637                           intcon	equ	0xFF2
   638                           postinc0	equ	0xFEE
   639                           wreg	equ	0xFE8
   640                           postdec1	equ	0xFE5
   641                           fsr1l	equ	0xFE1
   642                           
   643 ;; *************** function _drive *****************
   644 ;; Defined at:
   645 ;;		line 170 in file "main.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;		None
   648 ;; Auto vars:     Size  Location     Type
   649 ;;		None
   650 ;; Return value:  Size  Location     Type
   651 ;;                  1    wreg      void 
   652 ;; Registers used:
   653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   659 ;;      Params:         0       0       0       0       0       0       0       0       0
   660 ;;      Locals:         0       0       0       0       0       0       0       0       0
   661 ;;      Temps:          0       2       0       0       0       0       0       0       0
   662 ;;      Totals:         0       2       0       0       0       0       0       0       0
   663 ;;Total ram usage:        2 bytes
   664 ;; Hardware stack levels used:    1
   665 ;; Hardware stack levels required when called:    7
   666 ;; This function calls:
   667 ;;		_ADC_StartConversion
   668 ;;		_BusyXLCD
   669 ;;		_SetDDRamAddr
   670 ;;		_WriteCmdXLCD
   671 ;;		_enemigo1
   672 ;;		_enemigo2
   673 ;;		_marcador
   674 ;;		_putrsXLCD
   675 ;;		_putsXLCD
   676 ;;		_restarPuntos
   677 ;;		_sprintf
   678 ;; This function is called by:
   679 ;;		_main
   680 ;; This function uses a non-reentrant model
   681 ;;
   682                           
   683                           	psect	text1
   684  000C08                     __ptext1:
   685                           	opt stack 0
   686  000C08                     _drive:
   687                           	opt stack 23
   688                           
   689                           ;main.c: 172: while(repeticion <= 90){
   690                           
   691                           ;incstack = 0
   692  000C08  D09F               	goto	l642
   693  000C0A                     
   694                           ;main.c: 173: if(ADC_Flag == 1){
   695  000C0A  0421               	decf	_ADC_Flag,w,c
   696  000C0C  A4D8               	btfss	status,2,c
   697  000C0E  D094               	goto	l668
   698                           
   699                           ;main.c: 176: ADC_Flag = 0;
   700  000C10  0E00               	movlw	0
   701  000C12  6E21               	movwf	_ADC_Flag,c
   702                           
   703                           ;main.c: 177: ADC_StartConversion(0);
   704  000C14  0E00               	movlw	0
   705  000C16  ECBB  F00A         	call	_ADC_StartConversion
   706                           
   707                           ;main.c: 180: enemigo1();
   708  000C1A  EC85  F00A         	call	_enemigo1	;wreg free
   709                           
   710                           ;main.c: 181: enemigo2();
   711  000C1E  EC71  F00A         	call	_enemigo2	;wreg free
   712                           
   713                           ;main.c: 183: if(ADC_Value > 511){
   714  000C22  0E02               	movlw	2
   715  000C24  0100               	movlb	0	; () banked
   716  000C26  5DA1               	subwf	(_ADC_Value+1)& (0+255),w,b
   717  000C28  A0D8               	btfss	status,0,c
   718  000C2A  D03D               	goto	l645
   719                           
   720                           ; BSR set to: 0
   721                           ;main.c: 185: posDrive = 64;
   722  000C2C  0E00               	movlw	0
   723  000C2E  6E0F               	movwf	_posDrive+1,c
   724  000C30  0E40               	movlw	64
   725  000C32  6E0E               	movwf	_posDrive,c
   726  000C34                     
   727                           ; BSR set to: 0
   728                           
   729                           ; BSR set to: 0
   730  000C34  EC0C  F00A         	call	_BusyXLCD	;wreg free
   731  000C38  0900               	iorlw	0
   732  000C3A  A4D8               	btfss	status,2,c
   733  000C3C  D7FB               	goto	l647
   734                           
   735                           ;main.c: 187: SetDDRamAddr(posDrive);
   736  000C3E  500E               	movf	_posDrive,w,c
   737  000C40  EC64  F009         	call	_SetDDRamAddr
   738  000C44  EC0C  F00A         	call	_BusyXLCD	;wreg free
   739  000C48  0900               	iorlw	0
   740  000C4A  A4D8               	btfss	status,2,c
   741  000C4C  D7FB               	goto	l650
   742                           
   743                           ;main.c: 190: putrsXLCD(">");
   744  000C4E  0E10               	movlw	low STR_3
   745  000C50  6E3D               	movwf	putrsXLCD@buffer,c
   746  000C52  0E08               	movlw	high STR_3
   747  000C54  6E3E               	movwf	putrsXLCD@buffer+1,c
   748  000C56  EC29  F00A         	call	_putrsXLCD	;wreg free
   749                           
   750                           ;main.c: 192: marcador();
   751  000C5A  EC1E  F005         	call	_marcador	;wreg free
   752                           
   753                           ;main.c: 194: if(posEne1 > 0){
   754  000C5E  5044               	movf	_posEne1,w,c
   755  000C60  1045               	iorwf	_posEne1+1,w,c
   756  000C62  B4D8               	btfsc	status,2,c
   757  000C64  D004               	goto	l652
   758                           
   759                           ;main.c: 195: posEne1--;
   760  000C66  0644               	decf	_posEne1,f,c
   761  000C68  A0D8               	btfss	status,0,c
   762  000C6A  0645               	decf	_posEne1+1,f,c
   763                           
   764                           ;main.c: 196: }
   765  000C6C  D004               	goto	l653
   766  000C6E                     l652:
   767                           
   768                           ;main.c: 197: else{
   769                           ;main.c: 198: posEne1 = 15;
   770  000C6E  0E00               	movlw	0
   771  000C70  6E45               	movwf	_posEne1+1,c
   772  000C72  0E0F               	movlw	15
   773  000C74  6E44               	movwf	_posEne1,c
   774  000C76                     l653:
   775                           
   776                           ;main.c: 199: }
   777                           ;main.c: 201: if(posEne2 > 64){
   778  000C76  5043               	movf	_posEne2+1,w,c
   779  000C78  E104               	bnz	u4320
   780  000C7A  0E41               	movlw	65
   781  000C7C  5C42               	subwf	_posEne2,w,c
   782  000C7E  A0D8               	btfss	status,0,c
   783  000C80  D004               	goto	l654
   784  000C82                     u4320:
   785                           
   786                           ;main.c: 202: posEne2--;
   787  000C82  0642               	decf	_posEne2,f,c
   788  000C84  A0D8               	btfss	status,0,c
   789  000C86  0643               	decf	_posEne2+1,f,c
   790                           
   791                           ;main.c: 203: }
   792  000C88  D004               	goto	l655
   793  000C8A                     l654:
   794                           
   795                           ;main.c: 204: else{
   796                           ;main.c: 205: posEne2 = 79;
   797  000C8A  0E00               	movlw	0
   798  000C8C  6E43               	movwf	_posEne2+1,c
   799  000C8E  0E4F               	movlw	79
   800  000C90  6E42               	movwf	_posEne2,c
   801  000C92                     l655:
   802                           
   803                           ;main.c: 206: }
   804                           ;main.c: 208: if(posDrive == posEne2){
   805  000C92  5042               	movf	_posEne2,w,c
   806  000C94  180E               	xorwf	_posDrive,w,c
   807  000C96  E150               	bnz	l5013
   808  000C98  5043               	movf	_posEne2+1,w,c
   809  000C9A  180F               	xorwf	_posDrive+1,w,c
   810  000C9C  A4D8               	btfss	status,2,c
   811  000C9E  D04C               	goto	l668
   812                           
   813                           ;main.c: 209: restarPuntos();
   814  000CA0  EC50  F008         	call	_restarPuntos	;wreg free
   815                           
   816                           ;main.c: 210: }
   817                           ;main.c: 212: }
   818  000CA4  D049               	goto	l668
   819  000CA6                     l645:
   820                           
   821                           ;main.c: 213: else{
   822                           ;main.c: 214: posDrive = 0;
   823  000CA6  0E00               	movlw	0
   824  000CA8  6E0F               	movwf	_posDrive+1,c
   825  000CAA  0E00               	movlw	0
   826  000CAC  6E0E               	movwf	_posDrive,c
   827  000CAE  EC0C  F00A         	call	_BusyXLCD	;wreg free
   828  000CB2  0900               	iorlw	0
   829  000CB4  A4D8               	btfss	status,2,c
   830  000CB6  D7FB               	goto	l659
   831                           
   832                           ;main.c: 217: SetDDRamAddr(posDrive);
   833  000CB8  500E               	movf	_posDrive,w,c
   834  000CBA  EC64  F009         	call	_SetDDRamAddr
   835                           
   836                           ;main.c: 219: sprintf(D_Buffer, ">");
   837  000CBE  0EBD               	movlw	low _D_Buffer
   838  000CC0  0100               	movlb	0	; () banked
   839  000CC2  6FC6               	movwf	sprintf@sp& (0+255),b
   840  000CC4  0E00               	movlw	high _D_Buffer
   841  000CC6  0100               	movlb	0	; () banked
   842  000CC8  6FC7               	movwf	(sprintf@sp+1)& (0+255),b
   843  000CCA  0E10               	movlw	low STR_3
   844  000CCC  0100               	movlb	0	; () banked
   845  000CCE  6FC8               	movwf	sprintf@f& (0+255),b
   846  000CD0  0E08               	movlw	high STR_3
   847  000CD2  0100               	movlb	0	; () banked
   848  000CD4  6FC9               	movwf	(sprintf@f+1)& (0+255),b
   849  000CD6  ECDE  F006         	call	_sprintf	;wreg free
   850  000CDA  EC0C  F00A         	call	_BusyXLCD	;wreg free
   851  000CDE  0900               	iorlw	0
   852  000CE0  A4D8               	btfss	status,2,c
   853  000CE2  D7FB               	goto	l662
   854                           
   855                           ;main.c: 221: putsXLCD(D_Buffer);
   856  000CE4  0EBD               	movlw	low _D_Buffer
   857  000CE6  6E3D               	movwf	putsXLCD@buffer,c
   858  000CE8  0E00               	movlw	high _D_Buffer
   859  000CEA  6E3E               	movwf	putsXLCD@buffer+1,c
   860  000CEC  EC43  F00A         	call	_putsXLCD	;wreg free
   861                           
   862                           ;main.c: 223: marcador();
   863  000CF0  EC1E  F005         	call	_marcador	;wreg free
   864                           
   865                           ;main.c: 225: if(posEne1 > 0){
   866  000CF4  5044               	movf	_posEne1,w,c
   867  000CF6  1045               	iorwf	_posEne1+1,w,c
   868  000CF8  B4D8               	btfsc	status,2,c
   869  000CFA  D004               	goto	l664
   870                           
   871                           ;main.c: 226: posEne1--;
   872  000CFC  0644               	decf	_posEne1,f,c
   873  000CFE  A0D8               	btfss	status,0,c
   874  000D00  0645               	decf	_posEne1+1,f,c
   875                           
   876                           ;main.c: 227: }
   877  000D02  D004               	goto	l665
   878  000D04                     l664:
   879                           
   880                           ;main.c: 228: else{
   881                           ;main.c: 229: posEne1 = 15;
   882  000D04  0E00               	movlw	0
   883  000D06  6E45               	movwf	_posEne1+1,c
   884  000D08  0E0F               	movlw	15
   885  000D0A  6E44               	movwf	_posEne1,c
   886  000D0C                     l665:
   887                           
   888                           ;main.c: 230: }
   889                           ;main.c: 232: if(posEne2 > 64){
   890  000D0C  5043               	movf	_posEne2+1,w,c
   891  000D0E  E104               	bnz	u4370
   892  000D10  0E41               	movlw	65
   893  000D12  5C42               	subwf	_posEne2,w,c
   894  000D14  A0D8               	btfss	status,0,c
   895  000D16  D004               	goto	l666
   896  000D18                     u4370:
   897                           
   898                           ;main.c: 233: posEne2--;
   899  000D18  0642               	decf	_posEne2,f,c
   900  000D1A  A0D8               	btfss	status,0,c
   901  000D1C  0643               	decf	_posEne2+1,f,c
   902                           
   903                           ;main.c: 234: }
   904  000D1E  D004               	goto	l667
   905  000D20                     l666:
   906                           
   907                           ;main.c: 235: else{
   908                           ;main.c: 236: posEne2 = 79;
   909  000D20  0E00               	movlw	0
   910  000D22  6E43               	movwf	_posEne2+1,c
   911  000D24  0E4F               	movlw	79
   912  000D26  6E42               	movwf	_posEne2,c
   913  000D28                     l667:
   914                           
   915                           ;main.c: 237: }
   916                           ;main.c: 239: if(posDrive == posEne1){
   917  000D28  5044               	movf	_posEne1,w,c
   918  000D2A  180E               	xorwf	_posDrive,w,c
   919  000D2C  E105               	bnz	l5013
   920  000D2E  5045               	movf	_posEne1+1,w,c
   921  000D30  180F               	xorwf	_posDrive+1,w,c
   922  000D32  B4D8               	btfsc	status,2,c
   923                           
   924                           ;main.c: 240: restarPuntos();
   925  000D34  EC50  F008         	call	_restarPuntos	;wreg free
   926  000D38                     l668:
   927  000D38                     l5013:
   928  000D38  EC0C  F00A         	call	_BusyXLCD	;wreg free
   929  000D3C  0900               	iorlw	0
   930  000D3E  A4D8               	btfss	status,2,c
   931  000D40  D7FB               	goto	l668
   932                           
   933                           ;main.c: 247: WriteCmdXLCD(0x01);
   934  000D42  0E01               	movlw	1
   935  000D44  ECCF  F009         	call	_WriteCmdXLCD
   936  000D48                     l642:
   937  000D48  5047               	movf	_repeticion+1,w,c
   938  000D4A  E104               	bnz	l5019
   939  000D4C  0E5B               	movlw	91
   940  000D4E  5C46               	subwf	_repeticion,w,c
   941  000D50  A0D8               	btfss	status,0,c
   942  000D52  D75B               	goto	l643
   943  000D54                     u4400:
   944  000D54                     l5019:
   945  000D54  EC0C  F00A         	call	_BusyXLCD	;wreg free
   946  000D58  0900               	iorlw	0
   947  000D5A  A4D8               	btfss	status,2,c
   948  000D5C  D7FB               	goto	u4400
   949                           
   950                           ;main.c: 252: SetDDRamAddr(75);
   951  000D5E  0E4B               	movlw	75
   952  000D60  EC64  F009         	call	_SetDDRamAddr
   953                           
   954                           ;main.c: 254: sprintf(buffer, "P:%d", puntos);
   955  000D64  0EB8               	movlw	low _buffer
   956  000D66  0100               	movlb	0	; () banked
   957  000D68  6FC6               	movwf	sprintf@sp& (0+255),b
   958  000D6A  0E00               	movlw	high _buffer
   959  000D6C  0100               	movlb	0	; () banked
   960  000D6E  6FC7               	movwf	(sprintf@sp+1)& (0+255),b
   961  000D70  0E0B               	movlw	low STR_5
   962  000D72  0100               	movlb	0	; () banked
   963  000D74  6FC8               	movwf	sprintf@f& (0+255),b
   964  000D76  0E08               	movlw	high STR_5
   965  000D78  0100               	movlb	0	; () banked
   966  000D7A  6FC9               	movwf	(sprintf@f+1)& (0+255),b
   967  000D7C  C010  F0CA         	movff	_puntos,?_sprintf+4
   968  000D80  C011  F0CB         	movff	_puntos+1,?_sprintf+5
   969  000D84  ECDE  F006         	call	_sprintf	;wreg free
   970  000D88  EC0C  F00A         	call	_BusyXLCD	;wreg free
   971  000D8C  0900               	iorlw	0
   972  000D8E  A4D8               	btfss	status,2,c
   973  000D90  D7FB               	goto	l677
   974                           
   975                           ;main.c: 256: putsXLCD(buffer);
   976  000D92  0EB8               	movlw	low _buffer
   977  000D94  6E3D               	movwf	putsXLCD@buffer,c
   978  000D96  0E00               	movlw	high _buffer
   979  000D98  6E3E               	movwf	putsXLCD@buffer+1,c
   980  000D9A  EC43  F00A         	call	_putsXLCD	;wreg free
   981                           
   982                           ;main.c: 257: _delay((unsigned long)((1000)*(24000000ul/4000.0)));
   983  000D9E  0E1F               	movlw	31
   984  000DA0  0100               	movlb	0	; () banked
   985  000DA2  6FD4               	movwf	(??_drive+1)& (0+255),b
   986  000DA4  0E71               	movlw	113
   987  000DA6  0100               	movlb	0	; () banked
   988  000DA8  6FD3               	movwf	??_drive& (0+255),b
   989  000DAA  0E1E               	movlw	30
   990  000DAC                     u4437:
   991  000DAC  2EE8               	decfsz	wreg,f,c
   992  000DAE  D7FE               	bra	u4437
   993  000DB0  2FD3               	decfsz	??_drive& (0+255),f,b
   994  000DB2  D7FC               	bra	u4437
   995  000DB4  2FD4               	decfsz	(??_drive+1)& (0+255),f,b
   996  000DB6  D7FA               	bra	u4437
   997  000DB8  F000               	nop	
   998  000DBA  0012               	return		;funcret
   999  000DBC                     __end_of_drive:
  1000                           	opt stack 0
  1001                           tblptru	equ	0xFF8
  1002                           tblptrh	equ	0xFF7
  1003                           tblptrl	equ	0xFF6
  1004                           tablat	equ	0xFF5
  1005                           intcon	equ	0xFF2
  1006                           postinc0	equ	0xFEE
  1007                           wreg	equ	0xFE8
  1008                           postdec1	equ	0xFE5
  1009                           fsr1l	equ	0xFE1
  1010                           status	equ	0xFD8
  1011                           
  1012 ;; *************** function _sprintf *****************
  1013 ;; Defined at:
  1014 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;  sp              2    7[BANK0 ] PTR unsigned char 
  1017 ;;		 -> buffer(5), D_Buffer(2), 
  1018 ;;  f               2    9[BANK0 ] PTR const unsigned char 
  1019 ;;		 -> STR_5(5), STR_4(2), 
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;  tmpval          4    0        struct .
  1022 ;;  cp              3    0        PTR const unsigned char 
  1023 ;;  val             2   17[BANK0 ] unsigned int 
  1024 ;;  ap              2   13[BANK0 ] PTR void [1]
  1025 ;;		 -> ?_sprintf(2), 
  1026 ;;  len             2    0        unsigned int 
  1027 ;;  c               1   19[BANK0 ] char 
  1028 ;;  prec            1   16[BANK0 ] char 
  1029 ;;  flag            1   15[BANK0 ] unsigned char 
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  2    7[BANK0 ] int 
  1032 ;; Registers used:
  1033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1039 ;;      Params:         0       6       0       0       0       0       0       0       0
  1040 ;;      Locals:         0       7       0       0       0       0       0       0       0
  1041 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1042 ;;      Totals:         1      13       0       0       0       0       0       0       0
  1043 ;;Total ram usage:       14 bytes
  1044 ;; Hardware stack levels used:    1
  1045 ;; Hardware stack levels required when called:    4
  1046 ;; This function calls:
  1047 ;;		___lwdiv
  1048 ;;		___lwmod
  1049 ;; This function is called by:
  1050 ;;		_drive
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           	psect	text2
  1055  000DBC                     __ptext2:
  1056                           	opt stack 0
  1057  000DBC                     _sprintf:
  1058                           	opt stack 25
  1059                           
  1060                           ;doprnt.c: 494: va_list ap;
  1061                           ;doprnt.c: 499: signed char c;
  1062                           ;doprnt.c: 506: signed char prec;
  1063                           ;doprnt.c: 508: unsigned char flag;
  1064                           ;doprnt.c: 523: union {
  1065                           ;doprnt.c: 524: unsigned long vd;
  1066                           ;doprnt.c: 525: double integ;
  1067                           ;doprnt.c: 526: } tmpval;
  1068                           ;doprnt.c: 528: unsigned int val;
  1069                           ;doprnt.c: 529: unsigned len;
  1070                           ;doprnt.c: 530: const char * cp;
  1071                           ;doprnt.c: 533: *ap = __va_start();
  1072                           
  1073                           ;incstack = 0
  1074  000DBC  0ECA               	movlw	low (?_sprintf+4)
  1075  000DBE  0100               	movlb	0	; () banked
  1076  000DC0  6FCC               	movwf	sprintf@ap& (0+255),b
  1077  000DC2  0E00               	movlw	high (?_sprintf+4)
  1078  000DC4  0100               	movlb	0	; () banked
  1079  000DC6  6FCD               	movwf	(sprintf@ap+1)& (0+255),b
  1080                           
  1081                           ;doprnt.c: 536: while(c = *f++) {
  1082  000DC8  D0A3               	goto	u4250
  1083  000DCA                     
  1084                           ; BSR set to: 0
  1085                           ;doprnt.c: 538: if(c != '%')
  1086                           
  1087                           ; BSR set to: 0
  1088  000DCA  0E25               	movlw	37
  1089  000DCC  0100               	movlb	0	; () banked
  1090  000DCE  19D2               	xorwf	sprintf@c& (0+255),w,b
  1091  000DD0  B4D8               	btfsc	status,2,c
  1092  000DD2  D00A               	goto	l1541
  1093                           
  1094                           ; BSR set to: 0
  1095                           ;doprnt.c: 540: {
  1096                           ;doprnt.c: 541: ((*sp++ = (c)));
  1097  000DD4  C0C6  FFD9         	movff	sprintf@sp,fsr2l
  1098  000DD8  C0C7  FFDA         	movff	sprintf@sp+1,fsr2h
  1099  000DDC  C0D2  FFDF         	movff	sprintf@c,indf2
  1100                           
  1101                           ; BSR set to: 0
  1102  000DE0  0100               	movlb	0	; () banked
  1103  000DE2  4BC6               	infsnz	sprintf@sp& (0+255),f,b
  1104  000DE4  2BC7               	incf	(sprintf@sp+1)& (0+255),f,b
  1105                           
  1106                           ;doprnt.c: 542: continue;
  1107  000DE6  D094               	goto	u4250
  1108  000DE8                     l1541:
  1109                           
  1110                           ; BSR set to: 0
  1111                           ;doprnt.c: 543: }
  1112                           ;doprnt.c: 548: flag = 0;
  1113                           
  1114                           ; BSR set to: 0
  1115  000DE8  0E00               	movlw	0
  1116  000DEA  0100               	movlb	0	; () banked
  1117  000DEC  6FCE               	movwf	sprintf@flag& (0+255),b
  1118                           
  1119                           ; BSR set to: 0
  1120                           
  1121                           ; BSR set to: 0
  1122                           
  1123                           ; BSR set to: 0
  1124                           ;doprnt.c: 822: }
  1125                           
  1126                           ; BSR set to: 0
  1127                           ;doprnt.c: 813: continue;
  1128                           
  1129                           ;doprnt.c: 802: default:
  1130                           
  1131                           ; BSR set to: 0
  1132                           ;doprnt.c: 698: case 'i':
  1133                           ;doprnt.c: 699: break;
  1134                           
  1135                           ; BSR set to: 0
  1136                           
  1137                           ;doprnt.c: 697: case 'd':
  1138                           
  1139                           ; BSR set to: 0
  1140                           ;doprnt.c: 638: goto alldone;
  1141                           
  1142                           ;doprnt.c: 637: case 0:
  1143                           
  1144                           ;doprnt.c: 635: switch(c = *f++) {
  1145  000DEE  C0C8  FFF6         	movff	sprintf@f,tblptrl
  1146  000DF2  C0C9  FFF7         	movff	sprintf@f+1,tblptrh
  1147  000DF6  0100               	movlb	0	; () banked
  1148  000DF8  4BC8               	infsnz	sprintf@f& (0+255),f,b
  1149  000DFA  2BC9               	incf	(sprintf@f+1)& (0+255),f,b
  1150  000DFC                     	if	0	;tblptru may be non-zero
  1151  000DFC                     	endif
  1152  000DFC                     	if	0	;tblptru may be non-zero
  1153  000DFC                     	endif
  1154  000DFC  0008               	tblrd		*
  1155  000DFE  CFF5 F0D2          	movff	tablat,sprintf@c
  1156  000E02  0100               	movlb	0	; () banked
  1157  000E04  51D2               	movf	sprintf@c& (0+255),w,b
  1158                           
  1159                           ; Switch size 1, requested type "space"
  1160                           ; Number of cases is 3, Range of values is 0 to 105
  1161                           ; switch strategies available:
  1162                           ; Name         Instructions Cycles
  1163                           ; simple_byte           10     6 (average)
  1164                           ;	Chosen strategy is simple_byte
  1165  000E06  0A00               	xorlw	0	; case 0
  1166  000E08  B4D8               	btfsc	status,2,c
  1167  000E0A  D090               	goto	u4260
  1168  000E0C  0A64               	xorlw	100	; case 100
  1169  000E0E  B4D8               	btfsc	status,2,c
  1170  000E10  D003               	goto	l1547
  1171  000E12  0A0D               	xorlw	13	; case 105
  1172  000E14  A4D8               	btfss	status,2,c
  1173  000E16  D07C               	goto	u4250
  1174  000E18                     l1547:
  1175                           
  1176                           ; BSR set to: 0
  1177                           ;doprnt.c: 1253: {
  1178                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1179                           
  1180                           ; BSR set to: 0
  1181  000E18  C0CC  FFD9         	movff	sprintf@ap,fsr2l
  1182  000E1C  C0CD  FFDA         	movff	sprintf@ap+1,fsr2h
  1183  000E20  CFDE F0D0          	movff	postinc2,sprintf@val
  1184  000E24  CFDD F0D1          	movff	postdec2,sprintf@val+1
  1185                           
  1186                           ; BSR set to: 0
  1187  000E28  0E02               	movlw	2
  1188  000E2A  0100               	movlb	0	; () banked
  1189  000E2C  27CC               	addwf	sprintf@ap& (0+255),f,b
  1190  000E2E  0E00               	movlw	0
  1191  000E30  23CD               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1192                           
  1193                           ; BSR set to: 0
  1194                           ;doprnt.c: 1261: if((int)val < 0) {
  1195  000E32  0100               	movlb	0	; () banked
  1196  000E34  AFD1               	btfss	(sprintf@val+1)& (0+255),7,b
  1197  000E36  D008               	goto	l1549
  1198                           
  1199                           ; BSR set to: 0
  1200                           ;doprnt.c: 1262: flag |= 0x03;
  1201  000E38  0E03               	movlw	3
  1202  000E3A  0100               	movlb	0	; () banked
  1203  000E3C  13CE               	iorwf	sprintf@flag& (0+255),f,b
  1204                           
  1205                           ; BSR set to: 0
  1206                           ;doprnt.c: 1263: val = -val;
  1207  000E3E  0100               	movlb	0	; () banked
  1208  000E40  6DD0               	negf	sprintf@val& (0+255),b
  1209  000E42  1FD1               	comf	(sprintf@val+1)& (0+255),f,b
  1210  000E44  B0D8               	btfsc	status,0,c
  1211  000E46  2BD1               	incf	(sprintf@val+1)& (0+255),f,b
  1212  000E48                     l1549:
  1213                           
  1214                           ; BSR set to: 0
  1215                           ;doprnt.c: 1264: }
  1216                           ;doprnt.c: 1266: }
  1217                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1218                           
  1219                           ; BSR set to: 0
  1220  000E48  0E01               	movlw	1
  1221  000E4A  0100               	movlb	0	; () banked
  1222  000E4C  6FD2               	movwf	sprintf@c& (0+255),b
  1223  000E4E                     l4907:
  1224                           
  1225                           ; BSR set to: 0
  1226  000E4E  0E05               	movlw	5
  1227  000E50  0100               	movlb	0	; () banked
  1228  000E52  19D2               	xorwf	sprintf@c& (0+255),w,b
  1229  000E54  B4D8               	btfsc	status,2,c
  1230  000E56  D016               	goto	u4230
  1231                           
  1232                           ; BSR set to: 0
  1233                           ;doprnt.c: 1306: if(val < dpowers[c])
  1234                           
  1235                           ; BSR set to: 0
  1236                           
  1237                           ; BSR set to: 0
  1238  000E58  0100               	movlb	0	; () banked
  1239  000E5A  51D2               	movf	sprintf@c& (0+255),w,b
  1240  000E5C  0D02               	mullw	2
  1241  000E5E  0E01               	movlw	low _dpowers
  1242  000E60  24F3               	addwf	prodl,w,c
  1243  000E62  6EF6               	movwf	tblptrl,c
  1244  000E64  0E08               	movlw	high _dpowers
  1245  000E66  20F4               	addwfc	prodh,w,c
  1246  000E68  6EF7               	movwf	tblptrh,c
  1247  000E6A                     	if	0	;There are less than 3 active tblptr bytes
  1248  000E6A                     	endif
  1249  000E6A  0009               	tblrd		*+
  1250  000E6C  50F5               	movf	tablat,w,c
  1251  000E6E  0100               	movlb	0	; () banked
  1252  000E70  5DD0               	subwf	sprintf@val& (0+255),w,b
  1253  000E72  0009               	tblrd		*+
  1254  000E74  50F5               	movf	tablat,w,c
  1255  000E76  0100               	movlb	0	; () banked
  1256  000E78  59D1               	subwfb	(sprintf@val+1)& (0+255),w,b
  1257  000E7A  A0D8               	btfss	status,0,c
  1258  000E7C  D003               	goto	u4230
  1259                           
  1260                           ; BSR set to: 0
  1261                           
  1262                           ; BSR set to: 0
  1263                           
  1264                           ; BSR set to: 0
  1265                           ;doprnt.c: 1307: break;
  1266  000E7E  0100               	movlb	0	; () banked
  1267  000E80  2BD2               	incf	sprintf@c& (0+255),f,b
  1268  000E82  D7E5               	goto	l4907
  1269  000E84                     u4230:
  1270                           
  1271                           ; BSR set to: 0
  1272                           ;doprnt.c: 1422: {
  1273                           ;doprnt.c: 1438: if(flag & 0x03)
  1274                           
  1275                           ; BSR set to: 0
  1276  000E84  C0CE  F041         	movff	sprintf@flag,??_sprintf
  1277  000E88  0E03               	movlw	3
  1278  000E8A  1641               	andwf	??_sprintf,f,c
  1279  000E8C  B4D8               	btfsc	status,2,c
  1280  000E8E  D009               	goto	l1553
  1281                           
  1282                           ; BSR set to: 0
  1283                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  1284  000E90  C0C6  FFD9         	movff	sprintf@sp,fsr2l
  1285  000E94  C0C7  FFDA         	movff	sprintf@sp+1,fsr2h
  1286  000E98  0E2D               	movlw	45
  1287  000E9A  6EDF               	movwf	indf2,c
  1288                           
  1289                           ; BSR set to: 0
  1290  000E9C  0100               	movlb	0	; () banked
  1291  000E9E  4BC6               	infsnz	sprintf@sp& (0+255),f,b
  1292  000EA0  2BC7               	incf	(sprintf@sp+1)& (0+255),f,b
  1293  000EA2                     l1553:
  1294                           
  1295                           ; BSR set to: 0
  1296                           ;doprnt.c: 1469: }
  1297                           ;doprnt.c: 1472: prec = c;
  1298                           
  1299                           ; BSR set to: 0
  1300  000EA2  C0D2  F0CF         	movff	sprintf@c,sprintf@prec
  1301                           
  1302                           ;doprnt.c: 1474: while(prec--) {
  1303  000EA6  D02E               	goto	l1554
  1304  000EA8                     
  1305                           ; BSR set to: 0
  1306                           ;doprnt.c: 1478: {
  1307                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1308                           
  1309                           ; BSR set to: 0
  1310  000EA8  0100               	movlb	0	; () banked
  1311  000EAA  51CF               	movf	sprintf@prec& (0+255),w,b
  1312  000EAC  0D02               	mullw	2
  1313  000EAE  0E01               	movlw	low _dpowers
  1314  000EB0  24F3               	addwf	prodl,w,c
  1315  000EB2  6EF6               	movwf	tblptrl,c
  1316  000EB4  0E08               	movlw	high _dpowers
  1317  000EB6  20F4               	addwfc	prodh,w,c
  1318  000EB8  6EF7               	movwf	tblptrh,c
  1319  000EBA                     	if	0	;There are less than 3 active tblptr bytes
  1320  000EBA                     	endif
  1321  000EBA  0009               	tblrd		*+
  1322  000EBC  CFF5 F03E          	movff	tablat,___lwdiv@divisor
  1323  000EC0  000A               	tblrd		*-
  1324  000EC2  CFF5 F03F          	movff	tablat,___lwdiv@divisor+1
  1325  000EC6  C0D0  F03C         	movff	sprintf@val,___lwdiv@dividend
  1326  000ECA  C0D1  F03D         	movff	sprintf@val+1,___lwdiv@dividend+1
  1327  000ECE  EC07  F009         	call	___lwdiv	;wreg free
  1328  000ED2  C03C  F0C2         	movff	?___lwdiv,___lwmod@dividend
  1329  000ED6  C03D  F0C3         	movff	?___lwdiv+1,___lwmod@dividend+1
  1330  000EDA  0E00               	movlw	0
  1331  000EDC  0100               	movlb	0	; () banked
  1332  000EDE  6FC5               	movwf	(___lwmod@divisor+1)& (0+255),b
  1333  000EE0  0E0A               	movlw	10
  1334  000EE2  6FC4               	movwf	___lwmod@divisor& (0+255),b
  1335  000EE4  EC36  F009         	call	___lwmod	;wreg free
  1336  000EE8  0100               	movlb	0	; () banked
  1337  000EEA  51C2               	movf	?___lwmod& (0+255),w,b
  1338  000EEC  0F30               	addlw	48
  1339  000EEE  0100               	movlb	0	; () banked
  1340  000EF0  6FD2               	movwf	sprintf@c& (0+255),b
  1341                           
  1342                           ; BSR set to: 0
  1343                           ;doprnt.c: 1523: }
  1344                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1345  000EF2  C0C6  FFD9         	movff	sprintf@sp,fsr2l
  1346  000EF6  C0C7  FFDA         	movff	sprintf@sp+1,fsr2h
  1347  000EFA  C0D2  FFDF         	movff	sprintf@c,indf2
  1348                           
  1349                           ; BSR set to: 0
  1350  000EFE  0100               	movlb	0	; () banked
  1351  000F00  4BC6               	infsnz	sprintf@sp& (0+255),f,b
  1352  000F02  2BC7               	incf	(sprintf@sp+1)& (0+255),f,b
  1353  000F04                     l1554:
  1354                           
  1355                           ; BSR set to: 0
  1356                           
  1357                           ; BSR set to: 0
  1358  000F04  0100               	movlb	0	; () banked
  1359  000F06  07CF               	decf	sprintf@prec& (0+255),f,b
  1360  000F08  0100               	movlb	0	; () banked
  1361  000F0A  29CF               	incf	sprintf@prec& (0+255),w,b
  1362  000F0C  A4D8               	btfss	status,2,c
  1363  000F0E  D7CC               	goto	l1555
  1364  000F10                     u4250:
  1365                           
  1366                           ; BSR set to: 0
  1367                           
  1368                           ; BSR set to: 0
  1369                           
  1370                           ; BSR set to: 0
  1371  000F10  C0C8  FFF6         	movff	sprintf@f,tblptrl
  1372  000F14  C0C9  FFF7         	movff	sprintf@f+1,tblptrh
  1373  000F18  0100               	movlb	0	; () banked
  1374  000F1A  4BC8               	infsnz	sprintf@f& (0+255),f,b
  1375  000F1C  2BC9               	incf	(sprintf@f+1)& (0+255),f,b
  1376  000F1E                     	if	0	;tblptru may be non-zero
  1377  000F1E                     	endif
  1378  000F1E                     	if	0	;tblptru may be non-zero
  1379  000F1E                     	endif
  1380  000F1E  0008               	tblrd		*
  1381  000F20  CFF5 F0D2          	movff	tablat,sprintf@c
  1382  000F24  0100               	movlb	0	; () banked
  1383  000F26  51D2               	movf	sprintf@c& (0+255),w,b
  1384  000F28  A4D8               	btfss	status,2,c
  1385  000F2A  D74F               	goto	l1540
  1386  000F2C                     u4260:
  1387                           
  1388                           ; BSR set to: 0
  1389                           ;doprnt.c: 1538: *sp = 0;
  1390                           
  1391                           ; BSR set to: 0
  1392                           
  1393                           ;doprnt.c: 1525: }
  1394                           ;doprnt.c: 1533: }
  1395                           ;doprnt.c: 1535: alldone:
  1396                           
  1397                           ; BSR set to: 0
  1398  000F2C  C0C6  FFD9         	movff	sprintf@sp,fsr2l
  1399  000F30  C0C7  FFDA         	movff	sprintf@sp+1,fsr2h
  1400  000F34  0E00               	movlw	0
  1401  000F36  6EDF               	movwf	indf2,c
  1402  000F38  0012               	return	
  1403  000F3A                     __end_of_sprintf:
  1404                           	opt stack 0
  1405                           tblptru	equ	0xFF8
  1406                           tblptrh	equ	0xFF7
  1407                           tblptrl	equ	0xFF6
  1408                           tablat	equ	0xFF5
  1409                           prodh	equ	0xFF4
  1410                           prodl	equ	0xFF3
  1411                           intcon	equ	0xFF2
  1412                           postinc0	equ	0xFEE
  1413                           wreg	equ	0xFE8
  1414                           postdec1	equ	0xFE5
  1415                           fsr1l	equ	0xFE1
  1416                           indf2	equ	0xFDF
  1417                           postinc2	equ	0xFDE
  1418                           postdec2	equ	0xFDD
  1419                           fsr2h	equ	0xFDA
  1420                           fsr2l	equ	0xFD9
  1421                           status	equ	0xFD8
  1422                           
  1423 ;; *************** function ___lwmod *****************
  1424 ;; Defined at:
  1425 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;  dividend        2    3[BANK0 ] unsigned int 
  1428 ;;  divisor         2    5[BANK0 ] unsigned int 
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;  counter         1   27[COMRAM] unsigned char 
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  2    3[BANK0 ] unsigned int 
  1433 ;; Registers used:
  1434 ;;		wreg, status,2, status,0
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1440 ;;      Params:         0       4       0       0       0       0       0       0       0
  1441 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1442 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1443 ;;      Totals:         1       4       0       0       0       0       0       0       0
  1444 ;;Total ram usage:        5 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; Hardware stack levels required when called:    3
  1447 ;; This function calls:
  1448 ;;		Nothing
  1449 ;; This function is called by:
  1450 ;;		_sprintf
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           	psect	text3
  1455  00126C                     __ptext3:
  1456                           	opt stack 0
  1457  00126C                     ___lwmod:
  1458                           	opt stack 25
  1459                           
  1460                           ; BSR set to: 0
  1461                           ;incstack = 0
  1462  00126C  0100               	movlb	0	; () banked
  1463  00126E  51C4               	movf	___lwmod@divisor& (0+255),w,b
  1464  001270  0100               	movlb	0	; () banked
  1465  001272  11C5               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  1466  001274  B4D8               	btfsc	status,2,c
  1467  001276  D023               	goto	l1984
  1468                           
  1469                           ; BSR set to: 0
  1470  001278  0E01               	movlw	1
  1471  00127A  6E40               	movwf	___lwmod@counter,c
  1472  00127C  D005               	goto	l1979
  1473  00127E                     
  1474                           ; BSR set to: 0
  1475                           
  1476                           ; BSR set to: 0
  1477  00127E  0100               	movlb	0	; () banked
  1478  001280  90D8               	bcf	status,0,c
  1479  001282  37C4               	rlcf	___lwmod@divisor& (0+255),f,b
  1480  001284  37C5               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1481  001286  2A40               	incf	___lwmod@counter,f,c
  1482  001288                     l1979:
  1483                           
  1484                           ; BSR set to: 0
  1485                           
  1486                           ; BSR set to: 0
  1487  001288  0100               	movlb	0	; () banked
  1488  00128A  AFC5               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1489  00128C  D7F8               	goto	l1980
  1490  00128E                     u4170:
  1491                           
  1492                           ; BSR set to: 0
  1493                           
  1494                           ; BSR set to: 0
  1495                           
  1496                           ; BSR set to: 0
  1497  00128E  0100               	movlb	0	; () banked
  1498  001290  51C4               	movf	___lwmod@divisor& (0+255),w,b
  1499  001292  0100               	movlb	0	; () banked
  1500  001294  5DC2               	subwf	___lwmod@dividend& (0+255),w,b
  1501  001296  0100               	movlb	0	; () banked
  1502  001298  51C5               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1503  00129A  0100               	movlb	0	; () banked
  1504  00129C  59C3               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1505  00129E  A0D8               	btfss	status,0,c
  1506  0012A0  D008               	goto	l1983
  1507                           
  1508                           ; BSR set to: 0
  1509  0012A2  0100               	movlb	0	; () banked
  1510  0012A4  51C4               	movf	___lwmod@divisor& (0+255),w,b
  1511  0012A6  0100               	movlb	0	; () banked
  1512  0012A8  5FC2               	subwf	___lwmod@dividend& (0+255),f,b
  1513  0012AA  0100               	movlb	0	; () banked
  1514  0012AC  51C5               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1515  0012AE  0100               	movlb	0	; () banked
  1516  0012B0  5BC3               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1517  0012B2                     l1983:
  1518                           
  1519                           ; BSR set to: 0
  1520                           
  1521                           ; BSR set to: 0
  1522  0012B2  0100               	movlb	0	; () banked
  1523  0012B4  90D8               	bcf	status,0,c
  1524  0012B6  33C5               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1525  0012B8  33C4               	rrcf	___lwmod@divisor& (0+255),f,b
  1526                           
  1527                           ; BSR set to: 0
  1528  0012BA  2E40               	decfsz	___lwmod@counter,f,c
  1529  0012BC  D7E8               	goto	u4170
  1530  0012BE                     l1984:
  1531                           
  1532                           ; BSR set to: 0
  1533                           
  1534                           ; BSR set to: 0
  1535  0012BE  C0C2  F0C2         	movff	___lwmod@dividend,?___lwmod
  1536  0012C2  C0C3  F0C3         	movff	___lwmod@dividend+1,?___lwmod+1
  1537                           
  1538                           ; BSR set to: 0
  1539  0012C6  0012               	return		;funcret
  1540  0012C8                     __end_of___lwmod:
  1541                           	opt stack 0
  1542                           tblptru	equ	0xFF8
  1543                           tblptrh	equ	0xFF7
  1544                           tblptrl	equ	0xFF6
  1545                           tablat	equ	0xFF5
  1546                           prodh	equ	0xFF4
  1547                           prodl	equ	0xFF3
  1548                           intcon	equ	0xFF2
  1549                           postinc0	equ	0xFEE
  1550                           wreg	equ	0xFE8
  1551                           postdec1	equ	0xFE5
  1552                           fsr1l	equ	0xFE1
  1553                           indf2	equ	0xFDF
  1554                           postinc2	equ	0xFDE
  1555                           postdec2	equ	0xFDD
  1556                           fsr2h	equ	0xFDA
  1557                           fsr2l	equ	0xFD9
  1558                           status	equ	0xFD8
  1559                           
  1560 ;; *************** function ___lwdiv *****************
  1561 ;; Defined at:
  1562 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;  dividend        2   23[COMRAM] unsigned int 
  1565 ;;  divisor         2   25[COMRAM] unsigned int 
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;  quotient        2    1[BANK0 ] unsigned int 
  1568 ;;  counter         1    0[BANK0 ] unsigned char 
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  2   23[COMRAM] unsigned int 
  1571 ;; Registers used:
  1572 ;;		wreg, status,2, status,0
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1578 ;;      Params:         4       0       0       0       0       0       0       0       0
  1579 ;;      Locals:         0       3       0       0       0       0       0       0       0
  1580 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1581 ;;      Totals:         4       3       0       0       0       0       0       0       0
  1582 ;;Total ram usage:        7 bytes
  1583 ;; Hardware stack levels used:    1
  1584 ;; Hardware stack levels required when called:    3
  1585 ;; This function calls:
  1586 ;;		Nothing
  1587 ;; This function is called by:
  1588 ;;		_sprintf
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           	psect	text4
  1593  00120E                     __ptext4:
  1594                           	opt stack 0
  1595  00120E                     ___lwdiv:
  1596                           	opt stack 25
  1597                           
  1598                           ; BSR set to: 0
  1599                           ;incstack = 0
  1600  00120E  0E00               	movlw	0
  1601  001210  0100               	movlb	0	; () banked
  1602  001212  6FC1               	movwf	(___lwdiv@quotient+1)& (0+255),b
  1603  001214  0E00               	movlw	0
  1604  001216  6FC0               	movwf	___lwdiv@quotient& (0+255),b
  1605                           
  1606                           ; BSR set to: 0
  1607  001218  503E               	movf	___lwdiv@divisor,w,c
  1608  00121A  103F               	iorwf	___lwdiv@divisor+1,w,c
  1609  00121C  B4D8               	btfsc	status,2,c
  1610  00121E  D021               	goto	l1974
  1611                           
  1612                           ; BSR set to: 0
  1613  001220  0E01               	movlw	1
  1614  001222  0100               	movlb	0	; () banked
  1615  001224  6FBF               	movwf	___lwdiv@counter& (0+255),b
  1616  001226  D005               	goto	l1969
  1617  001228                     
  1618                           ; BSR set to: 0
  1619                           
  1620                           ; BSR set to: 0
  1621  001228  90D8               	bcf	status,0,c
  1622  00122A  363E               	rlcf	___lwdiv@divisor,f,c
  1623  00122C  363F               	rlcf	___lwdiv@divisor+1,f,c
  1624  00122E  0100               	movlb	0	; () banked
  1625  001230  2BBF               	incf	___lwdiv@counter& (0+255),f,b
  1626  001232                     l1969:
  1627                           
  1628                           ; BSR set to: 0
  1629                           
  1630                           ; BSR set to: 0
  1631  001232  AE3F               	btfss	___lwdiv@divisor+1,7,c
  1632  001234  D7F9               	goto	l1970
  1633  001236                     u4140:
  1634                           
  1635                           ; BSR set to: 0
  1636                           
  1637                           ; BSR set to: 0
  1638                           
  1639                           ; BSR set to: 0
  1640  001236  0100               	movlb	0	; () banked
  1641  001238  90D8               	bcf	status,0,c
  1642  00123A  37C0               	rlcf	___lwdiv@quotient& (0+255),f,b
  1643  00123C  37C1               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  1644                           
  1645                           ; BSR set to: 0
  1646  00123E  503E               	movf	___lwdiv@divisor,w,c
  1647  001240  5C3C               	subwf	___lwdiv@dividend,w,c
  1648  001242  503F               	movf	___lwdiv@divisor+1,w,c
  1649  001244  583D               	subwfb	___lwdiv@dividend+1,w,c
  1650  001246  A0D8               	btfss	status,0,c
  1651  001248  D006               	goto	l1973
  1652                           
  1653                           ; BSR set to: 0
  1654  00124A  503E               	movf	___lwdiv@divisor,w,c
  1655  00124C  5E3C               	subwf	___lwdiv@dividend,f,c
  1656  00124E  503F               	movf	___lwdiv@divisor+1,w,c
  1657  001250  5A3D               	subwfb	___lwdiv@dividend+1,f,c
  1658                           
  1659                           ; BSR set to: 0
  1660  001252  0100               	movlb	0	; () banked
  1661  001254  81C0               	bsf	___lwdiv@quotient& (0+255),0,b
  1662  001256                     l1973:
  1663                           
  1664                           ; BSR set to: 0
  1665                           
  1666                           ; BSR set to: 0
  1667  001256  90D8               	bcf	status,0,c
  1668  001258  323F               	rrcf	___lwdiv@divisor+1,f,c
  1669  00125A  323E               	rrcf	___lwdiv@divisor,f,c
  1670                           
  1671                           ; BSR set to: 0
  1672  00125C  0100               	movlb	0	; () banked
  1673  00125E  2FBF               	decfsz	___lwdiv@counter& (0+255),f,b
  1674  001260  D7EA               	goto	u4140
  1675  001262                     l1974:
  1676                           
  1677                           ; BSR set to: 0
  1678                           
  1679                           ; BSR set to: 0
  1680  001262  C0C0  F03C         	movff	___lwdiv@quotient,?___lwdiv
  1681  001266  C0C1  F03D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1682                           
  1683                           ; BSR set to: 0
  1684  00126A  0012               	return		;funcret
  1685  00126C                     __end_of___lwdiv:
  1686                           	opt stack 0
  1687                           tblptru	equ	0xFF8
  1688                           tblptrh	equ	0xFF7
  1689                           tblptrl	equ	0xFF6
  1690                           tablat	equ	0xFF5
  1691                           prodh	equ	0xFF4
  1692                           prodl	equ	0xFF3
  1693                           intcon	equ	0xFF2
  1694                           postinc0	equ	0xFEE
  1695                           wreg	equ	0xFE8
  1696                           postdec1	equ	0xFE5
  1697                           fsr1l	equ	0xFE1
  1698                           indf2	equ	0xFDF
  1699                           postinc2	equ	0xFDE
  1700                           postdec2	equ	0xFDD
  1701                           fsr2h	equ	0xFDA
  1702                           fsr2l	equ	0xFD9
  1703                           status	equ	0xFD8
  1704                           
  1705 ;; *************** function _restarPuntos *****************
  1706 ;; Defined at:
  1707 ;;		line 129 in file "main.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;		None
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;		None
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  1    wreg      void 
  1714 ;; Registers used:
  1715 ;;		wreg, status,2, status,0
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1721 ;;      Params:         0       0       0       0       0       0       0       0       0
  1722 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1723 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1724 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1725 ;;Total ram usage:        0 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:    3
  1728 ;; This function calls:
  1729 ;;		Nothing
  1730 ;; This function is called by:
  1731 ;;		_drive
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           	psect	text5
  1736  0010A0                     __ptext5:
  1737                           	opt stack 0
  1738  0010A0                     _restarPuntos:
  1739                           	opt stack 26
  1740                           
  1741                           ;main.c: 131: puntos = puntos--;
  1742                           
  1743                           ; BSR set to: 0
  1744                           ;incstack = 0
  1745  0010A0  5047               	movf	_repeticion+1,w,c
  1746  0010A2  E107               	bnz	l4197
  1747  0010A4  0E10               	movlw	16
  1748  0010A6  5C46               	subwf	_repeticion,w,c
  1749  0010A8  B0D8               	btfsc	status,0,c
  1750  0010AA  D003               	goto	l615
  1751  0010AC  0610               	decf	_puntos,f,c
  1752  0010AE  A0D8               	btfss	status,0,c
  1753  0010B0  0611               	decf	_puntos+1,f,c
  1754  0010B2                     l615:
  1755  0010B2                     l4197:
  1756                           
  1757                           ;main.c: 132: }
  1758                           ;main.c: 133: if (repeticion > 15 && repeticion <= 30){
  1759  0010B2  5047               	movf	_repeticion+1,w,c
  1760  0010B4  E104               	bnz	u3120
  1761  0010B6  0E10               	movlw	16
  1762  0010B8  5C46               	subwf	_repeticion,w,c
  1763  0010BA  A0D8               	btfss	status,0,c
  1764  0010BC  D00C               	goto	l616
  1765  0010BE                     u3120:
  1766  0010BE  5047               	movf	_repeticion+1,w,c
  1767  0010C0  E10A               	bnz	l616
  1768  0010C2  0E1F               	movlw	31
  1769  0010C4  5C46               	subwf	_repeticion,w,c
  1770  0010C6  B0D8               	btfsc	status,0,c
  1771  0010C8  D006               	goto	l616
  1772                           
  1773                           ;main.c: 134: puntos = puntos - 2;
  1774  0010CA  0EFE               	movlw	254
  1775  0010CC  2410               	addwf	_puntos,w,c
  1776  0010CE  6E10               	movwf	_puntos,c
  1777  0010D0  0EFF               	movlw	255
  1778  0010D2  2011               	addwfc	_puntos+1,w,c
  1779  0010D4  6E11               	movwf	_puntos+1,c
  1780  0010D6                     l616:
  1781                           
  1782                           ;main.c: 135: }
  1783                           ;main.c: 136: if (repeticion > 30 && repeticion <= 45){
  1784  0010D6  5047               	movf	_repeticion+1,w,c
  1785  0010D8  E104               	bnz	u3140
  1786  0010DA  0E1F               	movlw	31
  1787  0010DC  5C46               	subwf	_repeticion,w,c
  1788  0010DE  A0D8               	btfss	status,0,c
  1789  0010E0  D00C               	goto	l617
  1790  0010E2                     u3140:
  1791  0010E2  5047               	movf	_repeticion+1,w,c
  1792  0010E4  E10A               	bnz	l617
  1793  0010E6  0E2E               	movlw	46
  1794  0010E8  5C46               	subwf	_repeticion,w,c
  1795  0010EA  B0D8               	btfsc	status,0,c
  1796  0010EC  D006               	goto	l617
  1797                           
  1798                           ;main.c: 137: puntos = puntos - 3;
  1799  0010EE  0EFD               	movlw	253
  1800  0010F0  2410               	addwf	_puntos,w,c
  1801  0010F2  6E10               	movwf	_puntos,c
  1802  0010F4  0EFF               	movlw	255
  1803  0010F6  2011               	addwfc	_puntos+1,w,c
  1804  0010F8  6E11               	movwf	_puntos+1,c
  1805  0010FA                     l617:
  1806                           
  1807                           ;main.c: 138: }
  1808                           ;main.c: 139: if(repeticion > 45 && repeticion <= 60){
  1809  0010FA  5047               	movf	_repeticion+1,w,c
  1810  0010FC  E104               	bnz	u3160
  1811  0010FE  0E2E               	movlw	46
  1812  001100  5C46               	subwf	_repeticion,w,c
  1813  001102  A0D8               	btfss	status,0,c
  1814  001104  D00C               	goto	l618
  1815  001106                     u3160:
  1816  001106  5047               	movf	_repeticion+1,w,c
  1817  001108  E10A               	bnz	l618
  1818  00110A  0E3D               	movlw	61
  1819  00110C  5C46               	subwf	_repeticion,w,c
  1820  00110E  B0D8               	btfsc	status,0,c
  1821  001110  D006               	goto	l618
  1822                           
  1823                           ;main.c: 140: puntos = puntos - 4;
  1824  001112  0EFC               	movlw	252
  1825  001114  2410               	addwf	_puntos,w,c
  1826  001116  6E10               	movwf	_puntos,c
  1827  001118  0EFF               	movlw	255
  1828  00111A  2011               	addwfc	_puntos+1,w,c
  1829  00111C  6E11               	movwf	_puntos+1,c
  1830  00111E                     l618:
  1831                           
  1832                           ;main.c: 141: }
  1833                           ;main.c: 142: if (repeticion > 60 && repeticion <= 75){
  1834  00111E  5047               	movf	_repeticion+1,w,c
  1835  001120  E104               	bnz	u3180
  1836  001122  0E3D               	movlw	61
  1837  001124  5C46               	subwf	_repeticion,w,c
  1838  001126  A0D8               	btfss	status,0,c
  1839  001128  D00C               	goto	l619
  1840  00112A                     u3180:
  1841  00112A  5047               	movf	_repeticion+1,w,c
  1842  00112C  E10A               	bnz	l619
  1843  00112E  0E4C               	movlw	76
  1844  001130  5C46               	subwf	_repeticion,w,c
  1845  001132  B0D8               	btfsc	status,0,c
  1846  001134  D006               	goto	l619
  1847                           
  1848                           ;main.c: 143: puntos = puntos - 5;
  1849  001136  0EFB               	movlw	251
  1850  001138  2410               	addwf	_puntos,w,c
  1851  00113A  6E10               	movwf	_puntos,c
  1852  00113C  0EFF               	movlw	255
  1853  00113E  2011               	addwfc	_puntos+1,w,c
  1854  001140  6E11               	movwf	_puntos+1,c
  1855  001142                     l619:
  1856                           
  1857                           ;main.c: 144: }
  1858                           ;main.c: 145: if (repeticion > 75 && repeticion <= 90){
  1859  001142  5047               	movf	_repeticion+1,w,c
  1860  001144  E104               	bnz	u3200
  1861  001146  0E4C               	movlw	76
  1862  001148  5C46               	subwf	_repeticion,w,c
  1863  00114A  A0D8               	btfss	status,0,c
  1864  00114C  0012               	return	
  1865  00114E                     u3200:
  1866  00114E  5047               	movf	_repeticion+1,w,c
  1867  001150  E10B               	bnz	l621
  1868  001152  0E5B               	movlw	91
  1869  001154  5C46               	subwf	_repeticion,w,c
  1870  001156  B0D8               	btfsc	status,0,c
  1871  001158  0012               	return	
  1872                           
  1873                           ;main.c: 146: puntos = puntos - 6;
  1874  00115A  0EFA               	movlw	250
  1875  00115C  2410               	addwf	_puntos,w,c
  1876  00115E  6E10               	movwf	_puntos,c
  1877  001160  0EFF               	movlw	255
  1878  001162  2011               	addwfc	_puntos+1,w,c
  1879  001164  6E11               	movwf	_puntos+1,c
  1880  001166  0012               	return	
  1881  001168                     l621:
  1882  001168  0012               	return		;funcret
  1883  00116A                     __end_of_restarPuntos:
  1884                           	opt stack 0
  1885                           tblptru	equ	0xFF8
  1886                           tblptrh	equ	0xFF7
  1887                           tblptrl	equ	0xFF6
  1888                           tablat	equ	0xFF5
  1889                           prodh	equ	0xFF4
  1890                           prodl	equ	0xFF3
  1891                           intcon	equ	0xFF2
  1892                           postinc0	equ	0xFEE
  1893                           wreg	equ	0xFE8
  1894                           postdec1	equ	0xFE5
  1895                           fsr1l	equ	0xFE1
  1896                           indf2	equ	0xFDF
  1897                           postinc2	equ	0xFDE
  1898                           postdec2	equ	0xFDD
  1899                           fsr2h	equ	0xFDA
  1900                           fsr2l	equ	0xFD9
  1901                           status	equ	0xFD8
  1902                           
  1903 ;; *************** function _putsXLCD *****************
  1904 ;; Defined at:
  1905 ;;		line 16 in file "XLCD/putsxlcd.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  buffer          2   24[COMRAM] PTR unsigned char 
  1908 ;;		 -> buffer(5), D_Buffer(2), 
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;		None
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1920 ;;      Params:         2       0       0       0       0       0       0       0       0
  1921 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1922 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1923 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1924 ;;Total ram usage:        2 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; Hardware stack levels required when called:    5
  1927 ;; This function calls:
  1928 ;;		_BusyXLCD
  1929 ;;		_WriteDataXLCD
  1930 ;; This function is called by:
  1931 ;;		_drive
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           	psect	text6
  1936  001486                     __ptext6:
  1937                           	opt stack 0
  1938  001486                     _putsXLCD:
  1939                           	opt stack 24
  1940                           
  1941                           ;putsxlcd.c: 18: while(*buffer)
  1942                           
  1943                           ;incstack = 0
  1944  001486  D00E               	goto	l105
  1945  001488                     
  1946                           ;putsxlcd.c: 19: {
  1947                           ;putsxlcd.c: 20: while(BusyXLCD());
  1948  001488  EC0C  F00A         	call	_BusyXLCD	;wreg free
  1949  00148C  0900               	iorlw	0
  1950  00148E  A4D8               	btfss	status,2,c
  1951  001490  D7FB               	goto	l106
  1952                           
  1953                           ;putsxlcd.c: 21: WriteDataXLCD(*buffer);
  1954  001492  C03D  FFD9         	movff	putsXLCD@buffer,fsr2l
  1955  001496  C03E  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  1956  00149A  50DF               	movf	indf2,w,c
  1957  00149C  ECB0  F009         	call	_WriteDataXLCD
  1958                           
  1959                           ;putsxlcd.c: 22: buffer++;
  1960  0014A0  4A3D               	infsnz	putsXLCD@buffer,f,c
  1961  0014A2  2A3E               	incf	putsXLCD@buffer+1,f,c
  1962  0014A4                     l105:
  1963  0014A4  C03D  FFD9         	movff	putsXLCD@buffer,fsr2l
  1964  0014A8  C03E  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  1965  0014AC  50DF               	movf	indf2,w,c
  1966  0014AE  B4D8               	btfsc	status,2,c
  1967  0014B0  0012               	return	
  1968  0014B2  D7EA               	goto	l106
  1969  0014B4                     __end_of_putsXLCD:
  1970                           	opt stack 0
  1971                           tblptru	equ	0xFF8
  1972                           tblptrh	equ	0xFF7
  1973                           tblptrl	equ	0xFF6
  1974                           tablat	equ	0xFF5
  1975                           prodh	equ	0xFF4
  1976                           prodl	equ	0xFF3
  1977                           intcon	equ	0xFF2
  1978                           postinc0	equ	0xFEE
  1979                           wreg	equ	0xFE8
  1980                           postdec1	equ	0xFE5
  1981                           fsr1l	equ	0xFE1
  1982                           indf2	equ	0xFDF
  1983                           postinc2	equ	0xFDE
  1984                           postdec2	equ	0xFDD
  1985                           fsr2h	equ	0xFDA
  1986                           fsr2l	equ	0xFD9
  1987                           status	equ	0xFD8
  1988                           
  1989 ;; *************** function _marcador *****************
  1990 ;; Defined at:
  1991 ;;		line 64 in file "main.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;		None
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;		None
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      void 
  1998 ;; Registers used:
  1999 ;;		wreg, status,2, status,0
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2005 ;;      Params:         0       0       0       0       0       0       0       0       0
  2006 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2007 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2008 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2009 ;;Total ram usage:        2 bytes
  2010 ;; Hardware stack levels used:    1
  2011 ;; Hardware stack levels required when called:    3
  2012 ;; This function calls:
  2013 ;;		Nothing
  2014 ;; This function is called by:
  2015 ;;		_drive
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	text7
  2020  000A3C                     __ptext7:
  2021                           	opt stack 0
  2022  000A3C                     _marcador:
  2023                           	opt stack 26
  2024                           
  2025                           ;main.c: 66: if (repeticion <= 15){
  2026                           
  2027                           ;incstack = 0
  2028  000A3C  5047               	movf	_repeticion+1,w,c
  2029  000A3E  E11F               	bnz	l4133
  2030  000A40  0E10               	movlw	16
  2031  000A42  5C46               	subwf	_repeticion,w,c
  2032  000A44  B0D8               	btfsc	status,0,c
  2033  000A46  D01B               	goto	l601
  2034                           
  2035                           ;main.c: 67: if(repeticion == 1){
  2036  000A48  0446               	decf	_repeticion,w,c
  2037  000A4A  1047               	iorwf	_repeticion+1,w,c
  2038  000A4C  B4D8               	btfsc	status,2,c
  2039                           
  2040                           ;main.c: 68: PORTBbits.RB0 = 1;
  2041  000A4E  8081               	bsf	3969,0,c	;volatile
  2042                           
  2043                           ;main.c: 69: }
  2044                           ;main.c: 71: puntos = puntos++;
  2045  000A50  4A10               	infsnz	_puntos,f,c
  2046  000A52  2A11               	incf	_puntos+1,f,c
  2047                           
  2048                           ;main.c: 72: _delay((unsigned long)((167)*(24000000ul/4000.0)));
  2049  000A54  0E06               	movlw	6
  2050  000A56  6E3D               	movwf	(??_marcador+1)& (0+255),c
  2051  000A58  0E16               	movlw	22
  2052  000A5A  6E3C               	movwf	??_marcador& (0+255),c
  2053  000A5C  0E46               	movlw	70
  2054  000A5E                     u4447:
  2055  000A5E  2EE8               	decfsz	wreg,f,c
  2056  000A60  D7FE               	bra	u4447
  2057  000A62  2E3C               	decfsz	??_marcador& (0+255),f,c
  2058  000A64  D7FC               	bra	u4447
  2059  000A66  2E3D               	decfsz	(??_marcador+1)& (0+255),f,c
  2060  000A68  D7FA               	bra	u4447
  2061  000A6A  D000               	nop2	
  2062                           
  2063                           ;main.c: 73: repeticion++;
  2064  000A6C  4A46               	infsnz	_repeticion,f,c
  2065  000A6E  2A47               	incf	_repeticion+1,f,c
  2066                           
  2067                           ;main.c: 74: if(repeticion == 15){
  2068  000A70  0E0F               	movlw	15
  2069  000A72  1846               	xorwf	_repeticion,w,c
  2070  000A74  1047               	iorwf	_repeticion+1,w,c
  2071  000A76  A4D8               	btfss	status,2,c
  2072  000A78  D002               	goto	l601
  2073                           
  2074                           ;main.c: 75: PORTBbits.RB0 = 0;
  2075  000A7A  9081               	bcf	3969,0,c	;volatile
  2076                           
  2077                           ;main.c: 76: PORTBbits.RB1 = 1;
  2078  000A7C  8281               	bsf	3969,1,c	;volatile
  2079  000A7E                     l601:
  2080  000A7E                     l4133:
  2081                           
  2082                           ;main.c: 78: }
  2083                           ;main.c: 79: }
  2084                           ;main.c: 80: if (repeticion > 15 && repeticion <= 30){
  2085  000A7E  5047               	movf	_repeticion+1,w,c
  2086  000A80  E104               	bnz	u2960
  2087  000A82  0E10               	movlw	16
  2088  000A84  5C46               	subwf	_repeticion,w,c
  2089  000A86  A0D8               	btfss	status,0,c
  2090  000A88  D021               	goto	l603
  2091  000A8A                     u2960:
  2092  000A8A  5047               	movf	_repeticion+1,w,c
  2093  000A8C  E11F               	bnz	l4145
  2094  000A8E  0E1F               	movlw	31
  2095  000A90  5C46               	subwf	_repeticion,w,c
  2096  000A92  B0D8               	btfsc	status,0,c
  2097  000A94  D01B               	goto	l603
  2098                           
  2099                           ;main.c: 81: puntos = puntos + 2;
  2100  000A96  0E02               	movlw	2
  2101  000A98  2410               	addwf	_puntos,w,c
  2102  000A9A  6E10               	movwf	_puntos,c
  2103  000A9C  0E00               	movlw	0
  2104  000A9E  2011               	addwfc	_puntos+1,w,c
  2105  000AA0  6E11               	movwf	_puntos+1,c
  2106                           
  2107                           ;main.c: 82: _delay((unsigned long)((167)*(24000000ul/4000.0)));
  2108  000AA2  0E06               	movlw	6
  2109  000AA4  6E3D               	movwf	(??_marcador+1)& (0+255),c
  2110  000AA6  0E16               	movlw	22
  2111  000AA8  6E3C               	movwf	??_marcador& (0+255),c
  2112  000AAA  0E46               	movlw	70
  2113  000AAC                     u4457:
  2114  000AAC  2EE8               	decfsz	wreg,f,c
  2115  000AAE  D7FE               	bra	u4457
  2116  000AB0  2E3C               	decfsz	??_marcador& (0+255),f,c
  2117  000AB2  D7FC               	bra	u4457
  2118  000AB4  2E3D               	decfsz	(??_marcador+1)& (0+255),f,c
  2119  000AB6  D7FA               	bra	u4457
  2120  000AB8  D000               	nop2	
  2121                           
  2122                           ;main.c: 83: repeticion++;
  2123  000ABA  4A46               	infsnz	_repeticion,f,c
  2124  000ABC  2A47               	incf	_repeticion+1,f,c
  2125                           
  2126                           ;main.c: 84: if(repeticion == 30){
  2127  000ABE  0E1E               	movlw	30
  2128  000AC0  1846               	xorwf	_repeticion,w,c
  2129  000AC2  1047               	iorwf	_repeticion+1,w,c
  2130  000AC4  A4D8               	btfss	status,2,c
  2131  000AC6  D002               	goto	l603
  2132                           
  2133                           ;main.c: 85: PORTBbits.RB1 = 0;
  2134  000AC8  9281               	bcf	3969,1,c	;volatile
  2135                           
  2136                           ;main.c: 86: PORTBbits.RB2 = 1;
  2137  000ACA  8481               	bsf	3969,2,c	;volatile
  2138  000ACC                     l603:
  2139  000ACC                     l4145:
  2140                           
  2141                           ;main.c: 87: }
  2142                           ;main.c: 88: }
  2143                           ;main.c: 89: if (repeticion > 30 && repeticion <= 45){
  2144  000ACC  5047               	movf	_repeticion+1,w,c
  2145  000ACE  E104               	bnz	u2990
  2146  000AD0  0E1F               	movlw	31
  2147  000AD2  5C46               	subwf	_repeticion,w,c
  2148  000AD4  A0D8               	btfss	status,0,c
  2149  000AD6  D021               	goto	l605
  2150  000AD8                     u2990:
  2151  000AD8  5047               	movf	_repeticion+1,w,c
  2152  000ADA  E11F               	bnz	l4157
  2153  000ADC  0E2E               	movlw	46
  2154  000ADE  5C46               	subwf	_repeticion,w,c
  2155  000AE0  B0D8               	btfsc	status,0,c
  2156  000AE2  D01B               	goto	l605
  2157                           
  2158                           ;main.c: 90: puntos = puntos + 3;
  2159  000AE4  0E03               	movlw	3
  2160  000AE6  2410               	addwf	_puntos,w,c
  2161  000AE8  6E10               	movwf	_puntos,c
  2162  000AEA  0E00               	movlw	0
  2163  000AEC  2011               	addwfc	_puntos+1,w,c
  2164  000AEE  6E11               	movwf	_puntos+1,c
  2165                           
  2166                           ;main.c: 91: _delay((unsigned long)((167)*(24000000ul/4000.0)));
  2167  000AF0  0E06               	movlw	6
  2168  000AF2  6E3D               	movwf	(??_marcador+1)& (0+255),c
  2169  000AF4  0E16               	movlw	22
  2170  000AF6  6E3C               	movwf	??_marcador& (0+255),c
  2171  000AF8  0E46               	movlw	70
  2172  000AFA                     u4467:
  2173  000AFA  2EE8               	decfsz	wreg,f,c
  2174  000AFC  D7FE               	bra	u4467
  2175  000AFE  2E3C               	decfsz	??_marcador& (0+255),f,c
  2176  000B00  D7FC               	bra	u4467
  2177  000B02  2E3D               	decfsz	(??_marcador+1)& (0+255),f,c
  2178  000B04  D7FA               	bra	u4467
  2179  000B06  D000               	nop2	
  2180                           
  2181                           ;main.c: 92: repeticion++;
  2182  000B08  4A46               	infsnz	_repeticion,f,c
  2183  000B0A  2A47               	incf	_repeticion+1,f,c
  2184                           
  2185                           ;main.c: 93: if(repeticion == 45){
  2186  000B0C  0E2D               	movlw	45
  2187  000B0E  1846               	xorwf	_repeticion,w,c
  2188  000B10  1047               	iorwf	_repeticion+1,w,c
  2189  000B12  A4D8               	btfss	status,2,c
  2190  000B14  D002               	goto	l605
  2191                           
  2192                           ;main.c: 94: PORTBbits.RB2 = 0;
  2193  000B16  9481               	bcf	3969,2,c	;volatile
  2194                           
  2195                           ;main.c: 95: PORTBbits.RB3 = 1;
  2196  000B18  8681               	bsf	3969,3,c	;volatile
  2197  000B1A                     l605:
  2198  000B1A                     l4157:
  2199                           
  2200                           ;main.c: 96: }
  2201                           ;main.c: 98: }
  2202                           ;main.c: 99: if(repeticion > 45 && repeticion <= 60){
  2203  000B1A  5047               	movf	_repeticion+1,w,c
  2204  000B1C  E104               	bnz	u3020
  2205  000B1E  0E2E               	movlw	46
  2206  000B20  5C46               	subwf	_repeticion,w,c
  2207  000B22  A0D8               	btfss	status,0,c
  2208  000B24  D021               	goto	l607
  2209  000B26                     u3020:
  2210  000B26  5047               	movf	_repeticion+1,w,c
  2211  000B28  E11F               	bnz	l4169
  2212  000B2A  0E3D               	movlw	61
  2213  000B2C  5C46               	subwf	_repeticion,w,c
  2214  000B2E  B0D8               	btfsc	status,0,c
  2215  000B30  D01B               	goto	l607
  2216                           
  2217                           ;main.c: 100: puntos = puntos + 4;
  2218  000B32  0E04               	movlw	4
  2219  000B34  2410               	addwf	_puntos,w,c
  2220  000B36  6E10               	movwf	_puntos,c
  2221  000B38  0E00               	movlw	0
  2222  000B3A  2011               	addwfc	_puntos+1,w,c
  2223  000B3C  6E11               	movwf	_puntos+1,c
  2224                           
  2225                           ;main.c: 101: _delay((unsigned long)((167)*(24000000ul/4000.0)));
  2226  000B3E  0E06               	movlw	6
  2227  000B40  6E3D               	movwf	(??_marcador+1)& (0+255),c
  2228  000B42  0E16               	movlw	22
  2229  000B44  6E3C               	movwf	??_marcador& (0+255),c
  2230  000B46  0E46               	movlw	70
  2231  000B48                     u4477:
  2232  000B48  2EE8               	decfsz	wreg,f,c
  2233  000B4A  D7FE               	bra	u4477
  2234  000B4C  2E3C               	decfsz	??_marcador& (0+255),f,c
  2235  000B4E  D7FC               	bra	u4477
  2236  000B50  2E3D               	decfsz	(??_marcador+1)& (0+255),f,c
  2237  000B52  D7FA               	bra	u4477
  2238  000B54  D000               	nop2	
  2239                           
  2240                           ;main.c: 102: repeticion++;
  2241  000B56  4A46               	infsnz	_repeticion,f,c
  2242  000B58  2A47               	incf	_repeticion+1,f,c
  2243                           
  2244                           ;main.c: 103: if(repeticion == 60){
  2245  000B5A  0E3C               	movlw	60
  2246  000B5C  1846               	xorwf	_repeticion,w,c
  2247  000B5E  1047               	iorwf	_repeticion+1,w,c
  2248  000B60  A4D8               	btfss	status,2,c
  2249  000B62  D002               	goto	l607
  2250                           
  2251                           ;main.c: 104: PORTBbits.RB3 = 0;
  2252  000B64  9681               	bcf	3969,3,c	;volatile
  2253                           
  2254                           ;main.c: 105: PORTBbits.RB4 = 1;
  2255  000B66  8881               	bsf	3969,4,c	;volatile
  2256  000B68                     l607:
  2257  000B68                     l4169:
  2258                           
  2259                           ;main.c: 106: }
  2260                           ;main.c: 107: }
  2261                           ;main.c: 108: if (repeticion > 60 && repeticion <= 75){
  2262  000B68  5047               	movf	_repeticion+1,w,c
  2263  000B6A  E104               	bnz	u3050
  2264  000B6C  0E3D               	movlw	61
  2265  000B6E  5C46               	subwf	_repeticion,w,c
  2266  000B70  A0D8               	btfss	status,0,c
  2267  000B72  D021               	goto	l609
  2268  000B74                     u3050:
  2269  000B74  5047               	movf	_repeticion+1,w,c
  2270  000B76  E11F               	bnz	l4181
  2271  000B78  0E4C               	movlw	76
  2272  000B7A  5C46               	subwf	_repeticion,w,c
  2273  000B7C  B0D8               	btfsc	status,0,c
  2274  000B7E  D01B               	goto	l609
  2275                           
  2276                           ;main.c: 109: puntos = puntos + 5;
  2277  000B80  0E05               	movlw	5
  2278  000B82  2410               	addwf	_puntos,w,c
  2279  000B84  6E10               	movwf	_puntos,c
  2280  000B86  0E00               	movlw	0
  2281  000B88  2011               	addwfc	_puntos+1,w,c
  2282  000B8A  6E11               	movwf	_puntos+1,c
  2283                           
  2284                           ;main.c: 110: _delay((unsigned long)((167)*(24000000ul/4000.0)));
  2285  000B8C  0E06               	movlw	6
  2286  000B8E  6E3D               	movwf	(??_marcador+1)& (0+255),c
  2287  000B90  0E16               	movlw	22
  2288  000B92  6E3C               	movwf	??_marcador& (0+255),c
  2289  000B94  0E46               	movlw	70
  2290  000B96                     u4487:
  2291  000B96  2EE8               	decfsz	wreg,f,c
  2292  000B98  D7FE               	bra	u4487
  2293  000B9A  2E3C               	decfsz	??_marcador& (0+255),f,c
  2294  000B9C  D7FC               	bra	u4487
  2295  000B9E  2E3D               	decfsz	(??_marcador+1)& (0+255),f,c
  2296  000BA0  D7FA               	bra	u4487
  2297  000BA2  D000               	nop2	
  2298                           
  2299                           ;main.c: 111: repeticion++;
  2300  000BA4  4A46               	infsnz	_repeticion,f,c
  2301  000BA6  2A47               	incf	_repeticion+1,f,c
  2302                           
  2303                           ;main.c: 112: if(repeticion == 75){
  2304  000BA8  0E4B               	movlw	75
  2305  000BAA  1846               	xorwf	_repeticion,w,c
  2306  000BAC  1047               	iorwf	_repeticion+1,w,c
  2307  000BAE  A4D8               	btfss	status,2,c
  2308  000BB0  D002               	goto	l609
  2309                           
  2310                           ;main.c: 113: PORTBbits.RB4 = 0;
  2311  000BB2  9881               	bcf	3969,4,c	;volatile
  2312                           
  2313                           ;main.c: 114: PORTBbits.RB5 = 1;
  2314  000BB4  8A81               	bsf	3969,5,c	;volatile
  2315  000BB6                     l609:
  2316  000BB6                     l4181:
  2317                           
  2318                           ;main.c: 115: }
  2319                           ;main.c: 116: }
  2320                           ;main.c: 117: if (repeticion > 75 && repeticion <= 90){
  2321  000BB6  5047               	movf	_repeticion+1,w,c
  2322  000BB8  E104               	bnz	u3080
  2323  000BBA  0E4C               	movlw	76
  2324  000BBC  5C46               	subwf	_repeticion,w,c
  2325  000BBE  A0D8               	btfss	status,0,c
  2326  000BC0  0012               	return	
  2327  000BC2                     u3080:
  2328  000BC2  5047               	movf	_repeticion+1,w,c
  2329  000BC4  E120               	bnz	l612
  2330  000BC6  0E5B               	movlw	91
  2331  000BC8  5C46               	subwf	_repeticion,w,c
  2332  000BCA  B0D8               	btfsc	status,0,c
  2333  000BCC  0012               	return	
  2334                           
  2335                           ;main.c: 118: puntos = puntos + 6;
  2336  000BCE  0E06               	movlw	6
  2337  000BD0  2410               	addwf	_puntos,w,c
  2338  000BD2  6E10               	movwf	_puntos,c
  2339  000BD4  0E00               	movlw	0
  2340  000BD6  2011               	addwfc	_puntos+1,w,c
  2341  000BD8  6E11               	movwf	_puntos+1,c
  2342                           
  2343                           ;main.c: 119: _delay((unsigned long)((167)*(24000000ul/4000.0)));
  2344  000BDA  0E06               	movlw	6
  2345  000BDC  6E3D               	movwf	(??_marcador+1)& (0+255),c
  2346  000BDE  0E16               	movlw	22
  2347  000BE0  6E3C               	movwf	??_marcador& (0+255),c
  2348  000BE2  0E46               	movlw	70
  2349  000BE4                     u4497:
  2350  000BE4  2EE8               	decfsz	wreg,f,c
  2351  000BE6  D7FE               	bra	u4497
  2352  000BE8  2E3C               	decfsz	??_marcador& (0+255),f,c
  2353  000BEA  D7FC               	bra	u4497
  2354  000BEC  2E3D               	decfsz	(??_marcador+1)& (0+255),f,c
  2355  000BEE  D7FA               	bra	u4497
  2356  000BF0  D000               	nop2	
  2357                           
  2358                           ;main.c: 120: repeticion++;
  2359  000BF2  4A46               	infsnz	_repeticion,f,c
  2360  000BF4  2A47               	incf	_repeticion+1,f,c
  2361                           
  2362                           ;main.c: 121: if(repeticion == 90){
  2363  000BF6  0E5A               	movlw	90
  2364  000BF8  1846               	xorwf	_repeticion,w,c
  2365  000BFA  1047               	iorwf	_repeticion+1,w,c
  2366  000BFC  A4D8               	btfss	status,2,c
  2367  000BFE  0012               	return	
  2368                           
  2369                           ;main.c: 122: PORTBbits.RB5 = 0;
  2370  000C00  9A81               	bcf	3969,5,c	;volatile
  2371                           
  2372                           ;main.c: 123: PORTBbits.RB6 = 1;
  2373  000C02  8C81               	bsf	3969,6,c	;volatile
  2374  000C04  0012               	return	
  2375  000C06                     l612:
  2376  000C06  0012               	return		;funcret
  2377  000C08                     __end_of_marcador:
  2378                           	opt stack 0
  2379                           tblptru	equ	0xFF8
  2380                           tblptrh	equ	0xFF7
  2381                           tblptrl	equ	0xFF6
  2382                           tablat	equ	0xFF5
  2383                           prodh	equ	0xFF4
  2384                           prodl	equ	0xFF3
  2385                           intcon	equ	0xFF2
  2386                           postinc0	equ	0xFEE
  2387                           wreg	equ	0xFE8
  2388                           postdec1	equ	0xFE5
  2389                           fsr1l	equ	0xFE1
  2390                           indf2	equ	0xFDF
  2391                           postinc2	equ	0xFDE
  2392                           postdec2	equ	0xFDD
  2393                           fsr2h	equ	0xFDA
  2394                           fsr2l	equ	0xFD9
  2395                           status	equ	0xFD8
  2396                           
  2397 ;; *************** function _enemigo2 *****************
  2398 ;; Defined at:
  2399 ;;		line 161 in file "main.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;		None
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      void 
  2406 ;; Registers used:
  2407 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2413 ;;      Params:         0       0       0       0       0       0       0       0       0
  2414 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2415 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2416 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2417 ;;Total ram usage:        0 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; Hardware stack levels required when called:    6
  2420 ;; This function calls:
  2421 ;;		_BusyXLCD
  2422 ;;		_SetDDRamAddr
  2423 ;;		_putrsXLCD
  2424 ;; This function is called by:
  2425 ;;		_drive
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           	psect	text8
  2430  0014E2                     __ptext8:
  2431                           	opt stack 0
  2432  0014E2                     _enemigo2:
  2433                           	opt stack 23
  2434                           
  2435                           ;main.c: 163: while(BusyXLCD());
  2436                           
  2437                           ;incstack = 0
  2438  0014E2  EC0C  F00A         	call	_BusyXLCD	;wreg free
  2439  0014E6  0900               	iorlw	0
  2440  0014E8  A4D8               	btfss	status,2,c
  2441  0014EA  D7FB               	goto	_enemigo2
  2442                           
  2443                           ;main.c: 164: SetDDRamAddr(posEne2);
  2444  0014EC  5042               	movf	_posEne2,w,c
  2445  0014EE  EC64  F009         	call	_SetDDRamAddr
  2446  0014F2  EC0C  F00A         	call	_BusyXLCD	;wreg free
  2447  0014F6  0900               	iorlw	0
  2448  0014F8  A4D8               	btfss	status,2,c
  2449  0014FA  D7FB               	goto	l637
  2450                           
  2451                           ;main.c: 167: putrsXLCD("O");
  2452  0014FC  0E12               	movlw	low STR_1
  2453  0014FE  6E3D               	movwf	putrsXLCD@buffer,c
  2454  001500  0E08               	movlw	high STR_1
  2455  001502  6E3E               	movwf	putrsXLCD@buffer+1,c
  2456  001504  EC29  F00A         	call	_putrsXLCD	;wreg free
  2457  001508  0012               	return		;funcret
  2458  00150A                     __end_of_enemigo2:
  2459                           	opt stack 0
  2460                           tblptru	equ	0xFF8
  2461                           tblptrh	equ	0xFF7
  2462                           tblptrl	equ	0xFF6
  2463                           tablat	equ	0xFF5
  2464                           prodh	equ	0xFF4
  2465                           prodl	equ	0xFF3
  2466                           intcon	equ	0xFF2
  2467                           postinc0	equ	0xFEE
  2468                           wreg	equ	0xFE8
  2469                           postdec1	equ	0xFE5
  2470                           fsr1l	equ	0xFE1
  2471                           indf2	equ	0xFDF
  2472                           postinc2	equ	0xFDE
  2473                           postdec2	equ	0xFDD
  2474                           fsr2h	equ	0xFDA
  2475                           fsr2l	equ	0xFD9
  2476                           status	equ	0xFD8
  2477                           
  2478 ;; *************** function _enemigo1 *****************
  2479 ;; Defined at:
  2480 ;;		line 151 in file "main.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;		None
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;		None
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  1    wreg      void 
  2487 ;; Registers used:
  2488 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2494 ;;      Params:         0       0       0       0       0       0       0       0       0
  2495 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2496 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2497 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2498 ;;Total ram usage:        0 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; Hardware stack levels required when called:    6
  2501 ;; This function calls:
  2502 ;;		_BusyXLCD
  2503 ;;		_SetDDRamAddr
  2504 ;;		_putrsXLCD
  2505 ;; This function is called by:
  2506 ;;		_drive
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           	psect	text9
  2511  00150A                     __ptext9:
  2512                           	opt stack 0
  2513  00150A                     _enemigo1:
  2514                           	opt stack 23
  2515                           
  2516                           ;main.c: 153: while(BusyXLCD());
  2517                           
  2518                           ;incstack = 0
  2519  00150A  EC0C  F00A         	call	_BusyXLCD	;wreg free
  2520  00150E  0900               	iorlw	0
  2521  001510  A4D8               	btfss	status,2,c
  2522  001512  D7FB               	goto	_enemigo1
  2523                           
  2524                           ;main.c: 154: SetDDRamAddr(posEne1);
  2525  001514  5044               	movf	_posEne1,w,c
  2526  001516  EC64  F009         	call	_SetDDRamAddr
  2527  00151A  EC0C  F00A         	call	_BusyXLCD	;wreg free
  2528  00151E  0900               	iorlw	0
  2529  001520  A4D8               	btfss	status,2,c
  2530  001522  D7FB               	goto	l628
  2531                           
  2532                           ;main.c: 157: putrsXLCD("O");
  2533  001524  0E12               	movlw	low STR_1
  2534  001526  6E3D               	movwf	putrsXLCD@buffer,c
  2535  001528  0E08               	movlw	high STR_1
  2536  00152A  6E3E               	movwf	putrsXLCD@buffer+1,c
  2537  00152C  EC29  F00A         	call	_putrsXLCD	;wreg free
  2538  001530  0012               	return		;funcret
  2539  001532                     __end_of_enemigo1:
  2540                           	opt stack 0
  2541                           tblptru	equ	0xFF8
  2542                           tblptrh	equ	0xFF7
  2543                           tblptrl	equ	0xFF6
  2544                           tablat	equ	0xFF5
  2545                           prodh	equ	0xFF4
  2546                           prodl	equ	0xFF3
  2547                           intcon	equ	0xFF2
  2548                           postinc0	equ	0xFEE
  2549                           wreg	equ	0xFE8
  2550                           postdec1	equ	0xFE5
  2551                           fsr1l	equ	0xFE1
  2552                           indf2	equ	0xFDF
  2553                           postinc2	equ	0xFDE
  2554                           postdec2	equ	0xFDD
  2555                           fsr2h	equ	0xFDA
  2556                           fsr2l	equ	0xFD9
  2557                           status	equ	0xFD8
  2558                           
  2559 ;; *************** function _putrsXLCD *****************
  2560 ;; Defined at:
  2561 ;;		line 16 in file "XLCD/putrxlcd.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;  buffer          2   24[COMRAM] PTR const unsigned char 
  2564 ;;		 -> STR_3(2), STR_2(2), STR_1(2), 
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;		None
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  1    wreg      void 
  2569 ;; Registers used:
  2570 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2576 ;;      Params:         2       0       0       0       0       0       0       0       0
  2577 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2578 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2579 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2580 ;;Total ram usage:        2 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; Hardware stack levels required when called:    5
  2583 ;; This function calls:
  2584 ;;		_BusyXLCD
  2585 ;;		_WriteDataXLCD
  2586 ;; This function is called by:
  2587 ;;		_enemigo1
  2588 ;;		_enemigo2
  2589 ;;		_drive
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text10
  2594  001452                     __ptext10:
  2595                           	opt stack 0
  2596  001452                     _putrsXLCD:
  2597                           	opt stack 24
  2598                           
  2599                           ;putrxlcd.c: 18: while(*buffer)
  2600                           
  2601                           ;incstack = 0
  2602  001452  D00F               	goto	l92
  2603  001454                     
  2604                           ;putrxlcd.c: 19: {
  2605                           ;putrxlcd.c: 20: while(BusyXLCD());
  2606  001454  EC0C  F00A         	call	_BusyXLCD	;wreg free
  2607  001458  0900               	iorlw	0
  2608  00145A  A4D8               	btfss	status,2,c
  2609  00145C  D7FB               	goto	l93
  2610                           
  2611                           ;putrxlcd.c: 21: WriteDataXLCD(*buffer);
  2612  00145E  C03D  FFF6         	movff	putrsXLCD@buffer,tblptrl
  2613  001462  C03E  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  2614  001466                     	if	0	;tblptru may be non-zero
  2615  001466                     	endif
  2616  001466                     	if	0	;tblptru may be non-zero
  2617  001466                     	endif
  2618  001466  0008               	tblrd		*
  2619  001468  50F5               	movf	tablat,w,c
  2620  00146A  ECB0  F009         	call	_WriteDataXLCD
  2621                           
  2622                           ;putrxlcd.c: 22: buffer++;
  2623  00146E  4A3D               	infsnz	putrsXLCD@buffer,f,c
  2624  001470  2A3E               	incf	putrsXLCD@buffer+1,f,c
  2625  001472                     l92:
  2626  001472  C03D  FFF6         	movff	putrsXLCD@buffer,tblptrl
  2627  001476  C03E  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  2628  00147A                     	if	0	;tblptru may be non-zero
  2629  00147A                     	endif
  2630  00147A                     	if	0	;tblptru may be non-zero
  2631  00147A                     	endif
  2632  00147A  0008               	tblrd		*
  2633  00147C  50F5               	movf	tablat,w,c
  2634  00147E  0900               	iorlw	0
  2635  001480  B4D8               	btfsc	status,2,c
  2636  001482  0012               	return	
  2637  001484  D7E7               	goto	l93
  2638  001486                     __end_of_putrsXLCD:
  2639                           	opt stack 0
  2640                           tblptru	equ	0xFF8
  2641                           tblptrh	equ	0xFF7
  2642                           tblptrl	equ	0xFF6
  2643                           tablat	equ	0xFF5
  2644                           prodh	equ	0xFF4
  2645                           prodl	equ	0xFF3
  2646                           intcon	equ	0xFF2
  2647                           postinc0	equ	0xFEE
  2648                           wreg	equ	0xFE8
  2649                           postdec1	equ	0xFE5
  2650                           fsr1l	equ	0xFE1
  2651                           indf2	equ	0xFDF
  2652                           postinc2	equ	0xFDE
  2653                           postdec2	equ	0xFDD
  2654                           fsr2h	equ	0xFDA
  2655                           fsr2l	equ	0xFD9
  2656                           status	equ	0xFD8
  2657                           
  2658 ;; *************** function _WriteDataXLCD *****************
  2659 ;; Defined at:
  2660 ;;		line 16 in file "XLCD/writdata.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;  data            1    wreg     unsigned char 
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;  data            1   23[COMRAM] unsigned char 
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  1    wreg      void 
  2667 ;; Registers used:
  2668 ;;		wreg, status,2, status,0, cstack
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2674 ;;      Params:         0       0       0       0       0       0       0       0       0
  2675 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2676 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2677 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2678 ;;Total ram usage:        1 bytes
  2679 ;; Hardware stack levels used:    1
  2680 ;; Hardware stack levels required when called:    4
  2681 ;; This function calls:
  2682 ;;		_DelayFor18TCY
  2683 ;; This function is called by:
  2684 ;;		_putrsXLCD
  2685 ;;		_putsXLCD
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           	psect	text11
  2690  001360                     __ptext11:
  2691                           	opt stack 0
  2692  001360                     _WriteDataXLCD:
  2693                           	opt stack 24
  2694                           
  2695                           ;incstack = 0
  2696                           ;WriteDataXLCD@data stored from wreg
  2697  001360  6E3C               	movwf	WriteDataXLCD@data,c
  2698                           
  2699                           ;writdata.c: 35: TRISD &= 0xf0;
  2700  001362  0EF0               	movlw	240
  2701  001364  1695               	andwf	3989,f,c	;volatile
  2702                           
  2703                           ;writdata.c: 36: PORTD &= 0xf0;
  2704  001366  0EF0               	movlw	240
  2705  001368  1683               	andwf	3971,f,c	;volatile
  2706                           
  2707                           ;writdata.c: 37: PORTD |= ((data>>4)&0x0f);
  2708  00136A  383C               	swapf	WriteDataXLCD@data,w,c
  2709  00136C  0B0F               	andlw	15
  2710  00136E  0B0F               	andlw	15
  2711  001370  1283               	iorwf	3971,f,c	;volatile
  2712                           
  2713                           ;writdata.c: 39: LATDbits.LATD4 = 1;
  2714  001372  888C               	bsf	3980,4,c	;volatile
  2715                           
  2716                           ;writdata.c: 40: LATDbits.LATD5 = 0;
  2717  001374  9A8C               	bcf	3980,5,c	;volatile
  2718                           
  2719                           ;writdata.c: 41: DelayFor18TCY();
  2720  001376  EC34  F00B         	call	_DelayFor18TCY	;wreg free
  2721                           
  2722                           ;writdata.c: 42: LATDbits.LATD6 = 1;
  2723  00137A  8C8C               	bsf	3980,6,c	;volatile
  2724                           
  2725                           ;writdata.c: 43: DelayFor18TCY();
  2726  00137C  EC34  F00B         	call	_DelayFor18TCY	;wreg free
  2727                           
  2728                           ;writdata.c: 44: LATDbits.LATD6 = 0;
  2729  001380  9C8C               	bcf	3980,6,c	;volatile
  2730                           
  2731                           ;writdata.c: 49: PORTD &= 0xf0;
  2732  001382  0EF0               	movlw	240
  2733  001384  1683               	andwf	3971,f,c	;volatile
  2734                           
  2735                           ;writdata.c: 50: PORTD |= (data&0x0f);
  2736  001386  503C               	movf	WriteDataXLCD@data,w,c
  2737  001388  0B0F               	andlw	15
  2738  00138A  1283               	iorwf	3971,f,c	;volatile
  2739                           
  2740                           ;writdata.c: 52: DelayFor18TCY();
  2741  00138C  EC34  F00B         	call	_DelayFor18TCY	;wreg free
  2742                           
  2743                           ;writdata.c: 53: LATDbits.LATD6 = 1;
  2744  001390  8C8C               	bsf	3980,6,c	;volatile
  2745                           
  2746                           ;writdata.c: 54: DelayFor18TCY();
  2747  001392  EC34  F00B         	call	_DelayFor18TCY	;wreg free
  2748                           
  2749                           ;writdata.c: 55: LATDbits.LATD6 = 0;
  2750  001396  9C8C               	bcf	3980,6,c	;volatile
  2751                           
  2752                           ;writdata.c: 59: TRISD |= 0x0f;
  2753  001398  0E0F               	movlw	15
  2754  00139A  1295               	iorwf	3989,f,c	;volatile
  2755  00139C  0012               	return	
  2756  00139E                     __end_of_WriteDataXLCD:
  2757                           	opt stack 0
  2758                           tblptru	equ	0xFF8
  2759                           tblptrh	equ	0xFF7
  2760                           tblptrl	equ	0xFF6
  2761                           tablat	equ	0xFF5
  2762                           prodh	equ	0xFF4
  2763                           prodl	equ	0xFF3
  2764                           intcon	equ	0xFF2
  2765                           postinc0	equ	0xFEE
  2766                           wreg	equ	0xFE8
  2767                           postdec1	equ	0xFE5
  2768                           fsr1l	equ	0xFE1
  2769                           indf2	equ	0xFDF
  2770                           postinc2	equ	0xFDE
  2771                           postdec2	equ	0xFDD
  2772                           fsr2h	equ	0xFDA
  2773                           fsr2l	equ	0xFD9
  2774                           status	equ	0xFD8
  2775                           
  2776 ;; *************** function _ADC_StartConversion *****************
  2777 ;; Defined at:
  2778 ;;		line 82 in file "adc.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;  channel         1    wreg     enum E5249
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;  channel         1   24[COMRAM] enum E5249
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  1    wreg      void 
  2785 ;; Registers used:
  2786 ;;		wreg, status,2, status,0
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2792 ;;      Params:         0       0       0       0       0       0       0       0       0
  2793 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2794 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2795 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2796 ;;Total ram usage:        2 bytes
  2797 ;; Hardware stack levels used:    1
  2798 ;; Hardware stack levels required when called:    3
  2799 ;; This function calls:
  2800 ;;		Nothing
  2801 ;; This function is called by:
  2802 ;;		_drive
  2803 ;;		_main
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           	psect	text12
  2808  001576                     __ptext12:
  2809                           	opt stack 0
  2810  001576                     _ADC_StartConversion:
  2811                           	opt stack 26
  2812                           
  2813                           ;incstack = 0
  2814                           ;ADC_StartConversion@channel stored from wreg
  2815  001576  6E3D               	movwf	ADC_StartConversion@channel,c
  2816                           
  2817                           ;adc.c: 85: ADCON0bits.CHS = channel;
  2818  001578  C03D  F03C         	movff	ADC_StartConversion@channel,??_ADC_StartConversion
  2819  00157C  463C               	rlncf	??_ADC_StartConversion,f,c
  2820  00157E  463C               	rlncf	??_ADC_StartConversion,f,c
  2821  001580  50C2               	movf	4034,w,c	;volatile
  2822  001582  183C               	xorwf	??_ADC_StartConversion,w,c
  2823  001584  0BC3               	andlw	-61
  2824  001586  183C               	xorwf	??_ADC_StartConversion,w,c
  2825  001588  6EC2               	movwf	4034,c	;volatile
  2826                           
  2827                           ;adc.c: 87: ADCON0bits.ADON = 1;
  2828  00158A  80C2               	bsf	4034,0,c	;volatile
  2829                           
  2830                           ;adc.c: 91: ADCON0bits.GO_nDONE = 1;
  2831  00158C  82C2               	bsf	4034,1,c	;volatile
  2832  00158E  0012               	return		;funcret
  2833  001590                     __end_of_ADC_StartConversion:
  2834                           	opt stack 0
  2835                           tblptru	equ	0xFF8
  2836                           tblptrh	equ	0xFF7
  2837                           tblptrl	equ	0xFF6
  2838                           tablat	equ	0xFF5
  2839                           prodh	equ	0xFF4
  2840                           prodl	equ	0xFF3
  2841                           intcon	equ	0xFF2
  2842                           postinc0	equ	0xFEE
  2843                           wreg	equ	0xFE8
  2844                           postdec1	equ	0xFE5
  2845                           fsr1l	equ	0xFE1
  2846                           indf2	equ	0xFDF
  2847                           postinc2	equ	0xFDE
  2848                           postdec2	equ	0xFDD
  2849                           fsr2h	equ	0xFDA
  2850                           fsr2l	equ	0xFD9
  2851                           status	equ	0xFD8
  2852                           
  2853 ;; *************** function _SYSTEM_Initialize *****************
  2854 ;; Defined at:
  2855 ;;		line 77 in file "mcc.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;		None
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;		None
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      void 
  2862 ;; Registers used:
  2863 ;;		wreg, status,2, status,0, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2869 ;;      Params:         0       0       0       0       0       0       0       0       0
  2870 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2871 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2872 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2873 ;;Total ram usage:        0 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:    7
  2876 ;; This function calls:
  2877 ;;		_ADC_Initialize
  2878 ;;		_INTERRUPT_Initialize
  2879 ;;		_OSCILLATOR_Initialize
  2880 ;;		_PIN_MANAGER_Initialize
  2881 ;;		_XLCD_Initialize
  2882 ;; This function is called by:
  2883 ;;		_main
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887                           	psect	text13
  2888  0015DC                     __ptext13:
  2889                           	opt stack 0
  2890  0015DC                     _SYSTEM_Initialize:
  2891                           	opt stack 23
  2892                           
  2893                           ;mcc.c: 80: INTERRUPT_Initialize();
  2894                           
  2895                           ;incstack = 0
  2896  0015DC  ECAD  F00A         	call	_INTERRUPT_Initialize	;wreg free
  2897                           
  2898                           ;mcc.c: 81: PIN_MANAGER_Initialize();
  2899  0015E0  ECC8  F00A         	call	_PIN_MANAGER_Initialize	;wreg free
  2900                           
  2901                           ;mcc.c: 82: OSCILLATOR_Initialize();
  2902  0015E4  EC2A  F00B         	call	_OSCILLATOR_Initialize	;wreg free
  2903                           
  2904                           ;mcc.c: 83: XLCD_Initialize();
  2905  0015E8  ECEE  F009         	call	_XLCD_Initialize	;wreg free
  2906                           
  2907                           ;mcc.c: 86: ADC_Initialize();
  2908  0015EC  ECD5  F00A         	call	_ADC_Initialize	;wreg free
  2909  0015F0  0012               	return		;funcret
  2910  0015F2                     __end_of_SYSTEM_Initialize:
  2911                           	opt stack 0
  2912                           tblptru	equ	0xFF8
  2913                           tblptrh	equ	0xFF7
  2914                           tblptrl	equ	0xFF6
  2915                           tablat	equ	0xFF5
  2916                           prodh	equ	0xFF4
  2917                           prodl	equ	0xFF3
  2918                           intcon	equ	0xFF2
  2919                           postinc0	equ	0xFEE
  2920                           wreg	equ	0xFE8
  2921                           postdec1	equ	0xFE5
  2922                           fsr1l	equ	0xFE1
  2923                           indf2	equ	0xFDF
  2924                           postinc2	equ	0xFDE
  2925                           postdec2	equ	0xFDD
  2926                           fsr2h	equ	0xFDA
  2927                           fsr2l	equ	0xFD9
  2928                           status	equ	0xFD8
  2929                           
  2930 ;; *************** function _XLCD_Initialize *****************
  2931 ;; Defined at:
  2932 ;;		line 6 in file "user_xlcd.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;		None
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;		None
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  1    wreg      void 
  2939 ;; Registers used:
  2940 ;;		wreg, status,2, status,0, cstack
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2946 ;;      Params:         0       0       0       0       0       0       0       0       0
  2947 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2948 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2949 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2950 ;;Total ram usage:        0 bytes
  2951 ;; Hardware stack levels used:    1
  2952 ;; Hardware stack levels required when called:    6
  2953 ;; This function calls:
  2954 ;;		_BusyXLCD
  2955 ;;		_OpenXLCD
  2956 ;;		_SetDDRamAddr
  2957 ;;		_WriteCmdXLCD
  2958 ;; This function is called by:
  2959 ;;		_SYSTEM_Initialize
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           	psect	text14
  2964  0013DC                     __ptext14:
  2965                           	opt stack 0
  2966  0013DC                     _XLCD_Initialize:
  2967                           	opt stack 23
  2968                           
  2969                           ;user_xlcd.c: 11: TRISDbits.TRISD7 = 0;
  2970                           
  2971                           ;incstack = 0
  2972  0013DC  9E95               	bcf	3989,7,c	;volatile
  2973                           
  2974                           ;user_xlcd.c: 12: LATDbits.LATD7 = 1;
  2975  0013DE  8E8C               	bsf	3980,7,c	;volatile
  2976                           
  2977                           ;user_xlcd.c: 15: OpenXLCD(0b00101100 & 0b00111000);
  2978  0013E0  0E28               	movlw	40
  2979  0013E2  ECB5  F008         	call	_OpenXLCD
  2980  0013E6  EC0C  F00A         	call	_BusyXLCD	;wreg free
  2981  0013EA  0900               	iorlw	0
  2982  0013EC  A4D8               	btfss	status,2,c
  2983  0013EE  D7FB               	goto	l1016
  2984                           
  2985                           ;user_xlcd.c: 18: WriteCmdXLCD(0b00001111 & 0b00001111 & 0b00001111);
  2986  0013F0  0E0F               	movlw	15
  2987  0013F2  ECCF  F009         	call	_WriteCmdXLCD
  2988  0013F6  EC0C  F00A         	call	_BusyXLCD	;wreg free
  2989  0013FA  0900               	iorlw	0
  2990  0013FC  A4D8               	btfss	status,2,c
  2991  0013FE  D7FB               	goto	l1019
  2992                           
  2993                           ;user_xlcd.c: 21: WriteCmdXLCD(0b00000110);
  2994  001400  0E06               	movlw	6
  2995  001402  ECCF  F009         	call	_WriteCmdXLCD
  2996  001406  EC0C  F00A         	call	_BusyXLCD	;wreg free
  2997  00140A  0900               	iorlw	0
  2998  00140C  A4D8               	btfss	status,2,c
  2999  00140E  D7FB               	goto	l1022
  3000                           
  3001                           ;user_xlcd.c: 24: SetDDRamAddr(0x0);
  3002  001410  0E00               	movlw	0
  3003  001412  EC64  F009         	call	_SetDDRamAddr
  3004  001416  0012               	return		;funcret
  3005  001418                     __end_of_XLCD_Initialize:
  3006                           	opt stack 0
  3007                           tblptru	equ	0xFF8
  3008                           tblptrh	equ	0xFF7
  3009                           tblptrl	equ	0xFF6
  3010                           tablat	equ	0xFF5
  3011                           prodh	equ	0xFF4
  3012                           prodl	equ	0xFF3
  3013                           intcon	equ	0xFF2
  3014                           postinc0	equ	0xFEE
  3015                           wreg	equ	0xFE8
  3016                           postdec1	equ	0xFE5
  3017                           fsr1l	equ	0xFE1
  3018                           indf2	equ	0xFDF
  3019                           postinc2	equ	0xFDE
  3020                           postdec2	equ	0xFDD
  3021                           fsr2h	equ	0xFDA
  3022                           fsr2l	equ	0xFD9
  3023                           status	equ	0xFD8
  3024                           
  3025 ;; *************** function _OpenXLCD *****************
  3026 ;; Defined at:
  3027 ;;		line 19 in file "XLCD/openxlcd.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;  lcdtype         1    wreg     unsigned char 
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;  lcdtype         1   27[COMRAM] unsigned char 
  3032 ;; Return value:  Size  Location     Type
  3033 ;;                  1    wreg      void 
  3034 ;; Registers used:
  3035 ;;		wreg, status,2, status,0, cstack
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3041 ;;      Params:         0       0       0       0       0       0       0       0       0
  3042 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3043 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3044 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3045 ;;Total ram usage:        1 bytes
  3046 ;; Hardware stack levels used:    1
  3047 ;; Hardware stack levels required when called:    5
  3048 ;; This function calls:
  3049 ;;		_BusyXLCD
  3050 ;;		_Delay10KTCYx
  3051 ;;		_DelayPORXLCD
  3052 ;;		_SetDDRamAddr
  3053 ;;		_WriteCmdXLCD
  3054 ;; This function is called by:
  3055 ;;		_XLCD_Initialize
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           	psect	text15
  3060  00116A                     __ptext15:
  3061                           	opt stack 0
  3062  00116A                     _OpenXLCD:
  3063                           	opt stack 23
  3064                           
  3065                           ;incstack = 0
  3066                           ;OpenXLCD@lcdtype stored from wreg
  3067  00116A  6E40               	movwf	OpenXLCD@lcdtype,c
  3068                           
  3069                           ;openxlcd.c: 31: PORTD &= 0xf0;
  3070  00116C  0EF0               	movlw	240
  3071  00116E  1683               	andwf	3971,f,c	;volatile
  3072                           
  3073                           ;openxlcd.c: 32: TRISD &= 0xF0;
  3074  001170  0EF0               	movlw	240
  3075  001172  1695               	andwf	3989,f,c	;volatile
  3076                           
  3077                           ;openxlcd.c: 35: TRISDbits.TRISD5 = 0;
  3078  001174  9A95               	bcf	3989,5,c	;volatile
  3079                           
  3080                           ;openxlcd.c: 36: TRISDbits.TRISD4 = 0;
  3081  001176  9895               	bcf	3989,4,c	;volatile
  3082                           
  3083                           ;openxlcd.c: 37: TRISDbits.TRISD6 = 0;
  3084  001178  9C95               	bcf	3989,6,c	;volatile
  3085                           
  3086                           ;openxlcd.c: 38: LATDbits.LATD5 = 0;
  3087  00117A  9A8C               	bcf	3980,5,c	;volatile
  3088                           
  3089                           ;openxlcd.c: 39: LATDbits.LATD4 = 0;
  3090  00117C  988C               	bcf	3980,4,c	;volatile
  3091                           
  3092                           ;openxlcd.c: 40: LATDbits.LATD6 = 0;
  3093  00117E  9C8C               	bcf	3980,6,c	;volatile
  3094                           
  3095                           ;openxlcd.c: 43: DelayPORXLCD();
  3096  001180  EC18  F00B         	call	_DelayPORXLCD	;wreg free
  3097                           
  3098                           ;openxlcd.c: 45: WriteCmdXLCD(0x30);
  3099  001184  0E30               	movlw	48
  3100  001186  ECCF  F009         	call	_WriteCmdXLCD
  3101                           
  3102                           ;openxlcd.c: 46: Delay10KTCYx(0x05);
  3103  00118A  0E05               	movlw	5
  3104  00118C  ECF9  F00A         	call	_Delay10KTCYx
  3105                           
  3106                           ;openxlcd.c: 48: WriteCmdXLCD(0x30);
  3107  001190  0E30               	movlw	48
  3108  001192  ECCF  F009         	call	_WriteCmdXLCD
  3109                           
  3110                           ;openxlcd.c: 49: Delay10KTCYx(0x01);
  3111  001196  0E01               	movlw	1
  3112  001198  ECF9  F00A         	call	_Delay10KTCYx
  3113                           
  3114                           ;openxlcd.c: 52: WriteCmdXLCD(0x32);
  3115  00119C  0E32               	movlw	50
  3116  00119E  ECCF  F009         	call	_WriteCmdXLCD
  3117  0011A2  EC0C  F00A         	call	_BusyXLCD	;wreg free
  3118  0011A6  0900               	iorlw	0
  3119  0011A8  A4D8               	btfss	status,2,c
  3120  0011AA  D7FB               	goto	l65
  3121  0011AC                     u2760:
  3122                           
  3123                           ;openxlcd.c: 58: while(BusyXLCD());
  3124  0011AC  EC0C  F00A         	call	_BusyXLCD	;wreg free
  3125  0011B0  0900               	iorlw	0
  3126  0011B2  A4D8               	btfss	status,2,c
  3127  0011B4  D7FB               	goto	u2760
  3128                           
  3129                           ;openxlcd.c: 59: WriteCmdXLCD(lcdtype);
  3130  0011B6  5040               	movf	OpenXLCD@lcdtype,w,c
  3131  0011B8  ECCF  F009         	call	_WriteCmdXLCD
  3132  0011BC  EC0C  F00A         	call	_BusyXLCD	;wreg free
  3133  0011C0  0900               	iorlw	0
  3134  0011C2  A4D8               	btfss	status,2,c
  3135  0011C4  D7FB               	goto	l71
  3136                           
  3137                           ;openxlcd.c: 63: WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  3138  0011C6  0E08               	movlw	8
  3139  0011C8  ECCF  F009         	call	_WriteCmdXLCD
  3140  0011CC  EC0C  F00A         	call	_BusyXLCD	;wreg free
  3141  0011D0  0900               	iorlw	0
  3142  0011D2  A4D8               	btfss	status,2,c
  3143  0011D4  D7FB               	goto	l74
  3144                           
  3145                           ;openxlcd.c: 65: WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  3146  0011D6  0E0F               	movlw	15
  3147  0011D8  ECCF  F009         	call	_WriteCmdXLCD
  3148  0011DC  EC0C  F00A         	call	_BusyXLCD	;wreg free
  3149  0011E0  0900               	iorlw	0
  3150  0011E2  A4D8               	btfss	status,2,c
  3151  0011E4  D7FB               	goto	l77
  3152                           
  3153                           ;openxlcd.c: 69: WriteCmdXLCD(0x01);
  3154  0011E6  0E01               	movlw	1
  3155  0011E8  ECCF  F009         	call	_WriteCmdXLCD
  3156  0011EC  EC0C  F00A         	call	_BusyXLCD	;wreg free
  3157  0011F0  0900               	iorlw	0
  3158  0011F2  A4D8               	btfss	status,2,c
  3159  0011F4  D7FB               	goto	l80
  3160                           
  3161                           ;openxlcd.c: 73: WriteCmdXLCD(0b00000100);
  3162  0011F6  0E04               	movlw	4
  3163  0011F8  ECCF  F009         	call	_WriteCmdXLCD
  3164  0011FC  EC0C  F00A         	call	_BusyXLCD	;wreg free
  3165  001200  0900               	iorlw	0
  3166  001202  A4D8               	btfss	status,2,c
  3167  001204  D7FB               	goto	l83
  3168                           
  3169                           ;openxlcd.c: 77: SetDDRamAddr(0x80);
  3170  001206  0E80               	movlw	128
  3171  001208  EC64  F009         	call	_SetDDRamAddr
  3172  00120C  0012               	return	
  3173  00120E                     __end_of_OpenXLCD:
  3174                           	opt stack 0
  3175                           tblptru	equ	0xFF8
  3176                           tblptrh	equ	0xFF7
  3177                           tblptrl	equ	0xFF6
  3178                           tablat	equ	0xFF5
  3179                           prodh	equ	0xFF4
  3180                           prodl	equ	0xFF3
  3181                           intcon	equ	0xFF2
  3182                           postinc0	equ	0xFEE
  3183                           wreg	equ	0xFE8
  3184                           postdec1	equ	0xFE5
  3185                           fsr1l	equ	0xFE1
  3186                           indf2	equ	0xFDF
  3187                           postinc2	equ	0xFDE
  3188                           postdec2	equ	0xFDD
  3189                           fsr2h	equ	0xFDA
  3190                           fsr2l	equ	0xFD9
  3191                           status	equ	0xFD8
  3192                           
  3193 ;; *************** function _WriteCmdXLCD *****************
  3194 ;; Defined at:
  3195 ;;		line 13 in file "XLCD/wcmdxlcd.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;  cmd             1    wreg     unsigned char 
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;  cmd             1   23[COMRAM] unsigned char 
  3200 ;; Return value:  Size  Location     Type
  3201 ;;                  1    wreg      void 
  3202 ;; Registers used:
  3203 ;;		wreg, status,2, status,0, cstack
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3209 ;;      Params:         0       0       0       0       0       0       0       0       0
  3210 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3211 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3212 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3213 ;;Total ram usage:        1 bytes
  3214 ;; Hardware stack levels used:    1
  3215 ;; Hardware stack levels required when called:    4
  3216 ;; This function calls:
  3217 ;;		_DelayFor18TCY
  3218 ;; This function is called by:
  3219 ;;		_OpenXLCD
  3220 ;;		_drive
  3221 ;;		_XLCD_Initialize
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225                           	psect	text16
  3226  00139E                     __ptext16:
  3227                           	opt stack 0
  3228  00139E                     _WriteCmdXLCD:
  3229                           	opt stack 25
  3230                           
  3231                           ;incstack = 0
  3232                           ;WriteCmdXLCD@cmd stored from wreg
  3233  00139E  6E3C               	movwf	WriteCmdXLCD@cmd,c
  3234                           
  3235                           ;wcmdxlcd.c: 32: TRISD &= 0xf0;
  3236  0013A0  0EF0               	movlw	240
  3237  0013A2  1695               	andwf	3989,f,c	;volatile
  3238                           
  3239                           ;wcmdxlcd.c: 33: PORTD &= 0xf0;
  3240  0013A4  0EF0               	movlw	240
  3241  0013A6  1683               	andwf	3971,f,c	;volatile
  3242                           
  3243                           ;wcmdxlcd.c: 34: PORTD |= (cmd>>4)&0x0f;
  3244  0013A8  383C               	swapf	WriteCmdXLCD@cmd,w,c
  3245  0013AA  0B0F               	andlw	15
  3246  0013AC  0B0F               	andlw	15
  3247  0013AE  1283               	iorwf	3971,f,c	;volatile
  3248                           
  3249                           ;wcmdxlcd.c: 36: LATDbits.LATD5 = 0;
  3250  0013B0  9A8C               	bcf	3980,5,c	;volatile
  3251                           
  3252                           ;wcmdxlcd.c: 37: LATDbits.LATD4 = 0;
  3253  0013B2  988C               	bcf	3980,4,c	;volatile
  3254                           
  3255                           ;wcmdxlcd.c: 38: DelayFor18TCY();
  3256  0013B4  EC34  F00B         	call	_DelayFor18TCY	;wreg free
  3257                           
  3258                           ;wcmdxlcd.c: 39: LATDbits.LATD6 = 1;
  3259  0013B8  8C8C               	bsf	3980,6,c	;volatile
  3260                           
  3261                           ;wcmdxlcd.c: 40: DelayFor18TCY();
  3262  0013BA  EC34  F00B         	call	_DelayFor18TCY	;wreg free
  3263                           
  3264                           ;wcmdxlcd.c: 41: LATDbits.LATD6 = 0;
  3265  0013BE  9C8C               	bcf	3980,6,c	;volatile
  3266                           
  3267                           ;wcmdxlcd.c: 46: PORTD &= 0xf0;
  3268  0013C0  0EF0               	movlw	240
  3269  0013C2  1683               	andwf	3971,f,c	;volatile
  3270                           
  3271                           ;wcmdxlcd.c: 47: PORTD |= cmd&0x0f;
  3272  0013C4  503C               	movf	WriteCmdXLCD@cmd,w,c
  3273  0013C6  0B0F               	andlw	15
  3274  0013C8  1283               	iorwf	3971,f,c	;volatile
  3275                           
  3276                           ;wcmdxlcd.c: 49: DelayFor18TCY();
  3277  0013CA  EC34  F00B         	call	_DelayFor18TCY	;wreg free
  3278                           
  3279                           ;wcmdxlcd.c: 50: LATDbits.LATD6 = 1;
  3280  0013CE  8C8C               	bsf	3980,6,c	;volatile
  3281                           
  3282                           ;wcmdxlcd.c: 51: DelayFor18TCY();
  3283  0013D0  EC34  F00B         	call	_DelayFor18TCY	;wreg free
  3284                           
  3285                           ;wcmdxlcd.c: 52: LATDbits.LATD6 = 0;
  3286  0013D4  9C8C               	bcf	3980,6,c	;volatile
  3287                           
  3288                           ;wcmdxlcd.c: 56: TRISD |= 0x0f;
  3289  0013D6  0E0F               	movlw	15
  3290  0013D8  1295               	iorwf	3989,f,c	;volatile
  3291  0013DA  0012               	return	
  3292  0013DC                     __end_of_WriteCmdXLCD:
  3293                           	opt stack 0
  3294                           tblptru	equ	0xFF8
  3295                           tblptrh	equ	0xFF7
  3296                           tblptrl	equ	0xFF6
  3297                           tablat	equ	0xFF5
  3298                           prodh	equ	0xFF4
  3299                           prodl	equ	0xFF3
  3300                           intcon	equ	0xFF2
  3301                           postinc0	equ	0xFEE
  3302                           wreg	equ	0xFE8
  3303                           postdec1	equ	0xFE5
  3304                           fsr1l	equ	0xFE1
  3305                           indf2	equ	0xFDF
  3306                           postinc2	equ	0xFDE
  3307                           postdec2	equ	0xFDD
  3308                           fsr2h	equ	0xFDA
  3309                           fsr2l	equ	0xFD9
  3310                           status	equ	0xFD8
  3311                           
  3312 ;; *************** function _SetDDRamAddr *****************
  3313 ;; Defined at:
  3314 ;;		line 13 in file "XLCD/setddram.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;  DDaddr          1    wreg     unsigned char 
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;  DDaddr          1   26[COMRAM] unsigned char 
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  1    wreg      void 
  3321 ;; Registers used:
  3322 ;;		wreg, status,2, status,0, cstack
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3328 ;;      Params:         0       0       0       0       0       0       0       0       0
  3329 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3330 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3331 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3332 ;;Total ram usage:        4 bytes
  3333 ;; Hardware stack levels used:    1
  3334 ;; Hardware stack levels required when called:    4
  3335 ;; This function calls:
  3336 ;;		_DelayFor18TCY
  3337 ;; This function is called by:
  3338 ;;		_OpenXLCD
  3339 ;;		_enemigo1
  3340 ;;		_enemigo2
  3341 ;;		_drive
  3342 ;;		_XLCD_Initialize
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           	psect	text17
  3347  0012C8                     __ptext17:
  3348                           	opt stack 0
  3349  0012C8                     _SetDDRamAddr:
  3350                           	opt stack 24
  3351                           
  3352                           ;incstack = 0
  3353                           ;SetDDRamAddr@DDaddr stored from wreg
  3354  0012C8  6E3F               	movwf	SetDDRamAddr@DDaddr,c
  3355                           
  3356                           ;setddram.c: 32: TRISD &= 0xf0;
  3357  0012CA  0EF0               	movlw	240
  3358  0012CC  1695               	andwf	3989,f,c	;volatile
  3359                           
  3360                           ;setddram.c: 33: PORTD &= 0xf0;
  3361  0012CE  0EF0               	movlw	240
  3362  0012D0  1683               	andwf	3971,f,c	;volatile
  3363                           
  3364                           ;setddram.c: 34: PORTD |= (((DDaddr | 0b10000000)>>4) & 0x0f);
  3365  0012D2  503F               	movf	SetDDRamAddr@DDaddr,w,c
  3366  0012D4  6E3C               	movwf	??_SetDDRamAddr& (0+255),c
  3367  0012D6  6A3D               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  3368  0012D8  8E3C               	bsf	??_SetDDRamAddr,7,c
  3369  0012DA  0E04               	movlw	4
  3370  0012DC  6E3E               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  3371  0012DE                     u2755:
  3372  0012DE  343D               	rlcf	??_SetDDRamAddr+1,w,c
  3373  0012E0  323D               	rrcf	??_SetDDRamAddr+1,f,c
  3374  0012E2  323C               	rrcf	??_SetDDRamAddr,f,c
  3375  0012E4  2E3E               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  3376  0012E6  D7FB               	goto	u2755
  3377  0012E8  503C               	movf	??_SetDDRamAddr,w,c
  3378  0012EA  0B0F               	andlw	15
  3379  0012EC  1283               	iorwf	3971,f,c	;volatile
  3380                           
  3381                           ;setddram.c: 36: LATDbits.LATD5 = 0;
  3382  0012EE  9A8C               	bcf	3980,5,c	;volatile
  3383                           
  3384                           ;setddram.c: 37: LATDbits.LATD4 = 0;
  3385  0012F0  988C               	bcf	3980,4,c	;volatile
  3386                           
  3387                           ;setddram.c: 38: DelayFor18TCY();
  3388  0012F2  EC34  F00B         	call	_DelayFor18TCY	;wreg free
  3389                           
  3390                           ;setddram.c: 39: LATDbits.LATD6 = 1;
  3391  0012F6  8C8C               	bsf	3980,6,c	;volatile
  3392                           
  3393                           ;setddram.c: 40: DelayFor18TCY();
  3394  0012F8  EC34  F00B         	call	_DelayFor18TCY	;wreg free
  3395                           
  3396                           ;setddram.c: 41: LATDbits.LATD6 = 0;
  3397  0012FC  9C8C               	bcf	3980,6,c	;volatile
  3398                           
  3399                           ;setddram.c: 46: PORTD &= 0xf0;
  3400  0012FE  0EF0               	movlw	240
  3401  001300  1683               	andwf	3971,f,c	;volatile
  3402                           
  3403                           ;setddram.c: 47: PORTD |= (DDaddr&0x0f);
  3404  001302  503F               	movf	SetDDRamAddr@DDaddr,w,c
  3405  001304  0B0F               	andlw	15
  3406  001306  1283               	iorwf	3971,f,c	;volatile
  3407                           
  3408                           ;setddram.c: 49: DelayFor18TCY();
  3409  001308  EC34  F00B         	call	_DelayFor18TCY	;wreg free
  3410                           
  3411                           ;setddram.c: 50: LATDbits.LATD6 = 1;
  3412  00130C  8C8C               	bsf	3980,6,c	;volatile
  3413                           
  3414                           ;setddram.c: 51: DelayFor18TCY();
  3415  00130E  EC34  F00B         	call	_DelayFor18TCY	;wreg free
  3416                           
  3417                           ;setddram.c: 52: LATDbits.LATD6 = 0;
  3418  001312  9C8C               	bcf	3980,6,c	;volatile
  3419                           
  3420                           ;setddram.c: 56: TRISD |= 0x0f;
  3421  001314  0E0F               	movlw	15
  3422  001316  1295               	iorwf	3989,f,c	;volatile
  3423  001318  0012               	return	
  3424  00131A                     __end_of_SetDDRamAddr:
  3425                           	opt stack 0
  3426                           tblptru	equ	0xFF8
  3427                           tblptrh	equ	0xFF7
  3428                           tblptrl	equ	0xFF6
  3429                           tablat	equ	0xFF5
  3430                           prodh	equ	0xFF4
  3431                           prodl	equ	0xFF3
  3432                           intcon	equ	0xFF2
  3433                           postinc0	equ	0xFEE
  3434                           wreg	equ	0xFE8
  3435                           postdec1	equ	0xFE5
  3436                           fsr1l	equ	0xFE1
  3437                           indf2	equ	0xFDF
  3438                           postinc2	equ	0xFDE
  3439                           postdec2	equ	0xFDD
  3440                           fsr2h	equ	0xFDA
  3441                           fsr2l	equ	0xFD9
  3442                           status	equ	0xFD8
  3443                           
  3444 ;; *************** function _DelayPORXLCD *****************
  3445 ;; Defined at:
  3446 ;;		line 34 in file "user_xlcd.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;		None
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;		None
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  1    wreg      void 
  3453 ;; Registers used:
  3454 ;;		wreg
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3460 ;;      Params:         0       0       0       0       0       0       0       0       0
  3461 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3462 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3463 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3464 ;;Total ram usage:        1 bytes
  3465 ;; Hardware stack levels used:    1
  3466 ;; Hardware stack levels required when called:    3
  3467 ;; This function calls:
  3468 ;;		Nothing
  3469 ;; This function is called by:
  3470 ;;		_OpenXLCD
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           	psect	text18
  3475  001630                     __ptext18:
  3476                           	opt stack 0
  3477  001630                     _DelayPORXLCD:
  3478                           	opt stack 24
  3479                           
  3480                           ;user_xlcd.c: 37: _delay((unsigned long)((15)*(24000000ul/4000.0)));
  3481                           
  3482                           ;incstack = 0
  3483  001630  0E75               	movlw	117
  3484  001632  6E3C               	movwf	??_DelayPORXLCD& (0+255),c
  3485  001634  0EE1               	movlw	225
  3486  001636                     u4507:
  3487  001636  2EE8               	decfsz	wreg,f,c
  3488  001638  D7FE               	bra	u4507
  3489  00163A  2E3C               	decfsz	??_DelayPORXLCD& (0+255),f,c
  3490  00163C  D7FC               	bra	u4507
  3491  00163E  F000               	nop	
  3492  001640  0012               	return		;funcret
  3493  001642                     __end_of_DelayPORXLCD:
  3494                           	opt stack 0
  3495                           tblptru	equ	0xFF8
  3496                           tblptrh	equ	0xFF7
  3497                           tblptrl	equ	0xFF6
  3498                           tablat	equ	0xFF5
  3499                           prodh	equ	0xFF4
  3500                           prodl	equ	0xFF3
  3501                           intcon	equ	0xFF2
  3502                           postinc0	equ	0xFEE
  3503                           wreg	equ	0xFE8
  3504                           postdec1	equ	0xFE5
  3505                           fsr1l	equ	0xFE1
  3506                           indf2	equ	0xFDF
  3507                           postinc2	equ	0xFDE
  3508                           postdec2	equ	0xFDD
  3509                           fsr2h	equ	0xFDA
  3510                           fsr2l	equ	0xFD9
  3511                           status	equ	0xFD8
  3512                           
  3513 ;; *************** function _Delay10KTCYx *****************
  3514 ;; Defined at:
  3515 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\d10ktcyx.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;  unit            1    wreg     unsigned char 
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;  unit            1   24[COMRAM] unsigned char 
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  1    wreg      void 
  3522 ;; Registers used:
  3523 ;;		wreg
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3529 ;;      Params:         0       0       0       0       0       0       0       0       0
  3530 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3531 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3532 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3533 ;;Total ram usage:        2 bytes
  3534 ;; Hardware stack levels used:    1
  3535 ;; Hardware stack levels required when called:    3
  3536 ;; This function calls:
  3537 ;;		Nothing
  3538 ;; This function is called by:
  3539 ;;		_OpenXLCD
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           	psect	text19
  3544  0015F2                     __ptext19:
  3545                           	opt stack 0
  3546  0015F2                     _Delay10KTCYx:
  3547                           	opt stack 24
  3548                           
  3549                           ;incstack = 0
  3550                           ;Delay10KTCYx@unit stored from wreg
  3551  0015F2  6E3D               	movwf	Delay10KTCYx@unit,c
  3552  0015F4                     l1760:
  3553  0015F4  0E0D               	movlw	13
  3554  0015F6  6E3C               	movwf	??_Delay10KTCYx& (0+255),c
  3555  0015F8  0EFC               	movlw	252
  3556  0015FA                     u4517:
  3557  0015FA  2EE8               	decfsz	wreg,f,c
  3558  0015FC  D7FE               	bra	u4517
  3559  0015FE  2E3C               	decfsz	??_Delay10KTCYx& (0+255),f,c
  3560  001600  D7FC               	bra	u4517
  3561  001602  2E3D               	decfsz	Delay10KTCYx@unit,f,c
  3562  001604  D7F7               	goto	l1760
  3563  001606  0012               	return	
  3564  001608                     __end_of_Delay10KTCYx:
  3565                           	opt stack 0
  3566                           tblptru	equ	0xFF8
  3567                           tblptrh	equ	0xFF7
  3568                           tblptrl	equ	0xFF6
  3569                           tablat	equ	0xFF5
  3570                           prodh	equ	0xFF4
  3571                           prodl	equ	0xFF3
  3572                           intcon	equ	0xFF2
  3573                           postinc0	equ	0xFEE
  3574                           wreg	equ	0xFE8
  3575                           postdec1	equ	0xFE5
  3576                           fsr1l	equ	0xFE1
  3577                           indf2	equ	0xFDF
  3578                           postinc2	equ	0xFDE
  3579                           postdec2	equ	0xFDD
  3580                           fsr2h	equ	0xFDA
  3581                           fsr2l	equ	0xFD9
  3582                           status	equ	0xFD8
  3583                           
  3584 ;; *************** function _BusyXLCD *****************
  3585 ;; Defined at:
  3586 ;;		line 11 in file "XLCD/busyxlcd.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;		None
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;		None
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  1    wreg      unsigned char 
  3593 ;; Registers used:
  3594 ;;		wreg, cstack
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3600 ;;      Params:         0       0       0       0       0       0       0       0       0
  3601 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3602 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3603 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3604 ;;Total ram usage:        0 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; Hardware stack levels required when called:    4
  3607 ;; This function calls:
  3608 ;;		_DelayFor18TCY
  3609 ;; This function is called by:
  3610 ;;		_OpenXLCD
  3611 ;;		_putrsXLCD
  3612 ;;		_putsXLCD
  3613 ;;		_enemigo1
  3614 ;;		_enemigo2
  3615 ;;		_drive
  3616 ;;		_XLCD_Initialize
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620                           	psect	text20
  3621  001418                     __ptext20:
  3622                           	opt stack 0
  3623  001418                     _BusyXLCD:
  3624                           	opt stack 24
  3625                           
  3626                           ;busyxlcd.c: 13: LATDbits.LATD5 = 1;
  3627                           
  3628                           ;incstack = 0
  3629  001418  8A8C               	bsf	3980,5,c	;volatile
  3630                           
  3631                           ;busyxlcd.c: 14: LATDbits.LATD4 = 0;
  3632  00141A  988C               	bcf	3980,4,c	;volatile
  3633                           
  3634                           ;busyxlcd.c: 15: DelayFor18TCY();
  3635  00141C  EC34  F00B         	call	_DelayFor18TCY	;wreg free
  3636                           
  3637                           ;busyxlcd.c: 16: LATDbits.LATD6 = 1;
  3638  001420  8C8C               	bsf	3980,6,c	;volatile
  3639                           
  3640                           ;busyxlcd.c: 17: DelayFor18TCY();
  3641  001422  EC34  F00B         	call	_DelayFor18TCY	;wreg free
  3642                           
  3643                           ;busyxlcd.c: 35: if(PORTD&0x08)
  3644  001426  A683               	btfss	3971,3,c	;volatile
  3645  001428  D00A               	goto	l41
  3646                           
  3647                           ;busyxlcd.c: 37: {
  3648                           ;busyxlcd.c: 38: LATDbits.LATD6 = 0;
  3649  00142A  9C8C               	bcf	3980,6,c	;volatile
  3650                           
  3651                           ;busyxlcd.c: 39: DelayFor18TCY();
  3652  00142C  EC34  F00B         	call	_DelayFor18TCY	;wreg free
  3653                           
  3654                           ;busyxlcd.c: 40: LATDbits.LATD6 = 1;
  3655  001430  8C8C               	bsf	3980,6,c	;volatile
  3656                           
  3657                           ;busyxlcd.c: 41: DelayFor18TCY();
  3658  001432  EC34  F00B         	call	_DelayFor18TCY	;wreg free
  3659                           
  3660                           ;busyxlcd.c: 42: LATDbits.LATD6 = 0;
  3661  001436  9C8C               	bcf	3980,6,c	;volatile
  3662                           
  3663                           ;busyxlcd.c: 43: LATDbits.LATD5 = 0;
  3664  001438  9A8C               	bcf	3980,5,c	;volatile
  3665                           
  3666                           ;busyxlcd.c: 44: return 1;
  3667  00143A  0E01               	movlw	1
  3668                           
  3669                           ;busyxlcd.c: 45: }
  3670  00143C  0012               	return	
  3671  00143E                     l41:
  3672                           
  3673                           ;busyxlcd.c: 46: else
  3674                           ;busyxlcd.c: 47: {
  3675                           ;busyxlcd.c: 48: LATDbits.LATD6 = 0;
  3676  00143E  9C8C               	bcf	3980,6,c	;volatile
  3677                           
  3678                           ;busyxlcd.c: 49: DelayFor18TCY();
  3679  001440  EC34  F00B         	call	_DelayFor18TCY	;wreg free
  3680                           
  3681                           ;busyxlcd.c: 50: LATDbits.LATD6 = 1;
  3682  001444  8C8C               	bsf	3980,6,c	;volatile
  3683                           
  3684                           ;busyxlcd.c: 51: DelayFor18TCY();
  3685  001446  EC34  F00B         	call	_DelayFor18TCY	;wreg free
  3686                           
  3687                           ;busyxlcd.c: 52: LATDbits.LATD6 = 0;
  3688  00144A  9C8C               	bcf	3980,6,c	;volatile
  3689                           
  3690                           ;busyxlcd.c: 53: LATDbits.LATD5 = 0;
  3691  00144C  9A8C               	bcf	3980,5,c	;volatile
  3692                           
  3693                           ;busyxlcd.c: 54: return 0;
  3694  00144E  0E00               	movlw	0
  3695  001450  0012               	return	
  3696  001452                     __end_of_BusyXLCD:
  3697                           	opt stack 0
  3698                           tblptru	equ	0xFF8
  3699                           tblptrh	equ	0xFF7
  3700                           tblptrl	equ	0xFF6
  3701                           tablat	equ	0xFF5
  3702                           prodh	equ	0xFF4
  3703                           prodl	equ	0xFF3
  3704                           intcon	equ	0xFF2
  3705                           postinc0	equ	0xFEE
  3706                           wreg	equ	0xFE8
  3707                           postdec1	equ	0xFE5
  3708                           fsr1l	equ	0xFE1
  3709                           indf2	equ	0xFDF
  3710                           postinc2	equ	0xFDE
  3711                           postdec2	equ	0xFDD
  3712                           fsr2h	equ	0xFDA
  3713                           fsr2l	equ	0xFD9
  3714                           status	equ	0xFD8
  3715                           
  3716 ;; *************** function _DelayFor18TCY *****************
  3717 ;; Defined at:
  3718 ;;		line 28 in file "user_xlcd.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;		None
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;		None
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  1    wreg      void 
  3725 ;; Registers used:
  3726 ;;		wreg
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3732 ;;      Params:         0       0       0       0       0       0       0       0       0
  3733 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3734 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3735 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3736 ;;Total ram usage:        0 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    3
  3739 ;; This function calls:
  3740 ;;		Nothing
  3741 ;; This function is called by:
  3742 ;;		_BusyXLCD
  3743 ;;		_SetDDRamAddr
  3744 ;;		_WriteCmdXLCD
  3745 ;;		_WriteDataXLCD
  3746 ;;		_ReadAddrXLCD
  3747 ;;		_ReadDataXLCD
  3748 ;;		_SetCGRamAddr
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752                           	psect	text21
  3753  001668                     __ptext21:
  3754                           	opt stack 0
  3755  001668                     _DelayFor18TCY:
  3756                           	opt stack 24
  3757                           
  3758                           ;user_xlcd.c: 30: _delay(18);
  3759                           
  3760                           ;incstack = 0
  3761  001668  0E06               	movlw	6
  3762  00166A                     u4527:
  3763  00166A  2EE8               	decfsz	wreg,f,c
  3764  00166C  D7FE               	bra	u4527
  3765  00166E  0012               	return		;funcret
  3766  001670                     __end_of_DelayFor18TCY:
  3767                           	opt stack 0
  3768                           tblptru	equ	0xFF8
  3769                           tblptrh	equ	0xFF7
  3770                           tblptrl	equ	0xFF6
  3771                           tablat	equ	0xFF5
  3772                           prodh	equ	0xFF4
  3773                           prodl	equ	0xFF3
  3774                           intcon	equ	0xFF2
  3775                           postinc0	equ	0xFEE
  3776                           wreg	equ	0xFE8
  3777                           postdec1	equ	0xFE5
  3778                           fsr1l	equ	0xFE1
  3779                           indf2	equ	0xFDF
  3780                           postinc2	equ	0xFDE
  3781                           postdec2	equ	0xFDD
  3782                           fsr2h	equ	0xFDA
  3783                           fsr2l	equ	0xFD9
  3784                           status	equ	0xFD8
  3785                           
  3786 ;; *************** function _PIN_MANAGER_Initialize *****************
  3787 ;; Defined at:
  3788 ;;		line 5 in file "pin_manager.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;		None
  3791 ;; Auto vars:     Size  Location     Type
  3792 ;;		None
  3793 ;; Return value:  Size  Location     Type
  3794 ;;                  1    wreg      void 
  3795 ;; Registers used:
  3796 ;;		wreg, status,2
  3797 ;; Tracked objects:
  3798 ;;		On entry : 0/0
  3799 ;;		On exit  : 0/0
  3800 ;;		Unchanged: 0/0
  3801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3802 ;;      Params:         0       0       0       0       0       0       0       0       0
  3803 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3804 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3805 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3806 ;;Total ram usage:        0 bytes
  3807 ;; Hardware stack levels used:    1
  3808 ;; Hardware stack levels required when called:    3
  3809 ;; This function calls:
  3810 ;;		Nothing
  3811 ;; This function is called by:
  3812 ;;		_SYSTEM_Initialize
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           	psect	text22
  3817  001590                     __ptext22:
  3818                           	opt stack 0
  3819  001590                     _PIN_MANAGER_Initialize:
  3820                           	opt stack 26
  3821                           
  3822                           ;pin_manager.c: 8: TRISAbits.TRISA0 = 1;
  3823                           
  3824                           ;incstack = 0
  3825  001590  8092               	bsf	3986,0,c	;volatile
  3826                           
  3827                           ;pin_manager.c: 9: TRISBbits.TRISB0 = 0;
  3828  001592  9093               	bcf	3987,0,c	;volatile
  3829                           
  3830                           ;pin_manager.c: 10: TRISBbits.TRISB1 = 0;
  3831  001594  9293               	bcf	3987,1,c	;volatile
  3832                           
  3833                           ;pin_manager.c: 11: TRISBbits.TRISB2 = 0;
  3834  001596  9493               	bcf	3987,2,c	;volatile
  3835                           
  3836                           ;pin_manager.c: 12: TRISBbits.TRISB3 = 0;
  3837  001598  9693               	bcf	3987,3,c	;volatile
  3838                           
  3839                           ;pin_manager.c: 13: TRISBbits.TRISB4 = 0;
  3840  00159A  9893               	bcf	3987,4,c	;volatile
  3841                           
  3842                           ;pin_manager.c: 14: TRISBbits.TRISB5 = 0;
  3843  00159C  9A93               	bcf	3987,5,c	;volatile
  3844                           
  3845                           ;pin_manager.c: 15: TRISBbits.TRISB6 = 0;
  3846  00159E  9C93               	bcf	3987,6,c	;volatile
  3847                           
  3848                           ;pin_manager.c: 17: ADCON1bits.PCFG = 0xE;
  3849  0015A0  50C1               	movf	4033,w,c	;volatile
  3850  0015A2  0BF0               	andlw	-16
  3851  0015A4  090E               	iorlw	14
  3852  0015A6  6EC1               	movwf	4033,c	;volatile
  3853  0015A8  0012               	return		;funcret
  3854  0015AA                     __end_of_PIN_MANAGER_Initialize:
  3855                           	opt stack 0
  3856                           tblptru	equ	0xFF8
  3857                           tblptrh	equ	0xFF7
  3858                           tblptrl	equ	0xFF6
  3859                           tablat	equ	0xFF5
  3860                           prodh	equ	0xFF4
  3861                           prodl	equ	0xFF3
  3862                           intcon	equ	0xFF2
  3863                           postinc0	equ	0xFEE
  3864                           wreg	equ	0xFE8
  3865                           postdec1	equ	0xFE5
  3866                           fsr1l	equ	0xFE1
  3867                           indf2	equ	0xFDF
  3868                           postinc2	equ	0xFDE
  3869                           postdec2	equ	0xFDD
  3870                           fsr2h	equ	0xFDA
  3871                           fsr2l	equ	0xFD9
  3872                           status	equ	0xFD8
  3873                           
  3874 ;; *************** function _OSCILLATOR_Initialize *****************
  3875 ;; Defined at:
  3876 ;;		line 97 in file "mcc.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;		None
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;		None
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      void 
  3883 ;; Registers used:
  3884 ;;		wreg, status,2
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3890 ;;      Params:         0       0       0       0       0       0       0       0       0
  3891 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3892 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3893 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3894 ;;Total ram usage:        0 bytes
  3895 ;; Hardware stack levels used:    1
  3896 ;; Hardware stack levels required when called:    3
  3897 ;; This function calls:
  3898 ;;		Nothing
  3899 ;; This function is called by:
  3900 ;;		_SYSTEM_Initialize
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           	psect	text23
  3905  001654                     __ptext23:
  3906                           	opt stack 0
  3907  001654                     _OSCILLATOR_Initialize:
  3908                           	opt stack 26
  3909                           
  3910                           ;mcc.c: 100: OSCCON = 0x60;
  3911                           
  3912                           ;incstack = 0
  3913  001654  0E60               	movlw	96
  3914  001656  6ED3               	movwf	4051,c	;volatile
  3915                           
  3916                           ;mcc.c: 102: OSCTUNE = 0x00;
  3917  001658  0E00               	movlw	0
  3918  00165A  6E9B               	movwf	3995,c	;volatile
  3919  00165C  0012               	return		;funcret
  3920  00165E                     __end_of_OSCILLATOR_Initialize:
  3921                           	opt stack 0
  3922                           tblptru	equ	0xFF8
  3923                           tblptrh	equ	0xFF7
  3924                           tblptrl	equ	0xFF6
  3925                           tablat	equ	0xFF5
  3926                           prodh	equ	0xFF4
  3927                           prodl	equ	0xFF3
  3928                           intcon	equ	0xFF2
  3929                           postinc0	equ	0xFEE
  3930                           wreg	equ	0xFE8
  3931                           postdec1	equ	0xFE5
  3932                           fsr1l	equ	0xFE1
  3933                           indf2	equ	0xFDF
  3934                           postinc2	equ	0xFDE
  3935                           postdec2	equ	0xFDD
  3936                           fsr2h	equ	0xFDA
  3937                           fsr2l	equ	0xFD9
  3938                           status	equ	0xFD8
  3939                           
  3940 ;; *************** function _INTERRUPT_Initialize *****************
  3941 ;; Defined at:
  3942 ;;		line 5 in file "interrupt_manager.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;		None
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;		None
  3947 ;; Return value:  Size  Location     Type
  3948 ;;                  1    wreg      void 
  3949 ;; Registers used:
  3950 ;;		None
  3951 ;; Tracked objects:
  3952 ;;		On entry : 0/0
  3953 ;;		On exit  : 0/0
  3954 ;;		Unchanged: 0/0
  3955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3956 ;;      Params:         0       0       0       0       0       0       0       0       0
  3957 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3958 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3959 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3960 ;;Total ram usage:        0 bytes
  3961 ;; Hardware stack levels used:    1
  3962 ;; Hardware stack levels required when called:    3
  3963 ;; This function calls:
  3964 ;;		Nothing
  3965 ;; This function is called by:
  3966 ;;		_SYSTEM_Initialize
  3967 ;; This function uses a non-reentrant model
  3968 ;;
  3969                           
  3970                           	psect	text24
  3971  00155A                     __ptext24:
  3972                           	opt stack 0
  3973  00155A                     _INTERRUPT_Initialize:
  3974                           	opt stack 26
  3975                           
  3976                           ;interrupt_manager.c: 8: IPEN = 0;
  3977                           
  3978                           ;incstack = 0
  3979  00155A  9ED0               	bcf	4048,7,c	;volatile
  3980                           
  3981                           ;interrupt_manager.c: 13: IPR1bits.ADIP = 0;
  3982  00155C  9C9F               	bcf	3999,6,c	;volatile
  3983                           
  3984                           ;interrupt_manager.c: 15: INTCON2bits.TMR0IP = 0;
  3985  00155E  94F1               	bcf	intcon2,2,c	;volatile
  3986                           
  3987                           ;interrupt_manager.c: 17: IPR2bits.EEIP = 0;
  3988  001560  98A2               	bcf	4002,4,c	;volatile
  3989                           
  3990                           ;interrupt_manager.c: 19: IPR2bits.BCLIP = 0;
  3991  001562  96A2               	bcf	4002,3,c	;volatile
  3992                           
  3993                           ;interrupt_manager.c: 21: IPR1bits.SSPIP = 0;
  3994  001564  969F               	bcf	3999,3,c	;volatile
  3995                           
  3996                           ;interrupt_manager.c: 23: IPR1bits.TX1IP = 0;
  3997  001566  989F               	bcf	3999,4,c	;volatile
  3998                           
  3999                           ;interrupt_manager.c: 25: IPR1bits.RC1IP = 0;
  4000  001568  9A9F               	bcf	3999,5,c	;volatile
  4001                           
  4002                           ;interrupt_manager.c: 27: IPR1bits.TMR1IP = 0;
  4003  00156A  909F               	bcf	3999,0,c	;volatile
  4004                           
  4005                           ;interrupt_manager.c: 29: INTCON2bits.RBIP = 0;
  4006  00156C  90F1               	bcf	intcon2,0,c	;volatile
  4007                           
  4008                           ;interrupt_manager.c: 31: IPR2bits.CCP2IP = 0;
  4009  00156E  90A2               	bcf	4002,0,c	;volatile
  4010                           
  4011                           ;interrupt_manager.c: 33: IPR2bits.TMR3IP = 0;
  4012  001570  92A2               	bcf	4002,1,c	;volatile
  4013                           
  4014                           ;interrupt_manager.c: 35: IPR1bits.TMR2IP = 0;
  4015  001572  929F               	bcf	3999,1,c	;volatile
  4016  001574  0012               	return		;funcret
  4017  001576                     __end_of_INTERRUPT_Initialize:
  4018                           	opt stack 0
  4019                           tblptru	equ	0xFF8
  4020                           tblptrh	equ	0xFF7
  4021                           tblptrl	equ	0xFF6
  4022                           tablat	equ	0xFF5
  4023                           prodh	equ	0xFF4
  4024                           prodl	equ	0xFF3
  4025                           intcon	equ	0xFF2
  4026                           intcon2	equ	0xFF1
  4027                           postinc0	equ	0xFEE
  4028                           wreg	equ	0xFE8
  4029                           postdec1	equ	0xFE5
  4030                           fsr1l	equ	0xFE1
  4031                           indf2	equ	0xFDF
  4032                           postinc2	equ	0xFDE
  4033                           postdec2	equ	0xFDD
  4034                           fsr2h	equ	0xFDA
  4035                           fsr2l	equ	0xFD9
  4036                           status	equ	0xFD8
  4037                           
  4038 ;; *************** function _ADC_Initialize *****************
  4039 ;; Defined at:
  4040 ;;		line 58 in file "adc.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;		None
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;		None
  4045 ;; Return value:  Size  Location     Type
  4046 ;;                  1    wreg      void 
  4047 ;; Registers used:
  4048 ;;		wreg, status,2
  4049 ;; Tracked objects:
  4050 ;;		On entry : 0/0
  4051 ;;		On exit  : 0/0
  4052 ;;		Unchanged: 0/0
  4053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4054 ;;      Params:         0       0       0       0       0       0       0       0       0
  4055 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4056 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4057 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4058 ;;Total ram usage:        0 bytes
  4059 ;; Hardware stack levels used:    1
  4060 ;; Hardware stack levels required when called:    3
  4061 ;; This function calls:
  4062 ;;		Nothing
  4063 ;; This function is called by:
  4064 ;;		_SYSTEM_Initialize
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           	psect	text25
  4069  0015AA                     __ptext25:
  4070                           	opt stack 0
  4071  0015AA                     _ADC_Initialize:
  4072                           	opt stack 26
  4073                           
  4074                           ;adc.c: 61: ADCON0 = 0b00000001;
  4075                           
  4076                           ;incstack = 0
  4077  0015AA  0E01               	movlw	1
  4078  0015AC  6EC2               	movwf	4034,c	;volatile
  4079                           
  4080                           ;adc.c: 64: ADCON1bits.VCFG = 0x0;
  4081  0015AE  0ECF               	movlw	-49
  4082  0015B0  16C1               	andwf	4033,f,c	;volatile
  4083                           
  4084                           ;adc.c: 67: ADCON2 = 0b10111010;
  4085  0015B2  0EBA               	movlw	186
  4086  0015B4  6EC0               	movwf	4032,c	;volatile
  4087                           
  4088                           ;adc.c: 70: ADRESL = 0x00;
  4089  0015B6  0E00               	movlw	0
  4090  0015B8  6EC3               	movwf	4035,c	;volatile
  4091                           
  4092                           ;adc.c: 73: ADRESH = 0x00;
  4093  0015BA  0E00               	movlw	0
  4094  0015BC  6EC4               	movwf	4036,c	;volatile
  4095                           
  4096                           ;adc.c: 76: PIR1bits.ADIF = 0;
  4097  0015BE  9C9E               	bcf	3998,6,c	;volatile
  4098                           
  4099                           ;adc.c: 79: PIE1bits.ADIE = 1;
  4100  0015C0  8C9D               	bsf	3997,6,c	;volatile
  4101  0015C2  0012               	return		;funcret
  4102  0015C4                     __end_of_ADC_Initialize:
  4103                           	opt stack 0
  4104                           tblptru	equ	0xFF8
  4105                           tblptrh	equ	0xFF7
  4106                           tblptrl	equ	0xFF6
  4107                           tablat	equ	0xFF5
  4108                           prodh	equ	0xFF4
  4109                           prodl	equ	0xFF3
  4110                           intcon	equ	0xFF2
  4111                           intcon2	equ	0xFF1
  4112                           postinc0	equ	0xFEE
  4113                           wreg	equ	0xFE8
  4114                           postdec1	equ	0xFE5
  4115                           fsr1l	equ	0xFE1
  4116                           indf2	equ	0xFDF
  4117                           postinc2	equ	0xFDE
  4118                           postdec2	equ	0xFDD
  4119                           fsr2h	equ	0xFDA
  4120                           fsr2l	equ	0xFD9
  4121                           status	equ	0xFD8
  4122                           
  4123 ;; *************** function _INTERRUPT_InterruptManager *****************
  4124 ;; Defined at:
  4125 ;;		line 38 in file "interrupt_manager.c"
  4126 ;; Parameters:    Size  Location     Type
  4127 ;;		None
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;  __portb__       1   22[COMRAM] unsigned char 
  4130 ;; Return value:  Size  Location     Type
  4131 ;;                  1    wreg      void 
  4132 ;; Registers used:
  4133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4134 ;; Tracked objects:
  4135 ;;		On entry : 0/0
  4136 ;;		On exit  : 0/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4139 ;;      Params:         0       0       0       0       0       0       0       0       0
  4140 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4141 ;;      Temps:         18       0       0       0       0       0       0       0       0
  4142 ;;      Totals:        19       0       0       0       0       0       0       0       0
  4143 ;;Total ram usage:       19 bytes
  4144 ;; Hardware stack levels used:    1
  4145 ;; Hardware stack levels required when called:    2
  4146 ;; This function calls:
  4147 ;;		_ADC_ISR
  4148 ;;		_EUSART1_Receive_ISR
  4149 ;;		_EUSART1_Transmit_ISR
  4150 ;;		_I2C1_BusCollisionISR
  4151 ;;		_I2C1_ISR
  4152 ;;		_MEMORY_ISR
  4153 ;;		_PIN_MANAGER_INT0
  4154 ;;		_PIN_MANAGER_INT1
  4155 ;;		_PIN_MANAGER_INT2
  4156 ;;		_PIN_MANAGER_IOC
  4157 ;;		_TMR0_ISR
  4158 ;;		_TMR1_ISR
  4159 ;;		_TMR2_ISR
  4160 ;;		_TMR3_ISR
  4161 ;; This function is called by:
  4162 ;;		Interrupt level 2
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           	psect	intcode
  4167  000008                     __pintcode:
  4168                           	opt stack 0
  4169  000008                     _INTERRUPT_InterruptManager:
  4170                           	opt stack 23
  4171                           
  4172                           ;incstack = 0
  4173  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4174  00000A  ED9D  F007         	call	int_func,f	;refresh shadow registers
  4175                           tblptru	equ	0xFF8
  4176                           tblptrh	equ	0xFF7
  4177                           tblptrl	equ	0xFF6
  4178                           tablat	equ	0xFF5
  4179                           prodh	equ	0xFF4
  4180                           prodl	equ	0xFF3
  4181                           intcon	equ	0xFF2
  4182                           intcon2	equ	0xFF1
  4183                           postinc0	equ	0xFEE
  4184                           wreg	equ	0xFE8
  4185                           postdec1	equ	0xFE5
  4186                           fsr1l	equ	0xFE1
  4187                           indf2	equ	0xFDF
  4188                           postinc2	equ	0xFDE
  4189                           postdec2	equ	0xFDD
  4190                           fsr2h	equ	0xFDA
  4191                           fsr2l	equ	0xFD9
  4192                           status	equ	0xFD8
  4193                           
  4194                           	psect	intcode_body
  4195  000F3A                     __pintcode_body:
  4196                           	opt stack 23
  4197  000F3A                     int_func:
  4198                           	opt stack 23
  4199  000F3A  0006               	pop		; remove dummy address from shadow register refresh
  4200  000F3C  CFFA F029          	movff	pclath,??_INTERRUPT_InterruptManager
  4201  000F40  CFFB F02A          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4202  000F44  CFE9 F02B          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  4203  000F48  CFEA F02C          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  4204  000F4C  CFE1 F02D          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  4205  000F50  CFE2 F02E          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  4206  000F54  CFD9 F02F          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  4207  000F58  CFDA F030          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  4208  000F5C  CFF3 F031          	movff	prodl,??_INTERRUPT_InterruptManager+8
  4209  000F60  CFF4 F032          	movff	prodh,??_INTERRUPT_InterruptManager+9
  4210  000F64  CFF6 F033          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  4211  000F68  CFF7 F034          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  4212  000F6C  CFF8 F035          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  4213  000F70  CFF5 F036          	movff	tablat,??_INTERRUPT_InterruptManager+13
  4214  000F74  C048  F037         	movff	btemp,??_INTERRUPT_InterruptManager+14
  4215  000F78  C049  F038         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  4216  000F7C  C04A  F039         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  4217  000F80  C04B  F03A         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  4218                           
  4219                           ;interrupt_manager.c: 41: if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  4220  000F84  BC9D               	btfsc	3997,6,c	;volatile
  4221  000F86  AC9E               	btfss	3998,6,c	;volatile
  4222  000F88  D004               	goto	i2l518
  4223                           
  4224                           ;interrupt_manager.c: 42: {
  4225                           ;interrupt_manager.c: 43: ADC_ISR();
  4226  000F8A  EC21  F00B         	call	_ADC_ISR	;wreg free
  4227                           
  4228                           ;interrupt_manager.c: 45: PIR1bits.ADIF = 0;
  4229  000F8E  9C9E               	bcf	3998,6,c	;volatile
  4230                           
  4231                           ;interrupt_manager.c: 46: }
  4232  000F90  D061               	goto	i2l546
  4233  000F92                     i2l518:
  4234                           
  4235                           ;interrupt_manager.c: 47: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  4236  000F92  BAF2               	btfsc	intcon,5,c	;volatile
  4237  000F94  A4F2               	btfss	intcon,2,c	;volatile
  4238  000F96  D004               	goto	i2l520
  4239                           
  4240                           ;interrupt_manager.c: 48: {
  4241                           ;interrupt_manager.c: 49: TMR0_ISR();
  4242  000F98  EC42  F00B         	call	_TMR0_ISR	;wreg free
  4243                           
  4244                           ;interrupt_manager.c: 51: INTCONbits.TMR0IF = 0;
  4245  000F9C  94F2               	bcf	intcon,2,c	;volatile
  4246                           
  4247                           ;interrupt_manager.c: 52: }
  4248  000F9E  D05A               	goto	i2l546
  4249  000FA0                     i2l520:
  4250                           
  4251                           ;interrupt_manager.c: 53: else if(PIE2bits.EEIE == 1 && PIR2bits.EEIF == 1)
  4252  000FA0  B8A0               	btfsc	4000,4,c	;volatile
  4253  000FA2  A8A1               	btfss	4001,4,c	;volatile
  4254  000FA4  D004               	goto	i2l522
  4255                           
  4256                           ;interrupt_manager.c: 54: {
  4257                           ;interrupt_manager.c: 55: MEMORY_ISR();
  4258  000FA6  EC47  F00B         	call	_MEMORY_ISR	;wreg free
  4259                           
  4260                           ;interrupt_manager.c: 56: PIR2bits.EEIF = 0;
  4261  000FAA  98A1               	bcf	4001,4,c	;volatile
  4262                           
  4263                           ;interrupt_manager.c: 57: }
  4264  000FAC  D053               	goto	i2l546
  4265  000FAE                     i2l522:
  4266                           
  4267                           ;interrupt_manager.c: 58: else if(PIE2bits.BCLIE == 1 && PIR2bits.BCLIF == 1)
  4268  000FAE  B6A0               	btfsc	4000,3,c	;volatile
  4269  000FB0  A6A1               	btfss	4001,3,c	;volatile
  4270  000FB2  D004               	goto	i2l524
  4271                           
  4272                           ;interrupt_manager.c: 59: {
  4273                           ;interrupt_manager.c: 60: I2C1_BusCollisionISR();
  4274  000FB4  EC48  F00B         	call	_I2C1_BusCollisionISR	;wreg free
  4275                           
  4276                           ;interrupt_manager.c: 61: PIR2bits.BCLIF = 0;
  4277  000FB8  96A1               	bcf	4001,3,c	;volatile
  4278                           
  4279                           ;interrupt_manager.c: 62: }
  4280  000FBA  D04C               	goto	i2l546
  4281  000FBC                     i2l524:
  4282                           
  4283                           ;interrupt_manager.c: 63: else if(PIE1bits.SSPIE == 1 && PIR1bits.SSPIF == 1)
  4284  000FBC  B69D               	btfsc	3997,3,c	;volatile
  4285  000FBE  A69E               	btfss	3998,3,c	;volatile
  4286  000FC0  D004               	goto	i2l526
  4287                           
  4288                           ;interrupt_manager.c: 64: {
  4289                           ;interrupt_manager.c: 65: I2C1_ISR();
  4290  000FC2  EC0B  F004         	call	_I2C1_ISR	;wreg free
  4291                           
  4292                           ;interrupt_manager.c: 66: PIR1bits.SSPIF = 0;
  4293  000FC6  969E               	bcf	3998,3,c	;volatile
  4294                           
  4295                           ;interrupt_manager.c: 67: }
  4296  000FC8  D045               	goto	i2l546
  4297  000FCA                     i2l526:
  4298                           
  4299                           ;interrupt_manager.c: 68: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  4300  000FCA  B89D               	btfsc	3997,4,c	;volatile
  4301  000FCC  A89E               	btfss	3998,4,c	;volatile
  4302  000FCE  D004               	goto	i2l528
  4303                           
  4304                           ;interrupt_manager.c: 69: {
  4305                           ;interrupt_manager.c: 70: EUSART1_Transmit_ISR();
  4306  000FD0  EC5A  F00A         	call	_EUSART1_Transmit_ISR	;wreg free
  4307                           
  4308                           ;interrupt_manager.c: 71: PIR1bits.TX1IF = 0;
  4309  000FD4  989E               	bcf	3998,4,c	;volatile
  4310                           
  4311                           ;interrupt_manager.c: 72: }
  4312  000FD6  D03E               	goto	i2l546
  4313  000FD8                     i2l528:
  4314                           
  4315                           ;interrupt_manager.c: 73: else if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  4316  000FD8  BA9D               	btfsc	3997,5,c	;volatile
  4317  000FDA  AA9E               	btfss	3998,5,c	;volatile
  4318  000FDC  D004               	goto	i2l530
  4319                           
  4320                           ;interrupt_manager.c: 74: {
  4321                           ;interrupt_manager.c: 75: EUSART1_Receive_ISR();
  4322  000FDE  EC2F  F00B         	call	_EUSART1_Receive_ISR	;wreg free
  4323                           
  4324                           ;interrupt_manager.c: 76: PIR1bits.RC1IF = 0;
  4325  000FE2  9A9E               	bcf	3998,5,c	;volatile
  4326                           
  4327                           ;interrupt_manager.c: 77: }
  4328  000FE4  D037               	goto	i2l546
  4329  000FE6                     i2l530:
  4330                           
  4331                           ;interrupt_manager.c: 78: else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  4332  000FE6  B09D               	btfsc	3997,0,c	;volatile
  4333  000FE8  A09E               	btfss	3998,0,c	;volatile
  4334  000FEA  D004               	goto	i2l532
  4335                           
  4336                           ;interrupt_manager.c: 79: {
  4337                           ;interrupt_manager.c: 80: TMR1_ISR();
  4338  000FEC  EC41  F00B         	call	_TMR1_ISR	;wreg free
  4339                           
  4340                           ;interrupt_manager.c: 81: PIR1bits.TMR1IF = 0;
  4341  000FF0  909E               	bcf	3998,0,c	;volatile
  4342                           
  4343                           ;interrupt_manager.c: 82: }
  4344  000FF2  D030               	goto	i2l546
  4345  000FF4                     i2l532:
  4346                           
  4347                           ;interrupt_manager.c: 83: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
  4348  000FF4  B6F2               	btfsc	intcon,3,c	;volatile
  4349  000FF6  A0F2               	btfss	intcon,0,c	;volatile
  4350  000FF8  D006               	goto	i2l534
  4351                           
  4352                           ;interrupt_manager.c: 84: {
  4353                           ;interrupt_manager.c: 85: PIN_MANAGER_IOC();
  4354  000FFA  EC43  F00B         	call	_PIN_MANAGER_IOC	;wreg free
  4355                           
  4356                           ;interrupt_manager.c: 88: unsigned char __portb__ = PORTB;
  4357  000FFE  CF81 F03B          	movff	3969,INTERRUPT_InterruptManager@__portb__	;volatile
  4358                           
  4359                           ;interrupt_manager.c: 89: INTCONbits.RBIF = 0;
  4360  001002  90F2               	bcf	intcon,0,c	;volatile
  4361                           
  4362                           ;interrupt_manager.c: 90: }
  4363  001004  D027               	goto	i2l546
  4364  001006                     i2l534:
  4365                           
  4366                           ;interrupt_manager.c: 91: else if(INTCONbits.INT0IE == 1 && INTCONbits.INT0IF == 1)
  4367  001006  B8F2               	btfsc	intcon,4,c	;volatile
  4368  001008  A2F2               	btfss	intcon,1,c	;volatile
  4369  00100A  D004               	goto	i2l536
  4370                           
  4371                           ;interrupt_manager.c: 92: {
  4372                           ;interrupt_manager.c: 93: PIN_MANAGER_INT0();
  4373  00100C  EC46  F00B         	call	_PIN_MANAGER_INT0	;wreg free
  4374                           
  4375                           ;interrupt_manager.c: 95: INTCONbits.INT0IF = 0;
  4376  001010  92F2               	bcf	intcon,1,c	;volatile
  4377                           
  4378                           ;interrupt_manager.c: 96: }
  4379  001012  D020               	goto	i2l546
  4380  001014                     i2l536:
  4381                           
  4382                           ;interrupt_manager.c: 97: else if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
  4383  001014  B6F0               	btfsc	intcon3,3,c	;volatile
  4384  001016  A0F0               	btfss	intcon3,0,c	;volatile
  4385  001018  D004               	goto	i2l538
  4386                           
  4387                           ;interrupt_manager.c: 98: {
  4388                           ;interrupt_manager.c: 99: PIN_MANAGER_INT1();
  4389  00101A  EC45  F00B         	call	_PIN_MANAGER_INT1	;wreg free
  4390                           
  4391                           ;interrupt_manager.c: 101: INTCON3bits.INT1IF = 0;
  4392  00101E  90F0               	bcf	intcon3,0,c	;volatile
  4393                           
  4394                           ;interrupt_manager.c: 102: }
  4395  001020  D019               	goto	i2l546
  4396  001022                     i2l538:
  4397                           
  4398                           ;interrupt_manager.c: 103: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
  4399  001022  B8F0               	btfsc	intcon3,4,c	;volatile
  4400  001024  A2F0               	btfss	intcon3,1,c	;volatile
  4401  001026  D004               	goto	i2l540
  4402                           
  4403                           ;interrupt_manager.c: 104: {
  4404                           ;interrupt_manager.c: 105: PIN_MANAGER_INT2();
  4405  001028  EC44  F00B         	call	_PIN_MANAGER_INT2	;wreg free
  4406                           
  4407                           ;interrupt_manager.c: 107: INTCON3bits.INT2IF = 0;
  4408  00102C  92F0               	bcf	intcon3,1,c	;volatile
  4409                           
  4410                           ;interrupt_manager.c: 108: }
  4411  00102E  D012               	goto	i2l546
  4412  001030                     i2l540:
  4413                           
  4414                           ;interrupt_manager.c: 109: else if(PIE2bits.CCP2IE == 1 && PIR2bits.CCP2IF == 1)
  4415  001030  B0A0               	btfsc	4000,0,c	;volatile
  4416  001032  A0A1               	btfss	4001,0,c	;volatile
  4417  001034  D002               	goto	i2l542
  4418                           
  4419                           ;interrupt_manager.c: 110: {
  4420                           ;interrupt_manager.c: 113: PIR2bits.CCP2IF = 0;
  4421  001036  90A1               	bcf	4001,0,c	;volatile
  4422                           
  4423                           ;interrupt_manager.c: 114: }
  4424  001038  D00D               	goto	i2l546
  4425  00103A                     i2l542:
  4426                           
  4427                           ;interrupt_manager.c: 115: else if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF == 1)
  4428  00103A  B2A0               	btfsc	4000,1,c	;volatile
  4429  00103C  A2A1               	btfss	4001,1,c	;volatile
  4430  00103E  D004               	goto	i2l544
  4431                           
  4432                           ;interrupt_manager.c: 116: {
  4433                           ;interrupt_manager.c: 117: TMR3_ISR();
  4434  001040  EC99  F00A         	call	_TMR3_ISR	;wreg free
  4435                           
  4436                           ;interrupt_manager.c: 118: PIR2bits.TMR3IF = 0;
  4437  001044  92A1               	bcf	4001,1,c	;volatile
  4438                           
  4439                           ;interrupt_manager.c: 119: }
  4440  001046  D006               	goto	i2l546
  4441  001048                     i2l544:
  4442                           
  4443                           ;interrupt_manager.c: 120: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  4444  001048  B29D               	btfsc	3997,1,c	;volatile
  4445  00104A  A29E               	btfss	3998,1,c	;volatile
  4446  00104C  D003               	goto	i2l546
  4447                           
  4448                           ;interrupt_manager.c: 121: {
  4449                           ;interrupt_manager.c: 122: TMR2_ISR();
  4450  00104E  EC40  F00B         	call	_TMR2_ISR	;wreg free
  4451                           
  4452                           ;interrupt_manager.c: 123: PIR1bits.TMR2IF = 0;
  4453  001052  929E               	bcf	3998,1,c	;volatile
  4454  001054                     i2l546:
  4455                           
  4456                           ;interrupt_manager.c: 125: else
  4457                           ;interrupt_manager.c: 126: {
  4458  001054  C03A  F04B         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  4459  001058  C039  F04A         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  4460  00105C  C038  F049         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  4461  001060  C037  F048         	movff	??_INTERRUPT_InterruptManager+14,btemp
  4462  001064  C036  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  4463  001068  C035  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  4464  00106C  C034  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  4465  001070  C033  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  4466  001074  C032  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  4467  001078  C031  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  4468  00107C  C030  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  4469  001080  C02F  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  4470  001084  C02E  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  4471  001088  C02D  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  4472  00108C  C02C  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  4473  001090  C02B  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  4474  001094  C02A  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4475  001098  C029  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4476  00109C  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4477  00109E  0011               	retfie		f
  4478  0010A0                     __end_of_INTERRUPT_InterruptManager:
  4479                           	opt stack 0
  4480                           pclatu	equ	0xFFB
  4481                           pclath	equ	0xFFA
  4482                           tblptru	equ	0xFF8
  4483                           tblptrh	equ	0xFF7
  4484                           tblptrl	equ	0xFF6
  4485                           tablat	equ	0xFF5
  4486                           prodh	equ	0xFF4
  4487                           prodl	equ	0xFF3
  4488                           intcon	equ	0xFF2
  4489                           intcon2	equ	0xFF1
  4490                           intcon3	equ	0xFF0
  4491                           postinc0	equ	0xFEE
  4492                           fsr0h	equ	0xFEA
  4493                           fsr0l	equ	0xFE9
  4494                           wreg	equ	0xFE8
  4495                           postdec1	equ	0xFE5
  4496                           fsr1h	equ	0xFE2
  4497                           fsr1l	equ	0xFE1
  4498                           indf2	equ	0xFDF
  4499                           postinc2	equ	0xFDE
  4500                           postdec2	equ	0xFDD
  4501                           fsr2h	equ	0xFDA
  4502                           fsr2l	equ	0xFD9
  4503                           status	equ	0xFD8
  4504                           
  4505 ;; *************** function _TMR3_ISR *****************
  4506 ;; Defined at:
  4507 ;;		line 158 in file "tmr3.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;		None
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;		None
  4512 ;; Return value:  Size  Location     Type
  4513 ;;                  1    wreg      void 
  4514 ;; Registers used:
  4515 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4516 ;; Tracked objects:
  4517 ;;		On entry : 0/0
  4518 ;;		On exit  : 0/0
  4519 ;;		Unchanged: 0/0
  4520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4521 ;;      Params:         0       0       0       0       0       0       0       0       0
  4522 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4523 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4524 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4525 ;;Total ram usage:        0 bytes
  4526 ;; Hardware stack levels used:    1
  4527 ;; Hardware stack levels required when called:    1
  4528 ;; This function calls:
  4529 ;;		Absolute function
  4530 ;;		_TMR3_DefaultInterruptHandler
  4531 ;; This function is called by:
  4532 ;;		_INTERRUPT_InterruptManager
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           	psect	text27
  4537  001532                     __ptext27:
  4538                           	opt stack 0
  4539  001532                     _TMR3_ISR:
  4540                           	opt stack 23
  4541                           
  4542                           ;tmr3.c: 162: TMR3H = (timer3ReloadVal >> 8);
  4543                           
  4544                           ;incstack = 0
  4545  001532  5009               	movf	_timer3ReloadVal+1,w,c	;volatile
  4546  001534  6EB3               	movwf	4019,c	;volatile
  4547                           
  4548                           ;tmr3.c: 163: TMR3L = (uint8_t) timer3ReloadVal;
  4549  001536  C008  FFB2         	movff	_timer3ReloadVal,4018	;volatile
  4550                           
  4551                           ;tmr3.c: 165: if(TMR3_InterruptHandler)
  4552  00153A  5014               	movf	_TMR3_InterruptHandler,w,c
  4553  00153C  1015               	iorwf	_TMR3_InterruptHandler+1,w,c
  4554  00153E  B4D8               	btfsc	status,2,c
  4555  001540  0012               	return	
  4556                           
  4557                           ;tmr3.c: 166: {
  4558                           ;tmr3.c: 167: TMR3_InterruptHandler();
  4559  001542  D801               	call	i2u83_48
  4560  001544  0012               	return	
  4561  001546                     i2u83_48:
  4562  001546  0005               	push	
  4563  001548  6EFA               	movwf	pclath,c
  4564  00154A  5014               	movf	_TMR3_InterruptHandler,w,c
  4565  00154C  6EFD               	movwf	tosl,c
  4566  00154E  5015               	movf	_TMR3_InterruptHandler+1,w,c
  4567  001550  6EFE               	movwf	tosh,c
  4568  001552  50F8               	movf	tblptru,w,c
  4569  001554  6EFF               	movwf	tosu,c
  4570  001556  50FA               	movf	pclath,w,c
  4571  001558  0012               	return		;indir
  4572  00155A                     __end_of_TMR3_ISR:
  4573                           	opt stack 0
  4574                           tosu	equ	0xFFF
  4575                           tosh	equ	0xFFE
  4576                           tosl	equ	0xFFD
  4577                           pclatu	equ	0xFFB
  4578                           pclath	equ	0xFFA
  4579                           tblptru	equ	0xFF8
  4580                           tblptrh	equ	0xFF7
  4581                           tblptrl	equ	0xFF6
  4582                           tablat	equ	0xFF5
  4583                           prodh	equ	0xFF4
  4584                           prodl	equ	0xFF3
  4585                           intcon	equ	0xFF2
  4586                           intcon2	equ	0xFF1
  4587                           intcon3	equ	0xFF0
  4588                           postinc0	equ	0xFEE
  4589                           fsr0h	equ	0xFEA
  4590                           fsr0l	equ	0xFE9
  4591                           wreg	equ	0xFE8
  4592                           postdec1	equ	0xFE5
  4593                           fsr1h	equ	0xFE2
  4594                           fsr1l	equ	0xFE1
  4595                           indf2	equ	0xFDF
  4596                           postinc2	equ	0xFDE
  4597                           postdec2	equ	0xFDD
  4598                           fsr2h	equ	0xFDA
  4599                           fsr2l	equ	0xFD9
  4600                           status	equ	0xFD8
  4601                           
  4602 ;; *************** function _TMR3_DefaultInterruptHandler *****************
  4603 ;; Defined at:
  4604 ;;		line 176 in file "tmr3.c"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;		None
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;		None
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  1    wreg      void 
  4611 ;; Registers used:
  4612 ;;		None
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4618 ;;      Params:         0       0       0       0       0       0       0       0       0
  4619 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4620 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4621 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4622 ;;Total ram usage:        0 bytes
  4623 ;; Hardware stack levels used:    1
  4624 ;; This function calls:
  4625 ;;		Nothing
  4626 ;; This function is called by:
  4627 ;;		_TMR3_Initialize
  4628 ;;		_TMR3_ISR
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632                           	psect	text28
  4633  00167E                     __ptext28:
  4634                           	opt stack 0
  4635  00167E                     _TMR3_DefaultInterruptHandler:
  4636                           	opt stack 23
  4637                           
  4638                           ;incstack = 0
  4639  00167E  0012               	return		;funcret
  4640  001680                     __end_of_TMR3_DefaultInterruptHandler:
  4641                           	opt stack 0
  4642                           tosu	equ	0xFFF
  4643                           tosh	equ	0xFFE
  4644                           tosl	equ	0xFFD
  4645                           pclatu	equ	0xFFB
  4646                           pclath	equ	0xFFA
  4647                           tblptru	equ	0xFF8
  4648                           tblptrh	equ	0xFF7
  4649                           tblptrl	equ	0xFF6
  4650                           tablat	equ	0xFF5
  4651                           prodh	equ	0xFF4
  4652                           prodl	equ	0xFF3
  4653                           intcon	equ	0xFF2
  4654                           intcon2	equ	0xFF1
  4655                           intcon3	equ	0xFF0
  4656                           postinc0	equ	0xFEE
  4657                           fsr0h	equ	0xFEA
  4658                           fsr0l	equ	0xFE9
  4659                           wreg	equ	0xFE8
  4660                           postdec1	equ	0xFE5
  4661                           fsr1h	equ	0xFE2
  4662                           fsr1l	equ	0xFE1
  4663                           indf2	equ	0xFDF
  4664                           postinc2	equ	0xFDE
  4665                           postdec2	equ	0xFDD
  4666                           fsr2h	equ	0xFDA
  4667                           fsr2l	equ	0xFD9
  4668                           status	equ	0xFD8
  4669                           
  4670 ;; *************** function _TMR2_ISR *****************
  4671 ;; Defined at:
  4672 ;;		line 123 in file "tmr2.c"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;		None
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;		None
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  1    wreg      void 
  4679 ;; Registers used:
  4680 ;;		None
  4681 ;; Tracked objects:
  4682 ;;		On entry : 0/0
  4683 ;;		On exit  : 0/0
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4686 ;;      Params:         0       0       0       0       0       0       0       0       0
  4687 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4688 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4689 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4690 ;;Total ram usage:        0 bytes
  4691 ;; Hardware stack levels used:    1
  4692 ;; This function calls:
  4693 ;;		Nothing
  4694 ;; This function is called by:
  4695 ;;		_INTERRUPT_InterruptManager
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	text29
  4700  001680                     __ptext29:
  4701                           	opt stack 0
  4702  001680                     _TMR2_ISR:
  4703                           	opt stack 24
  4704                           
  4705                           ;incstack = 0
  4706  001680  0012               	return		;funcret
  4707  001682                     __end_of_TMR2_ISR:
  4708                           	opt stack 0
  4709                           tosu	equ	0xFFF
  4710                           tosh	equ	0xFFE
  4711                           tosl	equ	0xFFD
  4712                           pclatu	equ	0xFFB
  4713                           pclath	equ	0xFFA
  4714                           tblptru	equ	0xFF8
  4715                           tblptrh	equ	0xFF7
  4716                           tblptrl	equ	0xFF6
  4717                           tablat	equ	0xFF5
  4718                           prodh	equ	0xFF4
  4719                           prodl	equ	0xFF3
  4720                           intcon	equ	0xFF2
  4721                           intcon2	equ	0xFF1
  4722                           intcon3	equ	0xFF0
  4723                           postinc0	equ	0xFEE
  4724                           fsr0h	equ	0xFEA
  4725                           fsr0l	equ	0xFE9
  4726                           wreg	equ	0xFE8
  4727                           postdec1	equ	0xFE5
  4728                           fsr1h	equ	0xFE2
  4729                           fsr1l	equ	0xFE1
  4730                           indf2	equ	0xFDF
  4731                           postinc2	equ	0xFDE
  4732                           postdec2	equ	0xFDD
  4733                           fsr2h	equ	0xFDA
  4734                           fsr2l	equ	0xFD9
  4735                           status	equ	0xFD8
  4736                           
  4737 ;; *************** function _TMR1_ISR *****************
  4738 ;; Defined at:
  4739 ;;		line 151 in file "tmr1.c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;		None
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;		None
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  1    wreg      void 
  4746 ;; Registers used:
  4747 ;;		None
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4753 ;;      Params:         0       0       0       0       0       0       0       0       0
  4754 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4755 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4756 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4757 ;;Total ram usage:        0 bytes
  4758 ;; Hardware stack levels used:    1
  4759 ;; This function calls:
  4760 ;;		Nothing
  4761 ;; This function is called by:
  4762 ;;		_INTERRUPT_InterruptManager
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           	psect	text30
  4767  001682                     __ptext30:
  4768                           	opt stack 0
  4769  001682                     _TMR1_ISR:
  4770                           	opt stack 24
  4771                           
  4772                           ;incstack = 0
  4773  001682  0012               	return		;funcret
  4774  001684                     __end_of_TMR1_ISR:
  4775                           	opt stack 0
  4776                           tosu	equ	0xFFF
  4777                           tosh	equ	0xFFE
  4778                           tosl	equ	0xFFD
  4779                           pclatu	equ	0xFFB
  4780                           pclath	equ	0xFFA
  4781                           tblptru	equ	0xFF8
  4782                           tblptrh	equ	0xFF7
  4783                           tblptrl	equ	0xFF6
  4784                           tablat	equ	0xFF5
  4785                           prodh	equ	0xFF4
  4786                           prodl	equ	0xFF3
  4787                           intcon	equ	0xFF2
  4788                           intcon2	equ	0xFF1
  4789                           intcon3	equ	0xFF0
  4790                           postinc0	equ	0xFEE
  4791                           fsr0h	equ	0xFEA
  4792                           fsr0l	equ	0xFE9
  4793                           wreg	equ	0xFE8
  4794                           postdec1	equ	0xFE5
  4795                           fsr1h	equ	0xFE2
  4796                           fsr1l	equ	0xFE1
  4797                           indf2	equ	0xFDF
  4798                           postinc2	equ	0xFDE
  4799                           postdec2	equ	0xFDD
  4800                           fsr2h	equ	0xFDA
  4801                           fsr2l	equ	0xFD9
  4802                           status	equ	0xFD8
  4803                           
  4804 ;; *************** function _TMR0_ISR *****************
  4805 ;; Defined at:
  4806 ;;		line 149 in file "tmr0.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;		None
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;		None
  4811 ;; Return value:  Size  Location     Type
  4812 ;;                  1    wreg      void 
  4813 ;; Registers used:
  4814 ;;		None
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4820 ;;      Params:         0       0       0       0       0       0       0       0       0
  4821 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4822 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4823 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4824 ;;Total ram usage:        0 bytes
  4825 ;; Hardware stack levels used:    1
  4826 ;; This function calls:
  4827 ;;		Nothing
  4828 ;; This function is called by:
  4829 ;;		_INTERRUPT_InterruptManager
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833                           	psect	text31
  4834  001684                     __ptext31:
  4835                           	opt stack 0
  4836  001684                     _TMR0_ISR:
  4837                           	opt stack 24
  4838                           
  4839                           ;incstack = 0
  4840  001684  0012               	return		;funcret
  4841  001686                     __end_of_TMR0_ISR:
  4842                           	opt stack 0
  4843                           tosu	equ	0xFFF
  4844                           tosh	equ	0xFFE
  4845                           tosl	equ	0xFFD
  4846                           pclatu	equ	0xFFB
  4847                           pclath	equ	0xFFA
  4848                           tblptru	equ	0xFF8
  4849                           tblptrh	equ	0xFF7
  4850                           tblptrl	equ	0xFF6
  4851                           tablat	equ	0xFF5
  4852                           prodh	equ	0xFF4
  4853                           prodl	equ	0xFF3
  4854                           intcon	equ	0xFF2
  4855                           intcon2	equ	0xFF1
  4856                           intcon3	equ	0xFF0
  4857                           postinc0	equ	0xFEE
  4858                           fsr0h	equ	0xFEA
  4859                           fsr0l	equ	0xFE9
  4860                           wreg	equ	0xFE8
  4861                           postdec1	equ	0xFE5
  4862                           fsr1h	equ	0xFE2
  4863                           fsr1l	equ	0xFE1
  4864                           indf2	equ	0xFDF
  4865                           postinc2	equ	0xFDE
  4866                           postdec2	equ	0xFDD
  4867                           fsr2h	equ	0xFDA
  4868                           fsr2l	equ	0xFD9
  4869                           status	equ	0xFD8
  4870                           
  4871 ;; *************** function _PIN_MANAGER_IOC *****************
  4872 ;; Defined at:
  4873 ;;		line 20 in file "pin_manager.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;		None
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;		None
  4878 ;; Return value:  Size  Location     Type
  4879 ;;                  1    wreg      void 
  4880 ;; Registers used:
  4881 ;;		None
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4887 ;;      Params:         0       0       0       0       0       0       0       0       0
  4888 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4889 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4890 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4891 ;;Total ram usage:        0 bytes
  4892 ;; Hardware stack levels used:    1
  4893 ;; This function calls:
  4894 ;;		Nothing
  4895 ;; This function is called by:
  4896 ;;		_INTERRUPT_InterruptManager
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           	psect	text32
  4901  001686                     __ptext32:
  4902                           	opt stack 0
  4903  001686                     _PIN_MANAGER_IOC:
  4904                           	opt stack 24
  4905                           
  4906                           ;incstack = 0
  4907  001686  0012               	return		;funcret
  4908  001688                     __end_of_PIN_MANAGER_IOC:
  4909                           	opt stack 0
  4910                           tosu	equ	0xFFF
  4911                           tosh	equ	0xFFE
  4912                           tosl	equ	0xFFD
  4913                           pclatu	equ	0xFFB
  4914                           pclath	equ	0xFFA
  4915                           tblptru	equ	0xFF8
  4916                           tblptrh	equ	0xFF7
  4917                           tblptrl	equ	0xFF6
  4918                           tablat	equ	0xFF5
  4919                           prodh	equ	0xFF4
  4920                           prodl	equ	0xFF3
  4921                           intcon	equ	0xFF2
  4922                           intcon2	equ	0xFF1
  4923                           intcon3	equ	0xFF0
  4924                           postinc0	equ	0xFEE
  4925                           fsr0h	equ	0xFEA
  4926                           fsr0l	equ	0xFE9
  4927                           wreg	equ	0xFE8
  4928                           postdec1	equ	0xFE5
  4929                           fsr1h	equ	0xFE2
  4930                           fsr1l	equ	0xFE1
  4931                           indf2	equ	0xFDF
  4932                           postinc2	equ	0xFDE
  4933                           postdec2	equ	0xFDD
  4934                           fsr2h	equ	0xFDA
  4935                           fsr2l	equ	0xFD9
  4936                           status	equ	0xFD8
  4937                           
  4938 ;; *************** function _PIN_MANAGER_INT2 *****************
  4939 ;; Defined at:
  4940 ;;		line 36 in file "pin_manager.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;		None
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;		None
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  1    wreg      void 
  4947 ;; Registers used:
  4948 ;;		None
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4954 ;;      Params:         0       0       0       0       0       0       0       0       0
  4955 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4956 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4957 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4958 ;;Total ram usage:        0 bytes
  4959 ;; Hardware stack levels used:    1
  4960 ;; This function calls:
  4961 ;;		Nothing
  4962 ;; This function is called by:
  4963 ;;		_INTERRUPT_InterruptManager
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           	psect	text33
  4968  001688                     __ptext33:
  4969                           	opt stack 0
  4970  001688                     _PIN_MANAGER_INT2:
  4971                           	opt stack 24
  4972                           
  4973                           ;incstack = 0
  4974  001688  0012               	return		;funcret
  4975  00168A                     __end_of_PIN_MANAGER_INT2:
  4976                           	opt stack 0
  4977                           tosu	equ	0xFFF
  4978                           tosh	equ	0xFFE
  4979                           tosl	equ	0xFFD
  4980                           pclatu	equ	0xFFB
  4981                           pclath	equ	0xFFA
  4982                           tblptru	equ	0xFF8
  4983                           tblptrh	equ	0xFF7
  4984                           tblptrl	equ	0xFF6
  4985                           tablat	equ	0xFF5
  4986                           prodh	equ	0xFF4
  4987                           prodl	equ	0xFF3
  4988                           intcon	equ	0xFF2
  4989                           intcon2	equ	0xFF1
  4990                           intcon3	equ	0xFF0
  4991                           postinc0	equ	0xFEE
  4992                           fsr0h	equ	0xFEA
  4993                           fsr0l	equ	0xFE9
  4994                           wreg	equ	0xFE8
  4995                           postdec1	equ	0xFE5
  4996                           fsr1h	equ	0xFE2
  4997                           fsr1l	equ	0xFE1
  4998                           indf2	equ	0xFDF
  4999                           postinc2	equ	0xFDE
  5000                           postdec2	equ	0xFDD
  5001                           fsr2h	equ	0xFDA
  5002                           fsr2l	equ	0xFD9
  5003                           status	equ	0xFD8
  5004                           
  5005 ;; *************** function _PIN_MANAGER_INT1 *****************
  5006 ;; Defined at:
  5007 ;;		line 31 in file "pin_manager.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;		None
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;		None
  5012 ;; Return value:  Size  Location     Type
  5013 ;;                  1    wreg      void 
  5014 ;; Registers used:
  5015 ;;		None
  5016 ;; Tracked objects:
  5017 ;;		On entry : 0/0
  5018 ;;		On exit  : 0/0
  5019 ;;		Unchanged: 0/0
  5020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5021 ;;      Params:         0       0       0       0       0       0       0       0       0
  5022 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5023 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5024 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5025 ;;Total ram usage:        0 bytes
  5026 ;; Hardware stack levels used:    1
  5027 ;; This function calls:
  5028 ;;		Nothing
  5029 ;; This function is called by:
  5030 ;;		_INTERRUPT_InterruptManager
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           	psect	text34
  5035  00168A                     __ptext34:
  5036                           	opt stack 0
  5037  00168A                     _PIN_MANAGER_INT1:
  5038                           	opt stack 24
  5039                           
  5040                           ;incstack = 0
  5041  00168A  0012               	return		;funcret
  5042  00168C                     __end_of_PIN_MANAGER_INT1:
  5043                           	opt stack 0
  5044                           tosu	equ	0xFFF
  5045                           tosh	equ	0xFFE
  5046                           tosl	equ	0xFFD
  5047                           pclatu	equ	0xFFB
  5048                           pclath	equ	0xFFA
  5049                           tblptru	equ	0xFF8
  5050                           tblptrh	equ	0xFF7
  5051                           tblptrl	equ	0xFF6
  5052                           tablat	equ	0xFF5
  5053                           prodh	equ	0xFF4
  5054                           prodl	equ	0xFF3
  5055                           intcon	equ	0xFF2
  5056                           intcon2	equ	0xFF1
  5057                           intcon3	equ	0xFF0
  5058                           postinc0	equ	0xFEE
  5059                           fsr0h	equ	0xFEA
  5060                           fsr0l	equ	0xFE9
  5061                           wreg	equ	0xFE8
  5062                           postdec1	equ	0xFE5
  5063                           fsr1h	equ	0xFE2
  5064                           fsr1l	equ	0xFE1
  5065                           indf2	equ	0xFDF
  5066                           postinc2	equ	0xFDE
  5067                           postdec2	equ	0xFDD
  5068                           fsr2h	equ	0xFDA
  5069                           fsr2l	equ	0xFD9
  5070                           status	equ	0xFD8
  5071                           
  5072 ;; *************** function _PIN_MANAGER_INT0 *****************
  5073 ;; Defined at:
  5074 ;;		line 26 in file "pin_manager.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;		None
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;		None
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  1    wreg      void 
  5081 ;; Registers used:
  5082 ;;		None
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5088 ;;      Params:         0       0       0       0       0       0       0       0       0
  5089 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5090 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5091 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5092 ;;Total ram usage:        0 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; This function calls:
  5095 ;;		Nothing
  5096 ;; This function is called by:
  5097 ;;		_INTERRUPT_InterruptManager
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           	psect	text35
  5102  00168C                     __ptext35:
  5103                           	opt stack 0
  5104  00168C                     _PIN_MANAGER_INT0:
  5105                           	opt stack 24
  5106                           
  5107                           ;incstack = 0
  5108  00168C  0012               	return		;funcret
  5109  00168E                     __end_of_PIN_MANAGER_INT0:
  5110                           	opt stack 0
  5111                           tosu	equ	0xFFF
  5112                           tosh	equ	0xFFE
  5113                           tosl	equ	0xFFD
  5114                           pclatu	equ	0xFFB
  5115                           pclath	equ	0xFFA
  5116                           tblptru	equ	0xFF8
  5117                           tblptrh	equ	0xFF7
  5118                           tblptrl	equ	0xFF6
  5119                           tablat	equ	0xFF5
  5120                           prodh	equ	0xFF4
  5121                           prodl	equ	0xFF3
  5122                           intcon	equ	0xFF2
  5123                           intcon2	equ	0xFF1
  5124                           intcon3	equ	0xFF0
  5125                           postinc0	equ	0xFEE
  5126                           fsr0h	equ	0xFEA
  5127                           fsr0l	equ	0xFE9
  5128                           wreg	equ	0xFE8
  5129                           postdec1	equ	0xFE5
  5130                           fsr1h	equ	0xFE2
  5131                           fsr1l	equ	0xFE1
  5132                           indf2	equ	0xFDF
  5133                           postinc2	equ	0xFDE
  5134                           postdec2	equ	0xFDD
  5135                           fsr2h	equ	0xFDA
  5136                           fsr2l	equ	0xFD9
  5137                           status	equ	0xFD8
  5138                           
  5139 ;; *************** function _MEMORY_ISR *****************
  5140 ;; Defined at:
  5141 ;;		line 198 in file "memory.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;		None
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;		None
  5146 ;; Return value:  Size  Location     Type
  5147 ;;                  1    wreg      void 
  5148 ;; Registers used:
  5149 ;;		None
  5150 ;; Tracked objects:
  5151 ;;		On entry : 0/0
  5152 ;;		On exit  : 0/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5155 ;;      Params:         0       0       0       0       0       0       0       0       0
  5156 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5157 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5158 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5159 ;;Total ram usage:        0 bytes
  5160 ;; Hardware stack levels used:    1
  5161 ;; This function calls:
  5162 ;;		Nothing
  5163 ;; This function is called by:
  5164 ;;		_INTERRUPT_InterruptManager
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           	psect	text36
  5169  00168E                     __ptext36:
  5170                           	opt stack 0
  5171  00168E                     _MEMORY_ISR:
  5172                           	opt stack 24
  5173                           
  5174                           ;incstack = 0
  5175  00168E  0012               	return		;funcret
  5176  001690                     __end_of_MEMORY_ISR:
  5177                           	opt stack 0
  5178                           tosu	equ	0xFFF
  5179                           tosh	equ	0xFFE
  5180                           tosl	equ	0xFFD
  5181                           pclatu	equ	0xFFB
  5182                           pclath	equ	0xFFA
  5183                           tblptru	equ	0xFF8
  5184                           tblptrh	equ	0xFF7
  5185                           tblptrl	equ	0xFF6
  5186                           tablat	equ	0xFF5
  5187                           prodh	equ	0xFF4
  5188                           prodl	equ	0xFF3
  5189                           intcon	equ	0xFF2
  5190                           intcon2	equ	0xFF1
  5191                           intcon3	equ	0xFF0
  5192                           postinc0	equ	0xFEE
  5193                           fsr0h	equ	0xFEA
  5194                           fsr0l	equ	0xFE9
  5195                           wreg	equ	0xFE8
  5196                           postdec1	equ	0xFE5
  5197                           fsr1h	equ	0xFE2
  5198                           fsr1l	equ	0xFE1
  5199                           indf2	equ	0xFDF
  5200                           postinc2	equ	0xFDE
  5201                           postdec2	equ	0xFDD
  5202                           fsr2h	equ	0xFDA
  5203                           fsr2l	equ	0xFD9
  5204                           status	equ	0xFD8
  5205                           
  5206 ;; *************** function _I2C1_ISR *****************
  5207 ;; Defined at:
  5208 ;;		line 236 in file "i2c1.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;		None
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;		None
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  1    wreg      void 
  5215 ;; Registers used:
  5216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5222 ;;      Params:         0       0       0       0       0       0       0       0       0
  5223 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5224 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5225 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5226 ;;Total ram usage:        2 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; Hardware stack levels required when called:    1
  5229 ;; This function calls:
  5230 ;;		_I2C1_FunctionComplete
  5231 ;;		_I2C1_Stop
  5232 ;; This function is called by:
  5233 ;;		_INTERRUPT_InterruptManager
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           
  5237                           	psect	text37
  5238  000816                     __ptext37:
  5239                           	opt stack 0
  5240  000816                     _I2C1_ISR:
  5241                           	opt stack 23
  5242                           
  5243                           ;i2c1.c: 239: static uint8_t *pi2c_buf_ptr;
  5244                           ;i2c1.c: 240: static uint16_t i2c_address = 0;
  5245                           ;i2c1.c: 241: static uint8_t i2c_bytes_left = 0;
  5246                           ;i2c1.c: 242: static uint8_t i2c_10bit_address_restart = 0;
  5247                           ;i2c1.c: 244: PIR1bits.SSPIF = 0;
  5248                           
  5249                           ;incstack = 0
  5250  000816  969E               	bcf	3998,3,c	;volatile
  5251                           
  5252                           ;i2c1.c: 248: if(SSPCON1bits.WCOL)
  5253  000818  AEC6               	btfss	4038,7,c	;volatile
  5254  00081A  D0ED               	goto	i2l362
  5255                           
  5256                           ;i2c1.c: 249: {
  5257                           ;i2c1.c: 251: SSPCON1bits.WCOL = 0;
  5258  00081C  9EC6               	bcf	4038,7,c	;volatile
  5259                           
  5260                           ;i2c1.c: 253: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
  5261  00081E  0E00               	movlw	0
  5262  000820  6E1A               	movwf	_i2c1_state,c
  5263                           
  5264                           ;i2c1.c: 256: p_i2c1_current = (0);
  5265  000822  0E00               	movlw	0
  5266  000824  0100               	movlb	0	; () banked
  5267  000826  6F9E               	movwf	_p_i2c1_current& (0+255),b
  5268  000828  0E00               	movlw	0
  5269  00082A  0100               	movlb	0	; () banked
  5270  00082C  6F9F               	movwf	(_p_i2c1_current+1)& (0+255),b
  5271                           
  5272                           ; BSR set to: 0
  5273                           ;i2c1.c: 258: return;
  5274  00082E  0012               	return	
  5275  000830                     i2l363:
  5276                           
  5277                           ;i2c1.c: 266: if(i2c1_object.trStatus.s.empty != 1)
  5278  000830  B205               	btfsc	_i2c1_object+4,1,c
  5279  000832  0012               	return	
  5280                           
  5281                           ;i2c1.c: 267: {
  5282                           ;i2c1.c: 269: p_i2c1_current = i2c1_object.pTrHead;
  5283  000834  C003  F09E         	movff	_i2c1_object+2,_p_i2c1_current
  5284  000838  C004  F09F         	movff	_i2c1_object+3,_p_i2c1_current+1
  5285                           
  5286                           ;i2c1.c: 270: i2c1_trb_count = i2c1_object.pTrHead->count;
  5287  00083C  C003  FFD9         	movff	_i2c1_object+2,fsr2l
  5288  000840  C004  FFDA         	movff	_i2c1_object+3,fsr2h
  5289  000844  50DF               	movf	indf2,w,c
  5290  000846  6E19               	movwf	_i2c1_trb_count,c
  5291                           
  5292                           ;i2c1.c: 271: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
  5293  000848  EE20 F001          	lfsr	2,1
  5294  00084C  5003               	movf	_i2c1_object+2,w,c
  5295  00084E  26D9               	addwf	fsr2l,f,c
  5296  000850  5004               	movf	_i2c1_object+3,w,c
  5297  000852  22DA               	addwfc	fsr2h,f,c
  5298  000854  CFDE F012          	movff	postinc2,_p_i2c1_trb_current
  5299  000858  CFDD F013          	movff	postdec2,_p_i2c1_trb_current+1
  5300                           
  5301                           ;i2c1.c: 273: i2c1_object.pTrHead++;
  5302  00085C  0E06               	movlw	6
  5303  00085E  2603               	addwf	_i2c1_object+2,f,c
  5304  000860  0E00               	movlw	0
  5305  000862  2204               	addwfc	_i2c1_object+3,f,c
  5306                           
  5307                           ;i2c1.c: 276: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
  5308  000864  0EB8               	movlw	low (_i2c1_tr_queue+6)
  5309  000866  1803               	xorwf	_i2c1_object+2,w,c
  5310  000868  E108               	bnz	i2l4353
  5311  00086A  0E00               	movlw	high (_i2c1_tr_queue+6)
  5312  00086C  1804               	xorwf	_i2c1_object+3,w,c
  5313  00086E  A4D8               	btfss	status,2,c
  5314  000870  D004               	goto	i2l365
  5315                           
  5316                           ;i2c1.c: 277: {
  5317                           ;i2c1.c: 279: i2c1_object.pTrHead = i2c1_tr_queue;
  5318  000872  0EB2               	movlw	low _i2c1_tr_queue
  5319  000874  6E03               	movwf	_i2c1_object+2,c
  5320  000876  0E00               	movlw	high _i2c1_tr_queue
  5321  000878  6E04               	movwf	_i2c1_object+3,c
  5322  00087A                     i2l365:
  5323  00087A                     i2l4353:
  5324                           
  5325                           ;i2c1.c: 280: }
  5326                           ;i2c1.c: 284: i2c1_object.trStatus.s.full = 0;
  5327  00087A  9005               	bcf	_i2c1_object+4,0,c
  5328                           
  5329                           ;i2c1.c: 287: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
  5330  00087C  5001               	movf	_i2c1_object,w,c
  5331  00087E  1803               	xorwf	_i2c1_object+2,w,c
  5332  000880  E104               	bnz	i2l366
  5333  000882  5002               	movf	_i2c1_object+1,w,c
  5334  000884  1804               	xorwf	_i2c1_object+3,w,c
  5335  000886  B4D8               	btfsc	status,2,c
  5336                           
  5337                           ;i2c1.c: 288: {
  5338                           ;i2c1.c: 290: i2c1_object.trStatus.s.empty = 1;
  5339  000888  8205               	bsf	_i2c1_object+4,1,c
  5340  00088A                     i2l366:
  5341                           
  5342                           ;i2c1.c: 291: }
  5343                           ;i2c1.c: 294: SSPCON2bits.SEN = 1;
  5344  00088A  80C5               	bsf	4037,0,c	;volatile
  5345                           
  5346                           ;i2c1.c: 297: i2c1_state = S_MASTER_SEND_ADDR;
  5347  00088C  0E02               	movlw	2
  5348  00088E  6E1A               	movwf	_i2c1_state,c
  5349                           
  5350                           ;i2c1.c: 298: }
  5351                           ;i2c1.c: 300: break;
  5352  000890  0012               	return	
  5353  000892                     i2l368:
  5354                           
  5355                           ;i2c1.c: 307: SSPCON2bits.RSEN = 1;
  5356  000892  82C5               	bsf	4037,1,c	;volatile
  5357                           
  5358                           ;i2c1.c: 310: i2c1_state = S_MASTER_SEND_ADDR;
  5359  000894  0E02               	movlw	2
  5360  000896  6E1A               	movwf	_i2c1_state,c
  5361                           
  5362                           ;i2c1.c: 312: break;
  5363  000898  0012               	return	
  5364  00089A                     i2l369:
  5365                           
  5366                           ;i2c1.c: 316: if(SSPCON2bits.ACKSTAT)
  5367  00089A  ACC5               	btfss	4037,6,c	;volatile
  5368  00089C  D005               	goto	i2l370
  5369                           
  5370                           ;i2c1.c: 317: {
  5371                           ;i2c1.c: 318: i2c1_object.i2cErrors++;
  5372  00089E  2A07               	incf	_i2c1_object+6,f,c
  5373                           
  5374                           ;i2c1.c: 319: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  5375  0008A0  0E04               	movlw	4
  5376  0008A2  EC38  F00B         	call	_I2C1_Stop
  5377                           
  5378                           ;i2c1.c: 320: }
  5379  0008A6  0012               	return	
  5380  0008A8                     i2l370:
  5381                           
  5382                           ;i2c1.c: 321: else
  5383                           ;i2c1.c: 322: {
  5384                           ;i2c1.c: 324: SSPBUF = (i2c_address >> 1) & 0x00FF;
  5385  0008A8  90D8               	bcf	status,0,c
  5386  0008AA  3024               	rrcf	I2C1_ISR@i2c_address+1,w,c
  5387  0008AC  6E26               	movwf	(??_I2C1_ISR+1)& (0+255),c
  5388  0008AE  3023               	rrcf	I2C1_ISR@i2c_address,w,c
  5389  0008B0  6E25               	movwf	??_I2C1_ISR& (0+255),c
  5390  0008B2  5025               	movf	??_I2C1_ISR,w,c
  5391  0008B4  6EC9               	movwf	4041,c	;volatile
  5392                           
  5393                           ;i2c1.c: 327: if(i2c_address & 0x01)
  5394  0008B6  A023               	btfss	I2C1_ISR@i2c_address,0,c
  5395  0008B8  D003               	goto	i2l372
  5396                           
  5397                           ;i2c1.c: 328: {
  5398                           ;i2c1.c: 331: i2c1_state = S_MASTER_10BIT_RESTART;
  5399  0008BA  0E0B               	movlw	11
  5400  0008BC  6E1A               	movwf	_i2c1_state,c
  5401                           
  5402                           ;i2c1.c: 332: }
  5403  0008BE  0012               	return	
  5404  0008C0                     i2l372:
  5405                           
  5406                           ;i2c1.c: 333: else
  5407                           ;i2c1.c: 334: {
  5408                           ;i2c1.c: 336: i2c1_state = S_MASTER_SEND_DATA;
  5409  0008C0  0E03               	movlw	3
  5410  0008C2  6E1A               	movwf	_i2c1_state,c
  5411                           
  5412                           ;i2c1.c: 337: }
  5413                           ;i2c1.c: 338: }
  5414                           ;i2c1.c: 340: break;
  5415  0008C4  0012               	return	
  5416  0008C6                     i2l374:
  5417                           
  5418                           ;i2c1.c: 344: if(SSPCON2bits.ACKSTAT)
  5419  0008C6  ACC5               	btfss	4037,6,c	;volatile
  5420  0008C8  D005               	goto	i2l375
  5421                           
  5422                           ;i2c1.c: 345: {
  5423                           ;i2c1.c: 346: i2c1_object.i2cErrors++;
  5424  0008CA  2A07               	incf	_i2c1_object+6,f,c
  5425                           
  5426                           ;i2c1.c: 347: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  5427  0008CC  0E04               	movlw	4
  5428  0008CE  EC38  F00B         	call	_I2C1_Stop
  5429                           
  5430                           ;i2c1.c: 348: }
  5431  0008D2  0012               	return	
  5432  0008D4                     i2l375:
  5433                           
  5434                           ;i2c1.c: 349: else
  5435                           ;i2c1.c: 350: {
  5436                           ;i2c1.c: 353: SSPCON2bits.RSEN = 1;
  5437  0008D4  82C5               	bsf	4037,1,c	;volatile
  5438                           
  5439                           ;i2c1.c: 357: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  5440  0008D6  C023  F025         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
  5441  0008DA  C024  F026         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
  5442  0008DE  C026  F025         	movff	??_I2C1_ISR+1,??_I2C1_ISR
  5443  0008E2  6A26               	clrf	??_I2C1_ISR+1,c
  5444  0008E4  0E06               	movlw	6
  5445  0008E6  1625               	andwf	??_I2C1_ISR,f,c
  5446  0008E8  0E00               	movlw	0
  5447  0008EA  1626               	andwf	??_I2C1_ISR+1,f,c
  5448  0008EC  0EF0               	movlw	240
  5449  0008EE  1025               	iorwf	??_I2C1_ISR,w,c
  5450  0008F0  6E23               	movwf	I2C1_ISR@i2c_address,c
  5451  0008F2  5026               	movf	??_I2C1_ISR+1,w,c
  5452  0008F4  6E24               	movwf	I2C1_ISR@i2c_address+1,c
  5453                           
  5454                           ;i2c1.c: 360: i2c_address |= 0x0001;
  5455  0008F6  8023               	bsf	I2C1_ISR@i2c_address,0,c
  5456                           
  5457                           ;i2c1.c: 363: i2c_10bit_address_restart = 1;
  5458  0008F8  0E01               	movlw	1
  5459  0008FA  6E17               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
  5460                           
  5461                           ;i2c1.c: 366: i2c1_state = S_MASTER_SEND_ADDR;
  5462  0008FC  0E02               	movlw	2
  5463  0008FE  6E1A               	movwf	_i2c1_state,c
  5464                           
  5465                           ;i2c1.c: 367: }
  5466                           ;i2c1.c: 369: break;
  5467  000900  0012               	return	
  5468  000902                     
  5469                           ;i2c1.c: 384: if(i2c_10bit_address_restart != 1)
  5470  000902  0417               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
  5471  000904  B4D8               	btfsc	status,2,c
  5472  000906  D01A               	goto	i2l379
  5473                           
  5474                           ;i2c1.c: 385: {
  5475                           ;i2c1.c: 387: i2c_address = p_i2c1_trb_current->address;
  5476  000908  C012  FFD9         	movff	_p_i2c1_trb_current,fsr2l
  5477  00090C  C013  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
  5478  000910  CFDE F023          	movff	postinc2,I2C1_ISR@i2c_address
  5479  000914  CFDD F024          	movff	postdec2,I2C1_ISR@i2c_address+1
  5480                           
  5481                           ;i2c1.c: 388: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
  5482  000918  EE20 F003          	lfsr	2,3
  5483  00091C  5012               	movf	_p_i2c1_trb_current,w,c
  5484  00091E  26D9               	addwf	fsr2l,f,c
  5485  000920  5013               	movf	_p_i2c1_trb_current+1,w,c
  5486  000922  22DA               	addwfc	fsr2h,f,c
  5487  000924  CFDE F09C          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
  5488  000928  CFDD F09D          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
  5489                           
  5490                           ;i2c1.c: 389: i2c_bytes_left = p_i2c1_trb_current->length;
  5491  00092C  EE20 F002          	lfsr	2,2
  5492  000930  5012               	movf	_p_i2c1_trb_current,w,c
  5493  000932  26D9               	addwf	fsr2l,f,c
  5494  000934  5013               	movf	_p_i2c1_trb_current+1,w,c
  5495  000936  22DA               	addwfc	fsr2h,f,c
  5496  000938  50DF               	movf	indf2,w,c
  5497  00093A  6E18               	movwf	I2C1_ISR@i2c_bytes_left,c
  5498  00093C                     i2l379:
  5499                           
  5500                           ;i2c1.c: 412: else
  5501                           ;i2c1.c: 413: {
  5502                           ;i2c1.c: 415: SSPBUF = i2c_address;
  5503  00093C  C023  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
  5504                           
  5505                           ;i2c1.c: 416: if(i2c_address & 0x01)
  5506  000940  A023               	btfss	I2C1_ISR@i2c_address,0,c
  5507  000942  D003               	goto	i2l383
  5508                           
  5509                           ;i2c1.c: 417: {
  5510                           ;i2c1.c: 419: i2c1_state = S_MASTER_ACK_ADDR;
  5511  000944  0E05               	movlw	5
  5512  000946  6E1A               	movwf	_i2c1_state,c
  5513                           
  5514                           ;i2c1.c: 420: }
  5515  000948  0012               	return	
  5516  00094A                     i2l383:
  5517                           
  5518                           ;i2c1.c: 421: else
  5519                           ;i2c1.c: 422: {
  5520                           ;i2c1.c: 424: i2c1_state = S_MASTER_SEND_DATA;
  5521  00094A  0E03               	movlw	3
  5522  00094C  6E1A               	movwf	_i2c1_state,c
  5523                           
  5524                           ;i2c1.c: 425: }
  5525                           ;i2c1.c: 426: }
  5526                           ;i2c1.c: 427: break;
  5527  00094E  0012               	return	
  5528  000950                     i2l385:
  5529                           
  5530                           ;i2c1.c: 432: if(SSPCON2bits.ACKSTAT)
  5531  000950  ACC5               	btfss	4037,6,c	;volatile
  5532  000952  D006               	goto	i2l386
  5533                           
  5534                           ;i2c1.c: 433: {
  5535                           ;i2c1.c: 435: i2c1_object.i2cErrors++;
  5536  000954  2A07               	incf	_i2c1_object+6,f,c
  5537                           
  5538                           ;i2c1.c: 438: SSPCON2bits.ACKSTAT = 0;
  5539  000956  9CC5               	bcf	4037,6,c	;volatile
  5540                           
  5541                           ;i2c1.c: 441: I2C1_Stop(I2C1_DATA_NO_ACK);
  5542  000958  0E05               	movlw	5
  5543  00095A  EC38  F00B         	call	_I2C1_Stop
  5544                           
  5545                           ;i2c1.c: 443: }
  5546  00095E  0012               	return	
  5547  000960                     i2l386:
  5548                           
  5549                           ;i2c1.c: 444: else
  5550                           ;i2c1.c: 445: {
  5551                           ;i2c1.c: 447: if(i2c_bytes_left-- == 0U)
  5552  000960  0618               	decf	I2C1_ISR@i2c_bytes_left,f,c
  5553  000962  2818               	incf	I2C1_ISR@i2c_bytes_left,w,c
  5554  000964  A4D8               	btfss	status,2,c
  5555  000966  D00E               	goto	i2l388
  5556                           
  5557                           ;i2c1.c: 448: {
  5558                           ;i2c1.c: 452: p_i2c1_trb_current++;
  5559  000968  0E06               	movlw	6
  5560  00096A  2612               	addwf	_p_i2c1_trb_current,f,c
  5561  00096C  0E00               	movlw	0
  5562  00096E  2213               	addwfc	_p_i2c1_trb_current+1,f,c
  5563                           
  5564                           ;i2c1.c: 455: if(--i2c1_trb_count == 0)
  5565  000970  2E19               	decfsz	_i2c1_trb_count,f,c
  5566  000972  D004               	goto	i2l389
  5567                           
  5568                           ;i2c1.c: 456: {
  5569                           ;i2c1.c: 457: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  5570  000974  0E00               	movlw	0
  5571  000976  EC38  F00B         	call	_I2C1_Stop
  5572                           
  5573                           ;i2c1.c: 458: }
  5574  00097A  0012               	return	
  5575  00097C                     i2l389:
  5576                           
  5577                           ;i2c1.c: 459: else
  5578                           ;i2c1.c: 460: {
  5579                           ;i2c1.c: 467: SSPCON2bits.RSEN = 1;
  5580  00097C  82C5               	bsf	4037,1,c	;volatile
  5581                           
  5582                           ;i2c1.c: 470: i2c1_state = S_MASTER_SEND_ADDR;
  5583  00097E  0E02               	movlw	2
  5584  000980  6E1A               	movwf	_i2c1_state,c
  5585                           
  5586                           ;i2c1.c: 472: }
  5587                           ;i2c1.c: 473: }
  5588  000982  0012               	return	
  5589  000984                     i2l388:
  5590                           
  5591                           ;i2c1.c: 474: else
  5592                           ;i2c1.c: 475: {
  5593                           ;i2c1.c: 477: SSPBUF = *pi2c_buf_ptr++;
  5594  000984  C09C  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  5595  000988  C09D  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  5596  00098C  50DF               	movf	indf2,w,c
  5597  00098E  6EC9               	movwf	4041,c	;volatile
  5598  000990  0100               	movlb	0	; () banked
  5599  000992  4B9C               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
  5600  000994  2B9D               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
  5601                           
  5602                           ; BSR set to: 0
  5603                           ;i2c1.c: 478: }
  5604                           ;i2c1.c: 479: }
  5605                           ;i2c1.c: 480: break;
  5606                           
  5607                           ; BSR set to: 0
  5608  000996  0012               	return	
  5609  000998                     i2l392:
  5610                           
  5611                           ;i2c1.c: 485: if(SSPCON2bits.ACKSTAT)
  5612  000998  ACC5               	btfss	4037,6,c	;volatile
  5613  00099A  D006               	goto	i2l393
  5614                           
  5615                           ;i2c1.c: 486: {
  5616                           ;i2c1.c: 489: i2c1_object.i2cErrors++;
  5617  00099C  2A07               	incf	_i2c1_object+6,f,c
  5618                           
  5619                           ;i2c1.c: 492: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  5620  00099E  0E04               	movlw	4
  5621  0009A0  EC38  F00B         	call	_I2C1_Stop
  5622                           
  5623                           ;i2c1.c: 495: SSPCON2bits.ACKSTAT = 0;
  5624  0009A4  9CC5               	bcf	4037,6,c	;volatile
  5625                           
  5626                           ;i2c1.c: 496: }
  5627  0009A6  0012               	return	
  5628  0009A8                     i2l393:
  5629                           
  5630                           ;i2c1.c: 497: else
  5631                           ;i2c1.c: 498: {
  5632                           ;i2c1.c: 499: SSPCON2bits.RCEN = 1;
  5633  0009A8  86C5               	bsf	4037,3,c	;volatile
  5634                           
  5635                           ;i2c1.c: 500: i2c1_state = S_MASTER_ACK_RCV_DATA;
  5636  0009AA  0E08               	movlw	8
  5637  0009AC  6E1A               	movwf	_i2c1_state,c
  5638                           
  5639                           ;i2c1.c: 501: }
  5640                           ;i2c1.c: 502: break;
  5641  0009AE  0012               	return	
  5642  0009B0                     
  5643                           ;i2c1.c: 509: i2c1_state = S_MASTER_ACK_RCV_DATA;
  5644  0009B0  0E08               	movlw	8
  5645  0009B2  6E1A               	movwf	_i2c1_state,c
  5646                           
  5647                           ;i2c1.c: 512: SSPCON2bits.RCEN = 1;
  5648  0009B4  86C5               	bsf	4037,3,c	;volatile
  5649                           
  5650                           ;i2c1.c: 514: break;
  5651  0009B6  0012               	return	
  5652  0009B8                     
  5653                           ;i2c1.c: 519: *pi2c_buf_ptr++ = SSPBUF;
  5654  0009B8  C09C  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  5655  0009BC  C09D  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  5656  0009C0  CFC9 FFDF          	movff	4041,indf2	;volatile
  5657  0009C4  0100               	movlb	0	; () banked
  5658  0009C6  4B9C               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
  5659  0009C8  2B9D               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;i2c1.c: 522: if(--i2c_bytes_left)
  5663  0009CA  0E01               	movlw	1
  5664  0009CC  5E18               	subwf	I2C1_ISR@i2c_bytes_left,f,c
  5665  0009CE  B4D8               	btfsc	status,2,c
  5666  0009D0  D004               	goto	i2l397
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;i2c1.c: 523: {
  5670                           ;i2c1.c: 529: SSPCON2bits.ACKDT = 0;
  5671  0009D2  9AC5               	bcf	4037,5,c	;volatile
  5672                           
  5673                           ; BSR set to: 0
  5674                           ;i2c1.c: 532: i2c1_state = S_MASTER_RCV_DATA;
  5675  0009D4  0E06               	movlw	6
  5676  0009D6  6E1A               	movwf	_i2c1_state,c
  5677                           
  5678                           ;i2c1.c: 533: }
  5679  0009D8  D003               	goto	i2l398
  5680  0009DA                     i2l397:
  5681                           
  5682                           ; BSR set to: 0
  5683                           ;i2c1.c: 534: else
  5684                           ;i2c1.c: 535: {
  5685                           ;i2c1.c: 539: SSPCON2bits.ACKDT = 1;
  5686  0009DA  8AC5               	bsf	4037,5,c	;volatile
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;i2c1.c: 541: I2C1_FunctionComplete();
  5690  0009DC  ECE2  F00A         	call	_I2C1_FunctionComplete	;wreg free
  5691  0009E0                     i2l398:
  5692                           
  5693                           ;i2c1.c: 542: }
  5694                           ;i2c1.c: 545: SSPCON2bits.ACKEN = 1;
  5695  0009E0  88C5               	bsf	4037,4,c	;volatile
  5696                           
  5697                           ;i2c1.c: 546: break;
  5698  0009E2  0012               	return	
  5699  0009E4                     
  5700                           ;i2c1.c: 549: case S_MASTER_SEND_STOP:
  5701                           ;i2c1.c: 552: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  5702  0009E4  0E00               	movlw	0
  5703  0009E6  EC38  F00B         	call	_I2C1_Stop
  5704                           
  5705                           ;i2c1.c: 553: break;
  5706  0009EA  0012               	return	
  5707  0009EC                     
  5708                           ;i2c1.c: 559: i2c1_object.i2cErrors++;
  5709  0009EC  2A07               	incf	_i2c1_object+6,f,c
  5710                           
  5711                           ;i2c1.c: 560: I2C1_Stop(I2C1_LOST_STATE);
  5712  0009EE  0E06               	movlw	6
  5713  0009F0  EC38  F00B         	call	_I2C1_Stop
  5714                           
  5715                           ;i2c1.c: 563: }
  5716                           
  5717                           ;i2c1.c: 561: break;
  5718  0009F4  0012               	return	
  5719  0009F6                     i2l362:
  5720  0009F6  501A               	movf	_i2c1_state,w,c
  5721                           
  5722                           ; Switch size 1, requested type "space"
  5723                           ; Number of cases is 11, Range of values is 0 to 11
  5724                           ; switch strategies available:
  5725                           ; Name         Instructions Cycles
  5726                           ; simple_byte           34    18 (average)
  5727                           ;	Chosen strategy is simple_byte
  5728  0009F8  0A00               	xorlw	0	; case 0
  5729  0009FA  B4D8               	btfsc	status,2,c
  5730  0009FC  D719               	goto	i2l363
  5731  0009FE  0A01               	xorlw	1	; case 1
  5732  000A00  B4D8               	btfsc	status,2,c
  5733  000A02  D747               	goto	i2l368
  5734  000A04  0A03               	xorlw	3	; case 2
  5735  000A06  B4D8               	btfsc	status,2,c
  5736  000A08  D77C               	goto	i2l377
  5737  000A0A  0A01               	xorlw	1	; case 3
  5738  000A0C  B4D8               	btfsc	status,2,c
  5739  000A0E  D7A0               	goto	i2l385
  5740  000A10  0A07               	xorlw	7	; case 4
  5741  000A12  B4D8               	btfsc	status,2,c
  5742  000A14  D7E7               	goto	i2l399
  5743  000A16  0A01               	xorlw	1	; case 5
  5744  000A18  B4D8               	btfsc	status,2,c
  5745  000A1A  D7BE               	goto	i2l392
  5746  000A1C  0A03               	xorlw	3	; case 6
  5747  000A1E  B4D8               	btfsc	status,2,c
  5748  000A20  D7C7               	goto	i2l395
  5749  000A22  0A01               	xorlw	1	; case 7
  5750  000A24  B4D8               	btfsc	status,2,c
  5751  000A26  D7DE               	goto	i2l399
  5752  000A28  0A0F               	xorlw	15	; case 8
  5753  000A2A  B4D8               	btfsc	status,2,c
  5754  000A2C  D7C5               	goto	i2l396
  5755  000A2E  0A02               	xorlw	2	; case 10
  5756  000A30  B4D8               	btfsc	status,2,c
  5757  000A32  D733               	goto	i2l369
  5758  000A34  0A01               	xorlw	1	; case 11
  5759  000A36  B4D8               	btfsc	status,2,c
  5760  000A38  D746               	goto	i2l374
  5761  000A3A  D7D8               	goto	i2l401
  5762  000A3C                     __end_of_I2C1_ISR:
  5763                           	opt stack 0
  5764                           tosu	equ	0xFFF
  5765                           tosh	equ	0xFFE
  5766                           tosl	equ	0xFFD
  5767                           pclatu	equ	0xFFB
  5768                           pclath	equ	0xFFA
  5769                           tblptru	equ	0xFF8
  5770                           tblptrh	equ	0xFF7
  5771                           tblptrl	equ	0xFF6
  5772                           tablat	equ	0xFF5
  5773                           prodh	equ	0xFF4
  5774                           prodl	equ	0xFF3
  5775                           intcon	equ	0xFF2
  5776                           intcon2	equ	0xFF1
  5777                           intcon3	equ	0xFF0
  5778                           postinc0	equ	0xFEE
  5779                           fsr0h	equ	0xFEA
  5780                           fsr0l	equ	0xFE9
  5781                           wreg	equ	0xFE8
  5782                           postdec1	equ	0xFE5
  5783                           fsr1h	equ	0xFE2
  5784                           fsr1l	equ	0xFE1
  5785                           indf2	equ	0xFDF
  5786                           postinc2	equ	0xFDE
  5787                           postdec2	equ	0xFDD
  5788                           fsr2h	equ	0xFDA
  5789                           fsr2l	equ	0xFD9
  5790                           status	equ	0xFD8
  5791                           
  5792 ;; *************** function _I2C1_Stop *****************
  5793 ;; Defined at:
  5794 ;;		line 584 in file "i2c1.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;  completion_c    1    wreg     enum E5248
  5797 ;; Auto vars:     Size  Location     Type
  5798 ;;  completion_c    1    0[COMRAM] enum E5248
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  1    wreg      void 
  5801 ;; Registers used:
  5802 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5803 ;; Tracked objects:
  5804 ;;		On entry : 0/0
  5805 ;;		On exit  : 0/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5808 ;;      Params:         0       0       0       0       0       0       0       0       0
  5809 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5810 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5811 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5812 ;;Total ram usage:        0 bytes
  5813 ;; Hardware stack levels used:    1
  5814 ;; This function calls:
  5815 ;;		Nothing
  5816 ;; This function is called by:
  5817 ;;		_I2C1_ISR
  5818 ;; This function uses a non-reentrant model
  5819 ;;
  5820                           
  5821                           	psect	text38
  5822  001670                     __ptext38:
  5823                           	opt stack 0
  5824  001670                     _I2C1_Stop:
  5825                           	opt stack 23
  5826                           
  5827                           ;i2c1.c: 587: SSPCON2bits.PEN = 1;
  5828                           
  5829                           ;incstack = 0
  5830  001670  84C5               	bsf	4037,2,c	;volatile
  5831                           
  5832                           ;i2c1.c: 594: }
  5833                           ;i2c1.c: 597: i2c1_state = S_MASTER_IDLE;
  5834  001672  0E00               	movlw	0
  5835  001674  6E1A               	movwf	_i2c1_state,c
  5836  001676  0012               	return		;funcret
  5837  001678                     __end_of_I2C1_Stop:
  5838                           	opt stack 0
  5839                           tosu	equ	0xFFF
  5840                           tosh	equ	0xFFE
  5841                           tosl	equ	0xFFD
  5842                           pclatu	equ	0xFFB
  5843                           pclath	equ	0xFFA
  5844                           tblptru	equ	0xFF8
  5845                           tblptrh	equ	0xFF7
  5846                           tblptrl	equ	0xFF6
  5847                           tablat	equ	0xFF5
  5848                           prodh	equ	0xFF4
  5849                           prodl	equ	0xFF3
  5850                           intcon	equ	0xFF2
  5851                           intcon2	equ	0xFF1
  5852                           intcon3	equ	0xFF0
  5853                           postinc0	equ	0xFEE
  5854                           fsr0h	equ	0xFEA
  5855                           fsr0l	equ	0xFE9
  5856                           wreg	equ	0xFE8
  5857                           postdec1	equ	0xFE5
  5858                           fsr1h	equ	0xFE2
  5859                           fsr1l	equ	0xFE1
  5860                           indf2	equ	0xFDF
  5861                           postinc2	equ	0xFDE
  5862                           postdec2	equ	0xFDD
  5863                           fsr2h	equ	0xFDA
  5864                           fsr2l	equ	0xFD9
  5865                           status	equ	0xFD8
  5866                           
  5867 ;; *************** function _I2C1_FunctionComplete *****************
  5868 ;; Defined at:
  5869 ;;		line 566 in file "i2c1.c"
  5870 ;; Parameters:    Size  Location     Type
  5871 ;;		None
  5872 ;; Auto vars:     Size  Location     Type
  5873 ;;		None
  5874 ;; Return value:  Size  Location     Type
  5875 ;;                  1    wreg      void 
  5876 ;; Registers used:
  5877 ;;		wreg, status,2, status,0
  5878 ;; Tracked objects:
  5879 ;;		On entry : 0/0
  5880 ;;		On exit  : 0/0
  5881 ;;		Unchanged: 0/0
  5882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5883 ;;      Params:         0       0       0       0       0       0       0       0       0
  5884 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5885 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5886 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5887 ;;Total ram usage:        0 bytes
  5888 ;; Hardware stack levels used:    1
  5889 ;; This function calls:
  5890 ;;		Nothing
  5891 ;; This function is called by:
  5892 ;;		_I2C1_ISR
  5893 ;; This function uses a non-reentrant model
  5894 ;;
  5895                           
  5896                           	psect	text39
  5897  0015C4                     __ptext39:
  5898                           	opt stack 0
  5899  0015C4                     _I2C1_FunctionComplete:
  5900                           	opt stack 23
  5901                           
  5902                           ;i2c1.c: 570: p_i2c1_trb_current++;
  5903                           
  5904                           ;incstack = 0
  5905  0015C4  0E06               	movlw	6
  5906  0015C6  2612               	addwf	_p_i2c1_trb_current,f,c
  5907  0015C8  0E00               	movlw	0
  5908  0015CA  2213               	addwfc	_p_i2c1_trb_current+1,f,c
  5909                           
  5910                           ;i2c1.c: 573: if(--i2c1_trb_count == 0)
  5911  0015CC  2E19               	decfsz	_i2c1_trb_count,f,c
  5912  0015CE  D003               	goto	i2l404
  5913                           
  5914                           ;i2c1.c: 574: {
  5915                           ;i2c1.c: 575: i2c1_state = S_MASTER_SEND_STOP;
  5916  0015D0  0E04               	movlw	4
  5917  0015D2  6E1A               	movwf	_i2c1_state,c
  5918                           
  5919                           ;i2c1.c: 576: }
  5920  0015D4  0012               	return	
  5921  0015D6                     i2l404:
  5922                           
  5923                           ;i2c1.c: 577: else
  5924                           ;i2c1.c: 578: {
  5925                           ;i2c1.c: 579: i2c1_state = S_MASTER_RESTART;
  5926  0015D6  0E01               	movlw	1
  5927  0015D8  6E1A               	movwf	_i2c1_state,c
  5928  0015DA  0012               	return	
  5929  0015DC                     __end_of_I2C1_FunctionComplete:
  5930                           	opt stack 0
  5931                           tosu	equ	0xFFF
  5932                           tosh	equ	0xFFE
  5933                           tosl	equ	0xFFD
  5934                           pclatu	equ	0xFFB
  5935                           pclath	equ	0xFFA
  5936                           tblptru	equ	0xFF8
  5937                           tblptrh	equ	0xFF7
  5938                           tblptrl	equ	0xFF6
  5939                           tablat	equ	0xFF5
  5940                           prodh	equ	0xFF4
  5941                           prodl	equ	0xFF3
  5942                           intcon	equ	0xFF2
  5943                           intcon2	equ	0xFF1
  5944                           intcon3	equ	0xFF0
  5945                           postinc0	equ	0xFEE
  5946                           fsr0h	equ	0xFEA
  5947                           fsr0l	equ	0xFE9
  5948                           wreg	equ	0xFE8
  5949                           postdec1	equ	0xFE5
  5950                           fsr1h	equ	0xFE2
  5951                           fsr1l	equ	0xFE1
  5952                           indf2	equ	0xFDF
  5953                           postinc2	equ	0xFDE
  5954                           postdec2	equ	0xFDD
  5955                           fsr2h	equ	0xFDA
  5956                           fsr2l	equ	0xFD9
  5957                           status	equ	0xFD8
  5958                           
  5959 ;; *************** function _I2C1_BusCollisionISR *****************
  5960 ;; Defined at:
  5961 ;;		line 731 in file "i2c1.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;		None
  5964 ;; Auto vars:     Size  Location     Type
  5965 ;;		None
  5966 ;; Return value:  Size  Location     Type
  5967 ;;                  1    wreg      void 
  5968 ;; Registers used:
  5969 ;;		None
  5970 ;; Tracked objects:
  5971 ;;		On entry : 0/0
  5972 ;;		On exit  : 0/0
  5973 ;;		Unchanged: 0/0
  5974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5975 ;;      Params:         0       0       0       0       0       0       0       0       0
  5976 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5977 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5978 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5979 ;;Total ram usage:        0 bytes
  5980 ;; Hardware stack levels used:    1
  5981 ;; This function calls:
  5982 ;;		Nothing
  5983 ;; This function is called by:
  5984 ;;		_INTERRUPT_InterruptManager
  5985 ;; This function uses a non-reentrant model
  5986 ;;
  5987                           
  5988                           	psect	text40
  5989  001690                     __ptext40:
  5990                           	opt stack 0
  5991  001690                     _I2C1_BusCollisionISR:
  5992                           	opt stack 24
  5993                           
  5994                           ;incstack = 0
  5995  001690  0012               	return		;funcret
  5996  001692                     __end_of_I2C1_BusCollisionISR:
  5997                           	opt stack 0
  5998                           tosu	equ	0xFFF
  5999                           tosh	equ	0xFFE
  6000                           tosl	equ	0xFFD
  6001                           pclatu	equ	0xFFB
  6002                           pclath	equ	0xFFA
  6003                           tblptru	equ	0xFF8
  6004                           tblptrh	equ	0xFF7
  6005                           tblptrl	equ	0xFF6
  6006                           tablat	equ	0xFF5
  6007                           prodh	equ	0xFF4
  6008                           prodl	equ	0xFF3
  6009                           intcon	equ	0xFF2
  6010                           intcon2	equ	0xFF1
  6011                           intcon3	equ	0xFF0
  6012                           postinc0	equ	0xFEE
  6013                           fsr0h	equ	0xFEA
  6014                           fsr0l	equ	0xFE9
  6015                           wreg	equ	0xFE8
  6016                           postdec1	equ	0xFE5
  6017                           fsr1h	equ	0xFE2
  6018                           fsr1l	equ	0xFE1
  6019                           indf2	equ	0xFDF
  6020                           postinc2	equ	0xFDE
  6021                           postdec2	equ	0xFDD
  6022                           fsr2h	equ	0xFDA
  6023                           fsr2l	equ	0xFD9
  6024                           status	equ	0xFD8
  6025                           
  6026 ;; *************** function _EUSART1_Transmit_ISR *****************
  6027 ;; Defined at:
  6028 ;;		line 149 in file "eusart1.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;		None
  6031 ;; Auto vars:     Size  Location     Type
  6032 ;;		None
  6033 ;; Return value:  Size  Location     Type
  6034 ;;                  1    wreg      void 
  6035 ;; Registers used:
  6036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6037 ;; Tracked objects:
  6038 ;;		On entry : 0/0
  6039 ;;		On exit  : 0/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6042 ;;      Params:         0       0       0       0       0       0       0       0       0
  6043 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6045 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6046 ;;Total ram usage:        0 bytes
  6047 ;; Hardware stack levels used:    1
  6048 ;; This function calls:
  6049 ;;		Nothing
  6050 ;; This function is called by:
  6051 ;;		_INTERRUPT_InterruptManager
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055                           	psect	text41
  6056  0014B4                     __ptext41:
  6057                           	opt stack 0
  6058  0014B4                     _EUSART1_Transmit_ISR:
  6059                           	opt stack 24
  6060                           
  6061                           ;eusart1.c: 153: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  6062                           
  6063                           ;incstack = 0
  6064  0014B4  0E08               	movlw	8
  6065  0014B6  601E               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  6066  0014B8  D012               	goto	i2l286
  6067                           
  6068                           ;eusart1.c: 154: {
  6069                           ;eusart1.c: 155: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  6070  0014BA  501F               	movf	_eusart1TxTail,w,c
  6071  0014BC  0D01               	mullw	1
  6072  0014BE  0E92               	movlw	low _eusart1TxBuffer
  6073  0014C0  24F3               	addwf	prodl,w,c
  6074  0014C2  6ED9               	movwf	fsr2l,c
  6075  0014C4  0E00               	movlw	high _eusart1TxBuffer
  6076  0014C6  20F4               	addwfc	prodh,w,c
  6077  0014C8  6EDA               	movwf	fsr2h,c
  6078  0014CA  50DF               	movf	indf2,w,c
  6079  0014CC  6EAD               	movwf	4013,c	;volatile
  6080  0014CE  2A1F               	incf	_eusart1TxTail,f,c
  6081                           
  6082                           ;eusart1.c: 156: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  6083  0014D0  0E07               	movlw	7
  6084  0014D2  641F               	cpfsgt	_eusart1TxTail,c
  6085  0014D4  D002               	goto	i2l287
  6086                           
  6087                           ;eusart1.c: 157: {
  6088                           ;eusart1.c: 158: eusart1TxTail = 0;
  6089  0014D6  0E00               	movlw	0
  6090  0014D8  6E1F               	movwf	_eusart1TxTail,c
  6091  0014DA                     i2l287:
  6092                           
  6093                           ;eusart1.c: 159: }
  6094                           ;eusart1.c: 160: eusart1TxBufferRemaining++;
  6095  0014DA  2A1E               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  6096                           
  6097                           ;eusart1.c: 161: }
  6098  0014DC  0012               	return	
  6099  0014DE                     i2l286:
  6100                           
  6101                           ;eusart1.c: 162: else
  6102                           ;eusart1.c: 163: {
  6103                           ;eusart1.c: 164: PIE1bits.TX1IE = 0;
  6104  0014DE  989D               	bcf	3997,4,c	;volatile
  6105  0014E0  0012               	return	
  6106  0014E2                     __end_of_EUSART1_Transmit_ISR:
  6107                           	opt stack 0
  6108                           tosu	equ	0xFFF
  6109                           tosh	equ	0xFFE
  6110                           tosl	equ	0xFFD
  6111                           pclatu	equ	0xFFB
  6112                           pclath	equ	0xFFA
  6113                           tblptru	equ	0xFF8
  6114                           tblptrh	equ	0xFF7
  6115                           tblptrl	equ	0xFF6
  6116                           tablat	equ	0xFF5
  6117                           prodh	equ	0xFF4
  6118                           prodl	equ	0xFF3
  6119                           intcon	equ	0xFF2
  6120                           intcon2	equ	0xFF1
  6121                           intcon3	equ	0xFF0
  6122                           postinc0	equ	0xFEE
  6123                           fsr0h	equ	0xFEA
  6124                           fsr0l	equ	0xFE9
  6125                           wreg	equ	0xFE8
  6126                           postdec1	equ	0xFE5
  6127                           fsr1h	equ	0xFE2
  6128                           fsr1l	equ	0xFE1
  6129                           indf2	equ	0xFDF
  6130                           postinc2	equ	0xFDE
  6131                           postdec2	equ	0xFDD
  6132                           fsr2h	equ	0xFDA
  6133                           fsr2l	equ	0xFD9
  6134                           status	equ	0xFD8
  6135                           
  6136 ;; *************** function _EUSART1_Receive_ISR *****************
  6137 ;; Defined at:
  6138 ;;		line 168 in file "eusart1.c"
  6139 ;; Parameters:    Size  Location     Type
  6140 ;;		None
  6141 ;; Auto vars:     Size  Location     Type
  6142 ;;		None
  6143 ;; Return value:  Size  Location     Type
  6144 ;;                  1    wreg      void 
  6145 ;; Registers used:
  6146 ;;		None
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/0
  6149 ;;		On exit  : 0/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6152 ;;      Params:         0       0       0       0       0       0       0       0       0
  6153 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6154 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6155 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6156 ;;Total ram usage:        0 bytes
  6157 ;; Hardware stack levels used:    1
  6158 ;; This function calls:
  6159 ;;		Nothing
  6160 ;; This function is called by:
  6161 ;;		_INTERRUPT_InterruptManager
  6162 ;; This function uses a non-reentrant model
  6163 ;;
  6164                           
  6165                           	psect	text42
  6166  00165E                     __ptext42:
  6167                           	opt stack 0
  6168  00165E                     _EUSART1_Receive_ISR:
  6169                           	opt stack 24
  6170                           
  6171                           ;eusart1.c: 173: if(1 == RCSTA1bits.OERR)
  6172                           
  6173                           ;incstack = 0
  6174  00165E  A2AB               	btfss	4011,1,c	;volatile
  6175  001660  0012               	return	
  6176                           
  6177                           ;eusart1.c: 174: {
  6178                           ;eusart1.c: 177: RCSTA1bits.SPEN = 0;
  6179  001662  9EAB               	bcf	4011,7,c	;volatile
  6180                           
  6181                           ;eusart1.c: 178: RCSTA1bits.SPEN = 1;
  6182  001664  8EAB               	bsf	4011,7,c	;volatile
  6183  001666  0012               	return	
  6184  001668                     __end_of_EUSART1_Receive_ISR:
  6185                           	opt stack 0
  6186                           tosu	equ	0xFFF
  6187                           tosh	equ	0xFFE
  6188                           tosl	equ	0xFFD
  6189                           pclatu	equ	0xFFB
  6190                           pclath	equ	0xFFA
  6191                           tblptru	equ	0xFF8
  6192                           tblptrh	equ	0xFF7
  6193                           tblptrl	equ	0xFF6
  6194                           tablat	equ	0xFF5
  6195                           prodh	equ	0xFF4
  6196                           prodl	equ	0xFF3
  6197                           intcon	equ	0xFF2
  6198                           intcon2	equ	0xFF1
  6199                           intcon3	equ	0xFF0
  6200                           postinc0	equ	0xFEE
  6201                           fsr0h	equ	0xFEA
  6202                           fsr0l	equ	0xFE9
  6203                           wreg	equ	0xFE8
  6204                           postdec1	equ	0xFE5
  6205                           fsr1h	equ	0xFE2
  6206                           fsr1l	equ	0xFE1
  6207                           indf2	equ	0xFDF
  6208                           postinc2	equ	0xFDE
  6209                           postdec2	equ	0xFDD
  6210                           fsr2h	equ	0xFDA
  6211                           fsr2l	equ	0xFD9
  6212                           status	equ	0xFD8
  6213                           
  6214 ;; *************** function _ADC_ISR *****************
  6215 ;; Defined at:
  6216 ;;		line 130 in file "adc.c"
  6217 ;; Parameters:    Size  Location     Type
  6218 ;;		None
  6219 ;; Auto vars:     Size  Location     Type
  6220 ;;		None
  6221 ;; Return value:  Size  Location     Type
  6222 ;;                  1    wreg      void 
  6223 ;; Registers used:
  6224 ;;		wreg, status,2, status,0, cstack
  6225 ;; Tracked objects:
  6226 ;;		On entry : 0/0
  6227 ;;		On exit  : 0/0
  6228 ;;		Unchanged: 0/0
  6229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6230 ;;      Params:         0       0       0       0       0       0       0       0       0
  6231 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6232 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6233 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6234 ;;Total ram usage:        0 bytes
  6235 ;; Hardware stack levels used:    1
  6236 ;; Hardware stack levels required when called:    1
  6237 ;; This function calls:
  6238 ;;		_ADC_GetConversionResult
  6239 ;; This function is called by:
  6240 ;;		_INTERRUPT_InterruptManager
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           	psect	text43
  6245  001642                     __ptext43:
  6246                           	opt stack 0
  6247  001642                     _ADC_ISR:
  6248                           	opt stack 23
  6249                           
  6250                           ;adc.c: 133: ADC_Value = ADC_GetConversionResult();
  6251                           
  6252                           ;incstack = 0
  6253  001642  EC0E  F00B         	call	_ADC_GetConversionResult	;wreg free
  6254  001646  C025  F0A0         	movff	?_ADC_GetConversionResult,_ADC_Value
  6255  00164A  C026  F0A1         	movff	?_ADC_GetConversionResult+1,_ADC_Value+1
  6256                           
  6257                           ;adc.c: 136: ADC_Flag = 1;
  6258  00164E  0E01               	movlw	1
  6259  001650  6E21               	movwf	_ADC_Flag,c
  6260  001652  0012               	return		;funcret
  6261  001654                     __end_of_ADC_ISR:
  6262                           	opt stack 0
  6263                           tosu	equ	0xFFF
  6264                           tosh	equ	0xFFE
  6265                           tosl	equ	0xFFD
  6266                           pclatu	equ	0xFFB
  6267                           pclath	equ	0xFFA
  6268                           tblptru	equ	0xFF8
  6269                           tblptrh	equ	0xFF7
  6270                           tblptrl	equ	0xFF6
  6271                           tablat	equ	0xFF5
  6272                           prodh	equ	0xFF4
  6273                           prodl	equ	0xFF3
  6274                           intcon	equ	0xFF2
  6275                           intcon2	equ	0xFF1
  6276                           intcon3	equ	0xFF0
  6277                           postinc0	equ	0xFEE
  6278                           fsr0h	equ	0xFEA
  6279                           fsr0l	equ	0xFE9
  6280                           wreg	equ	0xFE8
  6281                           postdec1	equ	0xFE5
  6282                           fsr1h	equ	0xFE2
  6283                           fsr1l	equ	0xFE1
  6284                           indf2	equ	0xFDF
  6285                           postinc2	equ	0xFDE
  6286                           postdec2	equ	0xFDD
  6287                           fsr2h	equ	0xFDA
  6288                           fsr2l	equ	0xFD9
  6289                           status	equ	0xFD8
  6290                           
  6291 ;; *************** function _ADC_GetConversionResult *****************
  6292 ;; Defined at:
  6293 ;;		line 101 in file "adc.c"
  6294 ;; Parameters:    Size  Location     Type
  6295 ;;		None
  6296 ;; Auto vars:     Size  Location     Type
  6297 ;;		None
  6298 ;; Return value:  Size  Location     Type
  6299 ;;                  2    0[COMRAM] unsigned int 
  6300 ;; Registers used:
  6301 ;;		wreg, status,2, status,0
  6302 ;; Tracked objects:
  6303 ;;		On entry : 0/0
  6304 ;;		On exit  : 0/0
  6305 ;;		Unchanged: 0/0
  6306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6307 ;;      Params:         2       0       0       0       0       0       0       0       0
  6308 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6309 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6310 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6311 ;;Total ram usage:        4 bytes
  6312 ;; Hardware stack levels used:    1
  6313 ;; This function calls:
  6314 ;;		Nothing
  6315 ;; This function is called by:
  6316 ;;		_ADC_ISR
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320                           	psect	text44
  6321  00161C                     __ptext44:
  6322                           	opt stack 0
  6323  00161C                     _ADC_GetConversionResult:
  6324                           	opt stack 23
  6325                           
  6326                           ;adc.c: 104: return ((ADRESH << 8) + ADRESL);
  6327                           
  6328                           ;incstack = 0
  6329  00161C  50C4               	movf	4036,w,c	;volatile
  6330  00161E  6E28               	movwf	(??_ADC_GetConversionResult+1)& (0+255),c
  6331  001620  6A27               	clrf	??_ADC_GetConversionResult& (0+255),c
  6332  001622  50C3               	movf	4035,w,c	;volatile
  6333  001624  2427               	addwf	??_ADC_GetConversionResult,w,c
  6334  001626  6E25               	movwf	?_ADC_GetConversionResult,c
  6335  001628  0E00               	movlw	0
  6336  00162A  2028               	addwfc	??_ADC_GetConversionResult+1,w,c
  6337  00162C  6E26               	movwf	?_ADC_GetConversionResult+1,c
  6338  00162E  0012               	return	
  6339  001630                     __end_of_ADC_GetConversionResult:
  6340                           	opt stack 0
  6341                           tosu	equ	0xFFF
  6342                           tosh	equ	0xFFE
  6343                           tosl	equ	0xFFD
  6344                           pclatu	equ	0xFFB
  6345                           pclath	equ	0xFFA
  6346                           tblptru	equ	0xFF8
  6347                           tblptrh	equ	0xFF7
  6348                           tblptrl	equ	0xFF6
  6349                           tablat	equ	0xFF5
  6350                           prodh	equ	0xFF4
  6351                           prodl	equ	0xFF3
  6352                           intcon	equ	0xFF2
  6353                           intcon2	equ	0xFF1
  6354                           intcon3	equ	0xFF0
  6355                           postinc0	equ	0xFEE
  6356                           fsr0h	equ	0xFEA
  6357                           fsr0l	equ	0xFE9
  6358                           wreg	equ	0xFE8
  6359                           postdec1	equ	0xFE5
  6360                           fsr1h	equ	0xFE2
  6361                           fsr1l	equ	0xFE1
  6362                           indf2	equ	0xFDF
  6363                           postinc2	equ	0xFDE
  6364                           postdec2	equ	0xFDD
  6365                           fsr2h	equ	0xFDA
  6366                           fsr2l	equ	0xFD9
  6367                           status	equ	0xFD8
  6368                           tosu	equ	0xFFF
  6369                           tosh	equ	0xFFE
  6370                           tosl	equ	0xFFD
  6371                           pclatu	equ	0xFFB
  6372                           pclath	equ	0xFFA
  6373                           tblptru	equ	0xFF8
  6374                           tblptrh	equ	0xFF7
  6375                           tblptrl	equ	0xFF6
  6376                           tablat	equ	0xFF5
  6377                           prodh	equ	0xFF4
  6378                           prodl	equ	0xFF3
  6379                           intcon	equ	0xFF2
  6380                           intcon2	equ	0xFF1
  6381                           intcon3	equ	0xFF0
  6382                           postinc0	equ	0xFEE
  6383                           fsr0h	equ	0xFEA
  6384                           fsr0l	equ	0xFE9
  6385                           wreg	equ	0xFE8
  6386                           postdec1	equ	0xFE5
  6387                           fsr1h	equ	0xFE2
  6388                           fsr1l	equ	0xFE1
  6389                           indf2	equ	0xFDF
  6390                           postinc2	equ	0xFDE
  6391                           postdec2	equ	0xFDD
  6392                           fsr2h	equ	0xFDA
  6393                           fsr2l	equ	0xFD9
  6394                           status	equ	0xFD8
  6395                           
  6396                           	psect	text45
  6397  000000                     __ptext45:
  6398                           	opt stack 0
  6399                           tosu	equ	0xFFF
  6400                           tosh	equ	0xFFE
  6401                           tosl	equ	0xFFD
  6402                           pclatu	equ	0xFFB
  6403                           pclath	equ	0xFFA
  6404                           tblptru	equ	0xFF8
  6405                           tblptrh	equ	0xFF7
  6406                           tblptrl	equ	0xFF6
  6407                           tablat	equ	0xFF5
  6408                           prodh	equ	0xFF4
  6409                           prodl	equ	0xFF3
  6410                           intcon	equ	0xFF2
  6411                           intcon2	equ	0xFF1
  6412                           intcon3	equ	0xFF0
  6413                           postinc0	equ	0xFEE
  6414                           fsr0h	equ	0xFEA
  6415                           fsr0l	equ	0xFE9
  6416                           wreg	equ	0xFE8
  6417                           postdec1	equ	0xFE5
  6418                           fsr1h	equ	0xFE2
  6419                           fsr1l	equ	0xFE1
  6420                           indf2	equ	0xFDF
  6421                           postinc2	equ	0xFDE
  6422                           postdec2	equ	0xFDD
  6423                           fsr2h	equ	0xFDA
  6424                           fsr2l	equ	0xFD9
  6425                           status	equ	0xFD8
  6426                           
  6427                           	psect	rparam
  6428  0000                     tosu	equ	0xFFF
  6429                           tosh	equ	0xFFE
  6430                           tosl	equ	0xFFD
  6431                           pclatu	equ	0xFFB
  6432                           pclath	equ	0xFFA
  6433                           tblptru	equ	0xFF8
  6434                           tblptrh	equ	0xFF7
  6435                           tblptrl	equ	0xFF6
  6436                           tablat	equ	0xFF5
  6437                           prodh	equ	0xFF4
  6438                           prodl	equ	0xFF3
  6439                           intcon	equ	0xFF2
  6440                           intcon2	equ	0xFF1
  6441                           intcon3	equ	0xFF0
  6442                           postinc0	equ	0xFEE
  6443                           fsr0h	equ	0xFEA
  6444                           fsr0l	equ	0xFE9
  6445                           wreg	equ	0xFE8
  6446                           postdec1	equ	0xFE5
  6447                           fsr1h	equ	0xFE2
  6448                           fsr1l	equ	0xFE1
  6449                           indf2	equ	0xFDF
  6450                           postinc2	equ	0xFDE
  6451                           postdec2	equ	0xFDD
  6452                           fsr2h	equ	0xFDA
  6453                           fsr2l	equ	0xFD9
  6454                           status	equ	0xFD8
  6455                           
  6456                           	psect	temp
  6457  000048                     btemp:
  6458                           	opt stack 0
  6459  000048                     	ds	1
  6460  0000                     int$flags	set	btemp
  6461  0000                     wtemp6	set	btemp+1
  6462                           tosu	equ	0xFFF
  6463                           tosh	equ	0xFFE
  6464                           tosl	equ	0xFFD
  6465                           pclatu	equ	0xFFB
  6466                           pclath	equ	0xFFA
  6467                           tblptru	equ	0xFF8
  6468                           tblptrh	equ	0xFF7
  6469                           tblptrl	equ	0xFF6
  6470                           tablat	equ	0xFF5
  6471                           prodh	equ	0xFF4
  6472                           prodl	equ	0xFF3
  6473                           intcon	equ	0xFF2
  6474                           intcon2	equ	0xFF1
  6475                           intcon3	equ	0xFF0
  6476                           postinc0	equ	0xFEE
  6477                           fsr0h	equ	0xFEA
  6478                           fsr0l	equ	0xFE9
  6479                           wreg	equ	0xFE8
  6480                           postdec1	equ	0xFE5
  6481                           fsr1h	equ	0xFE2
  6482                           fsr1l	equ	0xFE1
  6483                           indf2	equ	0xFDF
  6484                           postinc2	equ	0xFDE
  6485                           postdec2	equ	0xFDD
  6486                           fsr2h	equ	0xFDA
  6487                           fsr2l	equ	0xFD9
  6488                           status	equ	0xFD8


Data Sizes:
    Strings     9
    Constant    10
    Data        6
    BSS         131
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     29      71
    BANK0           160     22     117
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_tr_queue.pTrFlag	PTR enum E5248 size(2) Largest target is 0

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK0[6]), I2C1_MasterWrite@trBlock(BANK0[6]), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), STR_4(CODE[2]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 5
		 -> buffer(BANK0[5]), D_Buffer(BANK0[2]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR3_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_object.pTrTail.pTrFlag	PTR enum E5248 size(2) Largest target is 0

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[6]), I2C1_MasterWrite@trBlock(BANK0[6]), 

    F5594.pbuffer	PTR unsigned char  size(2) Largest target is 0

    F5589.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[6]), I2C1_MasterWrite@trBlock(BANK0[6]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E5248 size(2) Largest target is 0

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[6]), I2C1_MasterWrite@trBlock(BANK0[6]), 

    S1112$pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c1_current.pbuffer	PTR unsigned char  size(2) Largest target is 0

    S1124$pTrFlag	PTR enum E5248 size(2) Largest target is 0

    p_i2c1_current.pTrFlag	PTR enum E5248 size(2) Largest target is 0

    S1124$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[6]), I2C1_MasterWrite@trBlock(BANK0[6]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[6]), I2C1_MasterWrite@trBlock(BANK0[6]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[6]), NULL(NULL[0]), 

    S1135$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[6]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[6]), 

    S1135$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[6]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[6]), 

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 5
		 -> buffer(BANK0[5]), D_Buffer(BANK0[2]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 


Critical Paths under _main in COMRAM

    _drive->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _putsXLCD->_WriteDataXLCD
    _enemigo2->_SetDDRamAddr
    _enemigo1->_SetDDRamAddr
    _putrsXLCD->_WriteDataXLCD
    _XLCD_Initialize->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _ADC_ISR->_ADC_GetConversionResult

Critical Paths under _main in BANK0

    _main->_drive
    _drive->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3514
                _ADC_StartConversion
                  _SYSTEM_Initialize
                              _drive
 ---------------------------------------------------------------------------------
 (1) _drive                                                2     2      0    3279
                                             20 BANK0      2     2      0
                _ADC_StartConversion
                           _BusyXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
                           _enemigo1
                           _enemigo2
                           _marcador
                          _putrsXLCD
                           _putsXLCD
                       _restarPuntos
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    17      6    1889
                                             28 COMRAM     1     1      0
                                              7 BANK0     13     7      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     412
                                             27 COMRAM     1     1      0
                                              3 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     421
                                             23 COMRAM     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _restarPuntos                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _putsXLCD                                             2     0      2     241
                                             24 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _marcador                                             2     2      0       0
                                             23 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _enemigo2                                             0     0      0     361
                           _BusyXLCD
                       _SetDDRamAddr
                          _putrsXLCD
 ---------------------------------------------------------------------------------
 (2) _enemigo1                                             0     0      0     361
                           _BusyXLCD
                       _SetDDRamAddr
                          _putrsXLCD
 ---------------------------------------------------------------------------------
 (2) _putrsXLCD                                            2     0      2     317
                                             24 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteDataXLCD                                        1     1      0      44
                                             23 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  2     2      0      22
                                             23 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     213
                     _ADC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _XLCD_Initialize
 ---------------------------------------------------------------------------------
 (2) _XLCD_Initialize                                      0     0      0     213
                           _BusyXLCD
                           _OpenXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (3) _OpenXLCD                                             1     1      0     125
                                             27 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      44
                                             23 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         4     4      0      44
                                             23 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _DelayPORXLCD                                         1     1      0       0
                                             23 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Delay10KTCYx                                         2     2      0      15
                                             23 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                          19    19      0       1
                                              4 COMRAM    19    19      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                         _MEMORY_ISR
                   _PIN_MANAGER_INT0
                   _PIN_MANAGER_INT1
                   _PIN_MANAGER_INT2
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR3_ISR                                             0     0      0       0
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PIN_MANAGER_INT2                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PIN_MANAGER_INT1                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PIN_MANAGER_INT0                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MEMORY_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_ISR                                             2     2      0       0
                                              0 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (8) _I2C1_Stop                                            1     1      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
            _ADC_GetConversionResult
 ---------------------------------------------------------------------------------
 (8) _ADC_GetConversionResult                              4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_StartConversion
   _SYSTEM_Initialize
     _ADC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _XLCD_Initialize
       _BusyXLCD
         _DelayFor18TCY
       _OpenXLCD
         _BusyXLCD
           _DelayFor18TCY
         _Delay10KTCYx
         _DelayPORXLCD
         _SetDDRamAddr
           _DelayFor18TCY
         _WriteCmdXLCD
           _DelayFor18TCY
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
   _drive
     _ADC_StartConversion
     _BusyXLCD
       _DelayFor18TCY
     _SetDDRamAddr
       _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
     _enemigo1
       _BusyXLCD
         _DelayFor18TCY
       _SetDDRamAddr
         _DelayFor18TCY
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
         _WriteDataXLCD
           _DelayFor18TCY
     _enemigo2
       _BusyXLCD
         _DelayFor18TCY
       _SetDDRamAddr
         _DelayFor18TCY
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
         _WriteDataXLCD
           _DelayFor18TCY
     _marcador
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
       _WriteDataXLCD
         _DelayFor18TCY
     _putsXLCD
       _BusyXLCD
         _DelayFor18TCY
       _WriteDataXLCD
         _DelayFor18TCY
     _restarPuntos
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
     _ADC_GetConversionResult
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _MEMORY_ISR
   _PIN_MANAGER_INT0
   _PIN_MANAGER_INT1
   _PIN_MANAGER_INT2
   _PIN_MANAGER_IOC
   _TMR0_ISR
   _TMR1_ISR
   _TMR2_ISR
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     16      75       5       73.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1D      47       1       75.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BC      20        0.0%
DATA                 0      0      BC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Fri Nov 27 16:20:27 2020

             _eusart1TxBufferRemaining 001E                            _SSPSTATbits 000FC7  
                                   l41 143E                                     l71 11BC  
                                   l80 11EC                                     l65 11A2  
                                   l74 11CC                                     l83 11FC  
                                   l92 1472                                     l77 11DC  
                                   l93 1454                            __CFG_BORV$3 000000  
                      _timer0ReloadVal 000C                           __CFG_CP0$OFF 000000  
                         __CFG_CP1$OFF 000000                           __CFG_CP2$OFF 000000  
                         __CFG_CP3$OFF 000000                            ?_MEMORY_ISR 0025  
                                  l105 14A4                                    l106 1488  
                                  l601 0A7E                                    l603 0ACC  
                                  l612 0C06                                    l605 0B1A  
                                  l621 1168                                    l607 0B68  
                                  l615 10B2                                    l616 10D6  
                                  l609 0BB6                                    l617 10FA  
                                  l618 111E                                    l642 0D48  
                                  l650 0C44                                    l619 1142  
                                  l643 0C0A                                    l628 151A  
                                  l652 0C6E                                    l637 14F2  
                                  l645 0CA6                                    l653 0C76  
                                  l662 0CDA                                    l654 0C8A  
                                  l655 0C92                                    l647 0C34  
                                  l664 0D04                                    l665 0D0C  
                                  l666 0D20                                    l667 0D28  
                                  l659 0CAE                                    l668 0D38  
                                  l684 1616                                    l677 0D88  
                         __CFG_CPB$OFF 000000                                    _PR2 000FCB  
                         __CFG_CPD$OFF 000000                           __CFG_BOR$OFF 000000  
                      _timer1ReloadVal 000A                        __end_of_ADC_ISR 1654  
                __size_of_WriteCmdXLCD 003E                                    prod 000FF3  
                                  tosl 000FFD                                    wreg 000FE8  
                         __CFG_LVP$OFF 000000                       __end_of_I2C1_ISR 0A3C  
                         __CFG_WDT$OFF 000000                                   l1022 1406  
                                 l1016 13E6                                   l1019 13F6  
                      _timer3ReloadVal 0008                                   l1540 0DCA  
                                 l1541 0DE8                                   l1553 0EA2  
                                 l1554 0F04                                   l1555 0EA8  
                                 l1547 0E18                                   l4133 0A7E  
                                 l1549 0E48                                   l5013 0D38  
                                 l1760 15F4                                   l4145 0ACC  
                                 l5019 0D54                                   l4181 0BB6  
                                 l4157 0B1A                                   l4169 0B68  
                                 l1970 1228                                   l1980 127E  
                                 l4197 10B2                                   l1973 1256  
                                 l1974 1262                                   l1983 12B2  
                                 l1984 12BE                                   l1969 1232  
                                 l1979 1288                                   l4907 0E4E  
                                 STR_1 0812                                   STR_2 0812  
                                 STR_3 0810                                   STR_4 0810  
                                 STR_5 080B                                   u3020 0B26  
                                 u3200 114E                                   u3120 10BE  
                                 u3050 0B74                                   u3140 10E2  
                                 u3080 0BC2                                   u3160 1106  
                                 u3180 112A                                   u4140 1236  
                                 u4230 0E84                                   u4400 0D54  
                                 u4320 0C82                                   _IPEN 007E87  
                                 u4170 128E                                   u4250 0F10  
                                 u4260 0F2C                                   u2760 11AC  
                                 u4370 0D18                                   u4507 1636  
                                 u2755 12DE                                   u4517 15FA  
                                 u4437 0DAC                                   u4527 166A  
                                 u4447 0A5E                                   u2960 0A8A  
                                 u4457 0AAC                                   u4467 0AFA  
                                 u4477 0B48                                   u2990 0AD8  
                                 u4487 0B96                                   u4497 0BE4  
                                 _TMR2 000FCC                                   _TMR3 000FB2  
                         __CFG_PWRT$ON 000000                                   _main 1608  
                                 fsr0h 000FEA                                   fsr1h 000FE2  
                                 fsr2h 000FDA                                   fsr0l 000FE9  
                                 indf2 000FDF                                   fsr1l 000FE1  
                                 fsr2l 000FD9                                   btemp 0048  
               __size_of_WriteDataXLCD 003E                                   prodh 000FF4  
                                 prodl 000FF3                                   start 000E  
                        __CFG_IESO$OFF 000000                          __CFG_MCLRE$ON 000000  
                         ___param_bank 000000                           _WriteCmdXLCD 139E  
                           _i2c1_state 001A                          __CFG_PLLDIV$5 000000  
       __size_of_OSCILLATOR_Initialize 000A          __end_of_OSCILLATOR_Initialize 165E  
                        ?_SetDDRamAddr 0025                                  ?_main 0025  
                    __end_of_I2C1_Stop 1678                                  _EEADR 000FA9  
                                _T0CON 000FD5                                  _T1CON 000FCD  
                                _T2CON 000FCA                                  _T3CON 000FB1  
                      __end_of___lwdiv 126C                        __end_of___lwmod 12C8  
                                i2l401 09EC                                  i2l404 15D6  
                                i2l520 0FA0                                  i2l362 09F6  
                                i2l370 08A8                                  i2l530 0FE6  
                                i2l522 0FAE                                  i2l363 0830  
                                i2l372 08C0                                  i2l540 1030  
                                i2l532 0FF4                                  i2l524 0FBC  
                                i2l365 087A                                  i2l286 14DE  
                                i2l374 08C6                                  i2l366 088A  
                                i2l542 103A                                  i2l534 1006  
                                i2l526 0FCA                                  i2l518 0F92  
                                i2l287 14DA                                  i2l383 094A  
                                i2l375 08D4                                  i2l392 0998  
                                i2l368 0892                                  i2l544 1048  
                                i2l536 1014                                  i2l528 0FD8  
                                i2l393 09A8                                  i2l385 0950  
                                i2l377 0902                                  i2l369 089A  
                                i2l386 0960                                  i2l546 1054  
                                i2l538 1022                                  i2l395 09B0  
                                i2l379 093C                                  i2l396 09B8  
                                i2l388 0984                                  i2l397 09DA  
                                i2l389 097C                                  i2l398 09E0  
                                i2l399 09E4                                  _TMR0H 000FD7  
                                _TMR1H 000FCF                                  _TMR0L 000FD6  
                                _TMR1L 000FCE                                  _TMR3H 000FB3  
                                _TMR3L 000FB2                                  _PORTB 000F81  
                                _PORTD 000F83                          __CFG_USBDIV$2 000000  
                                _TRISD 000F95                  __size_of_Delay10KTCYx 0016  
     __size_of_ADC_GetConversionResult 0014           __end_of_I2C1_BusCollisionISR 1692  
                        __CFG_WRT0$OFF 000000                          __CFG_WRT1$OFF 000000  
                        __CFG_WRT2$OFF 000000                          __CFG_WRT3$OFF 000000  
                 _EUSART1_Transmit_ISR 14B4                         __CFG_EBTR0$OFF 000000  
                       __CFG_FCMEN$OFF 000000                         __CFG_EBTR1$OFF 000000  
                       __CFG_EBTR2$OFF 000000                         __CFG_EBTR3$OFF 000000  
                     __end_of_TMR0_ISR 1686                       __end_of_TMR1_ISR 1684  
                     __end_of_TMR2_ISR 1682                          __CFG_WRTB$OFF 000000  
                     __end_of_TMR3_ISR 155A                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                         __CFG_EBTRB$OFF 000000  
       ??_TMR3_DefaultInterruptHandler 0025                __end_of_PIN_MANAGER_IOC 1688  
                      __end_of_dpowers 080B                                  _drive 0C08  
                                pclath 000FFA                                  tablat 000FF5  
                                status 000FD8                                  wtemp6 0049  
                      __end_of_sprintf 0F3A                         __CFG_ICPRT$OFF 000000  
                  __size_of_MEMORY_ISR 0002                        __initialization 131A  
                         __end_of_main 161C                       __end_of_BusyXLCD 1452  
                         _Delay10KTCYx 15F2                  __size_of_DelayPORXLCD 0012  
                            ??_ADC_ISR 0029            ?_INTERRUPT_InterruptManager 0025  
                       ??_SetDDRamAddr 003C                       __end_of_OpenXLCD 120E  
                          _i2c1_object 0001                                 ??_main 0042  
                        __activetblptr 000002             ADC_StartConversion@channel 003D  
                        _WriteDataXLCD 1360                  _TMR3_InterruptHandler 0014  
                ?_EUSART1_Transmit_ISR 0025                        __CFG_CCP2MX$OFF 000000  
                               _ADCON0 000FC2                                 _ADCON2 000FC0  
                               ?_drive 0025                                 _ADRESH 000FC4  
                               _ADRESL 000FC3                                 _EEDATA 000FA8  
                               _CCPR2H 000FBC                                 _CCPR2L 000FBB  
                               _EECON2 000FA7               __size_of_XLCD_Initialize 003C  
                               i2l4353 087A                                 _TABLAT 000FF5  
                               _RCSTA1 000FAB                                 _OSCCON 000FD3  
                               _SPBRG1 000FAF                                 _SPBRGH 000FB0  
                               _SSPADD 000FC8                                 _SSPBUF 000FC9  
                               _TXREG1 000FAD                                 _TXSTA1 000FAC  
                         _DelayPORXLCD 1630                         __CFG_XINST$OFF 000000  
                     __end_of_enemigo1 1532                       __end_of_enemigo2 150A  
                       _p_i2c1_current 009E                       __end_of_marcador 0C08  
             __end_of_PIN_MANAGER_INT0 168E               __end_of_PIN_MANAGER_INT1 168C  
             __end_of_PIN_MANAGER_INT2 168A                              ??___lwdiv 0040  
                            ??___lwmod 0040                                 _buffer 00B8  
                            ?_I2C1_ISR 0025                                 clear_0 1340  
                               clear_1 134C                         ?_WriteDataXLCD 0025  
                               _puntos 0010                           __pdataCOMRAM 0042  
                         __mediumconst 0000                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                     __end_of_putsXLCD 14B4                       ?_PIN_MANAGER_IOC 0025  
                            ??_sprintf 0041                        _eusart1RxBuffer 0060  
        __size_of_INTERRUPT_Initialize 001C                        _eusart1TxBuffer 0092  
                    _SYSTEM_Initialize 15DC                             __accesstop 0060  
              __end_of__initialization 1352                        __CFG_PBADEN$OFF 000000  
                   ?_SYSTEM_Initialize 0025                          ___rparam_used 000001  
                       _i2c1_trb_count 0019                  _I2C1_FunctionComplete 15C4  
                 _I2C1_BusCollisionISR 1690           __size_of_ADC_StartConversion 001A  
                       __pcstackCOMRAM 0025                    _timer0ReloadVal8bit 0016  
                  ??_SYSTEM_Initialize 0041                              ?_TMR0_ISR 0025  
                            ?_TMR1_ISR 0025                              ?_TMR2_ISR 0025  
                            ?_TMR3_ISR 0025                          __end_of_drive 0DBC  
                           ??_I2C1_ISR 0025                           ??_MEMORY_ISR 0025  
               ??_EUSART1_Transmit_ISR 0025                _ADC_GetConversionResult 161C  
          __end_of_EUSART1_Receive_ISR 1668                                ??_drive 00D3  
            __end_of_SYSTEM_Initialize 15F2                 __size_of_DelayFor18TCY 0008  
                        _eusart1RxHead 001D                          _eusart1TxHead 0020  
                        _eusart1RxTail 001C                             __pbssBANK0 0060  
                        _eusart1TxTail 001F                              ?_BusyXLCD 0025  
                      WriteCmdXLCD@cmd 003C                   __end_of_SetDDRamAddr 131A  
                            ?_OpenXLCD 0025                        WriteSWSPI@input 0022  
                    ??_XLCD_Initialize 0041                     __end_of_MEMORY_ISR 1690  
                ?_I2C1_BusCollisionISR 0025                      WriteDataXLCD@data 003C  
                           ??_TMR0_ISR 0025                             ??_TMR1_ISR 0025  
                           ??_TMR2_ISR 0025                             ??_TMR3_ISR 0025  
                              _CCP2CON 000FBA                        ??_WriteDataXLCD 003C  
                              _ADC_ISR 1642                                _BAUDCON 000FB8  
              __size_of_ADC_Initialize 001A                              _I2C1_Stop 1670  
                              _TBLPTRH 000FF7                                _TBLPTRL 000FF6  
                              _TBLPTRU 000FF8                                _OSCTUNE 000F9B  
                              i2u83_48 1546                                _SSPCON1 000FC6  
                              _SSPCON2 000FC5                              ?_enemigo1 0025  
                            ?_enemigo2 0025                                _SSPSTAT 000FC7  
                   __size_of_putrsXLCD 0034                             ??_BusyXLCD 003C  
                            ?_marcador 0025                        __CFG_VREGEN$OFF 000000  
                           ??_OpenXLCD 0040                              _ADC_Value 00A0  
               ?_I2C1_FunctionComplete 0025                                __Hparam 0000  
                              __Lparam 0000                     _p_i2c1_trb_current 0012  
                        _DelayFor18TCY 1668                              ?_putsXLCD 003D  
                              ___lwdiv 120E                                ___lwmod 126C  
                         __psmallconst 0800                        __CFG_STVREN$OFF 000000  
            ??_ADC_GetConversionResult 0027                                __pcinit 131A  
                      putrsXLCD@buffer 003D                                __ramtop 0800  
                              __ptext0 1608                                __ptext1 0C08  
                              __ptext2 0DBC                                __ptext3 126C  
                              __ptext4 120E                                __ptext5 10A0  
                              __ptext6 1486                                __ptext7 0A3C  
                              __ptext8 14E2                                __ptext9 150A  
                            _T0CONbits 000FD5                              _T1CONbits 000FCD  
                              _dpowers 0801                  _OSCILLATOR_Initialize 1654  
                            _T2CONbits 000FCA                          ?_restarPuntos 0025  
                            _T3CONbits 000FB1                                _posEne1 0044  
                              _posEne2 0042               ??_PIN_MANAGER_Initialize 003C  
                           ?_I2C1_Stop 0025             __size_of_SYSTEM_Initialize 0016  
                              _sprintf 0DBC                   I2C1_ISR@pi2c_buf_ptr 009C  
                           ??_enemigo1 0040                             ??_enemigo2 0040  
                       __pintcode_body 0F3A                   end_of_initialization 1352  
                           ??_marcador 003C                          __Lmediumconst 0000  
                              int_func 0F3A                 ??_I2C1_BusCollisionISR 0025  
                           _repeticion 0046                         ?_DelayFor18TCY 0025  
                              postdec1 000FE5                                postdec2 000FDD  
                              postinc0 000FEE                                postinc2 000FDE  
                           ??_putsXLCD 003F                      ?_PIN_MANAGER_INT0 0025  
                    ?_PIN_MANAGER_INT1 0025                      ?_PIN_MANAGER_INT2 0025  
                    __end_of_putrsXLCD 1486                              _PORTBbits 000F81  
                   ??_PIN_MANAGER_INT0 0025                     ??_PIN_MANAGER_INT1 0025  
                   ??_PIN_MANAGER_INT2 0025                         ??_restarPuntos 003C  
                    __size_of_I2C1_ISR 0226                              _TRISAbits 000F92  
                            _TRISBbits 000F93                              _TRISDbits 000F95  
                  _ADC_StartConversion 1576                  __size_of_SetDDRamAddr 0052  
    I2C1_ISR@i2c_10bit_address_restart 0017                   ?_ADC_StartConversion 0025  
         __end_of_INTERRUPT_Initialize 1576                I2C1_MasterWrite@trBlock 00AC  
                        __pidataCOMRAM 1678                      __size_of_TMR0_ISR 0002  
                    __size_of_TMR1_ISR 0002               I2C1_Stop@completion_code 0025  
                    __size_of_TMR2_ISR 0002                      __size_of_TMR3_ISR 0028  
                       _ADC_Initialize 15AA                 ?_OSCILLATOR_Initialize 0025  
                         _SetDDRamAddr 12C8                     SetDDRamAddr@DDaddr 003F  
                  start_initialization 131A                            ??_I2C1_Stop 0025  
      __size_of_PIN_MANAGER_Initialize 001A                        _XLCD_Initialize 13DC  
                    __size_of_BusyXLCD 003A               __size_of_PIN_MANAGER_IOC 0002  
                      ??_DelayFor18TCY 003C                  ??_ADC_StartConversion 003C  
                    __size_of_OpenXLCD 00A4                          ?_WriteCmdXLCD 0025  
               __end_of_ADC_Initialize 15C4                       __CFG_LPT1OSC$OFF 000000  
                             ?_ADC_ISR 0025                         _eusart1RxCount 001B  
                          __pbssCOMRAM 0001          __size_of_EUSART1_Transmit_ISR 002E  
                        __pcstackBANK0 00BF                          _i2c1_tr_queue 00B2  
  INTERRUPT_InterruptManager@__portb__ 003B                ??_I2C1_FunctionComplete 0025  
                    __size_of_enemigo1 0028                      __size_of_enemigo2 0028  
         __size_of_EUSART1_Receive_ISR 000A                            sprintf@flag 00CE  
                          sprintf@prec 00CF                      __size_of_marcador 01CC  
                 __end_of_restarPuntos 116A                         putsXLCD@buffer 003D  
                     ___lwdiv@dividend 003C                 _PIN_MANAGER_Initialize 1590  
                            __pintcode 0008                         ??_WriteCmdXLCD 003C  
                        ?_Delay10KTCYx 0025                               ?___lwdiv 003C  
                             ?___lwmod 00C2                        ?_ADC_Initialize 0025  
                             _I2C1_ISR 0816           ??_INTERRUPT_InterruptManager 0029  
                    __size_of_putsXLCD 002E                  __end_of_WriteDataXLCD 139E  
              __end_of_XLCD_Initialize 1418                            __smallconst 0800  
                             _ADC_Flag 0021                       ___lwdiv@quotient 00C0  
                             ?_sprintf 00C6                         __size_of_drive 01B4  
                 _INTERRUPT_Initialize 155A                 I2C1_MasterRead@trBlock 00A6  
                             _LATDbits 000F8C                               _IPR1bits 000F9F  
                             _IPR2bits 000FA2                               _PIE1bits 000F9D  
                             _PIE2bits 000FA0                          ?_DelayPORXLCD 0025  
  __size_of_INTERRUPT_InterruptManager 1098                               _PIR1bits 000F9E  
                      OpenXLCD@lcdtype 0040                               _PIR2bits 000FA1  
                     __CFG_WDTPS$32768 000000                         ??_Delay10KTCYx 003C  
                             _D_Buffer 00BD                               _TMR0_ISR 1684  
                             _TMR1_ISR 1682                               _TMR2_ISR 1680  
                             _TMR3_ISR 1532                      ??_PIN_MANAGER_IOC 0025  
                     __size_of_ADC_ISR 0012                             _ADCON0bits 000FC2  
                           _ADCON1bits 000FC1                              _putrsXLCD 1452  
                     Delay10KTCYx@unit 003D                            _INTCON2bits 000FF1  
                          _INTCON3bits 000FF0                              copy_data0 132E  
                ?_INTERRUPT_Initialize 0025              __size_of_PIN_MANAGER_INT0 0002  
            __size_of_PIN_MANAGER_INT1 0002              __size_of_PIN_MANAGER_INT2 0002  
                             _BusyXLCD 1418                         ??_DelayPORXLCD 003C  
                           _EECON1bits 000FA6                               _OpenXLCD 116A  
                             __Hrparam 0000          __size_of_I2C1_BusCollisionISR 0002  
                             __Lrparam 0000               ?_ADC_GetConversionResult 0025  
               I2C1_ISR@i2c_bytes_left 0018                ??_OSCILLATOR_Initialize 003C  
                     __size_of___lwdiv 005E                       __size_of___lwmod 005C  
                     ?_XLCD_Initialize 0025                  _TMR1_InterruptHandler 00A4  
                           sprintf@val 00D0                             ?_putrsXLCD 003D  
                      ___lwdiv@divisor 003E                    I2C1_ISR@i2c_address 0023  
                      ___lwdiv@counter 00BF                               __ptext10 1452  
                             __ptext11 1360                               __ptext20 1418  
                             __ptext12 1576                               __ptext21 1668  
                             __ptext13 15DC                               __ptext30 1682  
                             __ptext22 1590                               __ptext14 13DC  
                             __ptext31 1684                               __ptext23 1654  
                             __ptext15 116A                               __ptext40 1690  
                             __ptext32 1686                               __ptext24 155A  
                             __ptext16 139E                               __ptext41 14B4  
                             __ptext33 1688                               __ptext25 15AA  
                             __ptext17 12C8                               __ptext42 165E  
                             __ptext34 168A                               __ptext18 1630  
                             __ptext43 1642                               __ptext35 168C  
                             __ptext27 1532                               __ptext19 15F2  
                             __ptext44 161C                               __ptext36 168E  
                             __ptext28 167E                               __ptext45 0000  
                             __ptext37 0816                               __ptext29 1680  
                             __ptext38 1670                               __ptext39 15C4  
                             _enemigo1 150A                               _enemigo2 14E2  
                 __end_of_WriteCmdXLCD 13DC                  __size_of_restarPuntos 00CA  
                     __size_of_sprintf 017E                               _marcador 0A3C  
                        __size_of_main 0014                               _posEnemy 009A  
                             _posDrive 000E                               int$flags 0048  
                             _putsXLCD 1486     __end_of_INTERRUPT_InterruptManager 10A0  
           _INTERRUPT_InterruptManager 0008   __end_of_TMR3_DefaultInterruptHandler 1680  
__size_of_TMR3_DefaultInterruptHandler 0002           _TMR3_DefaultInterruptHandler 167E  
                  _EUSART1_Receive_ISR 165E                  __CFG_CPUDIV$OSC3_PLL4 000000  
                           _MEMORY_ISR 168E                             _INTCONbits 000FF2  
                         _restarPuntos 10A0                 ??_INTERRUPT_Initialize 003C  
                 __end_of_Delay10KTCYx 1608                               intlevel2 0000  
                            sprintf@ap 00CC                              sprintf@sp 00C6  
                 ?_EUSART1_Receive_ISR 0025            __end_of_ADC_StartConversion 1590  
                     ___lwmod@dividend 00C2                ?_PIN_MANAGER_Initialize 0025  
      __end_of_ADC_GetConversionResult 1630         __size_of_I2C1_FunctionComplete 0018  
                           _RCSTA1bits 000FAB          __end_of_I2C1_FunctionComplete 15DC  
         __end_of_EUSART1_Transmit_ISR 14E2                       ??_ADC_Initialize 003C  
                __end_of_DelayFor18TCY 1670                               sprintf@c 00D2  
                             sprintf@f 00C8          ?_TMR3_DefaultInterruptHandler 0025  
                 __end_of_DelayPORXLCD 1642                            ??_putrsXLCD 003F  
                      ___lwmod@divisor 00C4                        ___lwmod@counter 0040  
                          _SSPCON1bits 000FC6                            _SSPCON2bits 000FC5  
                     _PIN_MANAGER_INT0 168C                       _PIN_MANAGER_INT1 168A  
                     _PIN_MANAGER_INT2 1688                     __CFG_FOSC$HSPLL_HS 000000  
                ??_EUSART1_Receive_ISR 0025         __end_of_PIN_MANAGER_Initialize 15AA  
                   __size_of_I2C1_Stop 0008                        _PIN_MANAGER_IOC 1686  
                _TMR2_InterruptHandler 00A2  
